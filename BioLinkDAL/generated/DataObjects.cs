#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BioLinkDAL {
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "BiolinkDemo")]
    public partial class BiolinkContext : System.Data.Linq.DataContext {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertTALN(TALN instance);
        partial void UpdateTALN(TALN instance);
        partial void DeleteTALN(TALN instance);
        partial void InsertTAssociate(TAssociate instance);
        partial void UpdateTAssociate(TAssociate instance);
        partial void DeleteTAssociate(TAssociate instance);
        partial void InsertTAuditDelete(TAuditDelete instance);
        partial void UpdateTAuditDelete(TAuditDelete instance);
        partial void DeleteTAuditDelete(TAuditDelete instance);
        partial void InsertTAutoNumber(TAutoNumber instance);
        partial void UpdateTAutoNumber(TAutoNumber instance);
        partial void DeleteTAutoNumber(TAutoNumber instance);
        partial void InsertTBiota(TBiota instance);
        partial void UpdateTBiota(TBiota instance);
        partial void DeleteTBiota(TBiota instance);
        partial void InsertTBiotaDefKingdom(TBiotaDefKingdom instance);
        partial void UpdateTBiotaDefKingdom(TBiotaDefKingdom instance);
        partial void DeleteTBiotaDefKingdom(TBiotaDefKingdom instance);
        partial void InsertTBiotaDefRank(TBiotaDefRank instance);
        partial void UpdateTBiotaDefRank(TBiotaDefRank instance);
        partial void DeleteTBiotaDefRank(TBiotaDefRank instance);
        partial void InsertTBiotaDefRules(TBiotaDefRules instance);
        partial void UpdateTBiotaDefRules(TBiotaDefRules instance);
        partial void DeleteTBiotaDefRules(TBiotaDefRules instance);
        partial void InsertTBiotaDistribution(TBiotaDistribution instance);
        partial void UpdateTBiotaDistribution(TBiotaDistribution instance);
        partial void DeleteTBiotaDistribution(TBiotaDistribution instance);
        partial void InsertTBiotaLocation(TBiotaLocation instance);
        partial void UpdateTBiotaLocation(TBiotaLocation instance);
        partial void DeleteTBiotaLocation(TBiotaLocation instance);
        partial void InsertTBiotaStorage(TBiotaStorage instance);
        partial void UpdateTBiotaStorage(TBiotaStorage instance);
        partial void DeleteTBiotaStorage(TBiotaStorage instance);
        partial void InsertTCharacter(TCharacter instance);
        partial void UpdateTCharacter(TCharacter instance);
        partial void DeleteTCharacter(TCharacter instance);
        partial void InsertTCharacterDependancy(TCharacterDependancy instance);
        partial void UpdateTCharacterDependancy(TCharacterDependancy instance);
        partial void DeleteTCharacterDependancy(TCharacterDependancy instance);
        partial void InsertTCharacterGroup(TCharacterGroup instance);
        partial void UpdateTCharacterGroup(TCharacterGroup instance);
        partial void DeleteTCharacterGroup(TCharacterGroup instance);
        partial void InsertTCharacterNumeric(TCharacterNumeric instance);
        partial void UpdateTCharacterNumeric(TCharacterNumeric instance);
        partial void DeleteTCharacterNumeric(TCharacterNumeric instance);
        partial void InsertTCharacterState(TCharacterState instance);
        partial void UpdateTCharacterState(TCharacterState instance);
        partial void DeleteTCharacterState(TCharacterState instance);
        partial void InsertTCommonName(TCommonName instance);
        partial void UpdateTCommonName(TCommonName instance);
        partial void DeleteTCommonName(TCommonName instance);
        partial void InsertTCurationEvent(TCurationEvent instance);
        partial void UpdateTCurationEvent(TCurationEvent instance);
        partial void DeleteTCurationEvent(TCurationEvent instance);
        partial void InsertTDarwinCoreV1(TDarwinCoreV1 instance);
        partial void UpdateTDarwinCoreV1(TDarwinCoreV1 instance);
        partial void DeleteTDarwinCoreV1(TDarwinCoreV1 instance);
        partial void InsertTDichotomousKeyItem(TDichotomousKeyItem instance);
        partial void UpdateTDichotomousKeyItem(TDichotomousKeyItem instance);
        partial void DeleteTDichotomousKeyItem(TDichotomousKeyItem instance);
        partial void InsertTDistributionRegion(TDistributionRegion instance);
        partial void UpdateTDistributionRegion(TDistributionRegion instance);
        partial void DeleteTDistributionRegion(TDistributionRegion instance);
        partial void InsertTFavorite(TFavorite instance);
        partial void UpdateTFavorite(TFavorite instance);
        partial void DeleteTFavorite(TFavorite instance);
        partial void InsertTGAN(TGAN instance);
        partial void UpdateTGAN(TGAN instance);
        partial void DeleteTGAN(TGAN instance);
        partial void InsertTGANIncludedSpecies(TGANIncludedSpecies instance);
        partial void UpdateTGANIncludedSpecies(TGANIncludedSpecies instance);
        partial void DeleteTGANIncludedSpecies(TGANIncludedSpecies instance);
        partial void InsertTGroup(TGroup instance);
        partial void UpdateTGroup(TGroup instance);
        partial void DeleteTGroup(TGroup instance);
        partial void InsertTGroupPermission(TGroupPermission instance);
        partial void UpdateTGroupPermission(TGroupPermission instance);
        partial void DeleteTGroupPermission(TGroupPermission instance);
        partial void InsertTJournal(TJournal instance);
        partial void UpdateTJournal(TJournal instance);
        partial void DeleteTJournal(TJournal instance);
        partial void InsertTKeyword(TKeyword instance);
        partial void UpdateTKeyword(TKeyword instance);
        partial void DeleteTKeyword(TKeyword instance);
        partial void InsertTKeywordType(TKeywordType instance);
        partial void UpdateTKeywordType(TKeywordType instance);
        partial void DeleteTKeywordType(TKeywordType instance);
        partial void InsertTLabelSet(TLabelSet instance);
        partial void UpdateTLabelSet(TLabelSet instance);
        partial void DeleteTLabelSet(TLabelSet instance);
        partial void InsertTLabelSetItem(TLabelSetItem instance);
        partial void UpdateTLabelSetItem(TLabelSetItem instance);
        partial void DeleteTLabelSetItem(TLabelSetItem instance);
        partial void InsertTLoan(TLoan instance);
        partial void UpdateTLoan(TLoan instance);
        partial void DeleteTLoan(TLoan instance);
        partial void InsertTLoanCorrespondence(TLoanCorrespondence instance);
        partial void UpdateTLoanCorrespondence(TLoanCorrespondence instance);
        partial void DeleteTLoanCorrespondence(TLoanCorrespondence instance);
        partial void InsertTLoanMaterial(TLoanMaterial instance);
        partial void UpdateTLoanMaterial(TLoanMaterial instance);
        partial void DeleteTLoanMaterial(TLoanMaterial instance);
        partial void InsertTLoanReminder(TLoanReminder instance);
        partial void UpdateTLoanReminder(TLoanReminder instance);
        partial void DeleteTLoanReminder(TLoanReminder instance);
        partial void InsertTMaterial(TMaterial instance);
        partial void UpdateTMaterial(TMaterial instance);
        partial void DeleteTMaterial(TMaterial instance);
        partial void InsertTMaterialIdentification(TMaterialIdentification instance);
        partial void UpdateTMaterialIdentification(TMaterialIdentification instance);
        partial void DeleteTMaterialIdentification(TMaterialIdentification instance);
        partial void InsertTMaterialPart(TMaterialPart instance);
        partial void UpdateTMaterialPart(TMaterialPart instance);
        partial void DeleteTMaterialPart(TMaterialPart instance);
        partial void InsertTMorphologyCell(TMorphologyCell instance);
        partial void UpdateTMorphologyCell(TMorphologyCell instance);
        partial void DeleteTMorphologyCell(TMorphologyCell instance);
        partial void InsertTMorphologyCellState(TMorphologyCellState instance);
        partial void UpdateTMorphologyCellState(TMorphologyCellState instance);
        partial void DeleteTMorphologyCellState(TMorphologyCellState instance);
        partial void InsertTMorphologyEntity(TMorphologyEntity instance);
        partial void UpdateTMorphologyEntity(TMorphologyEntity instance);
        partial void DeleteTMorphologyEntity(TMorphologyEntity instance);
        partial void InsertTMorphologyProject(TMorphologyProject instance);
        partial void UpdateTMorphologyProject(TMorphologyProject instance);
        partial void DeleteTMorphologyProject(TMorphologyProject instance);
        partial void InsertTMorphologyProjectCharacter(TMorphologyProjectCharacter instance);
        partial void UpdateTMorphologyProjectCharacter(TMorphologyProjectCharacter instance);
        partial void DeleteTMorphologyProjectCharacter(TMorphologyProjectCharacter instance);
        partial void InsertTMorphologyProjectCharGroup(TMorphologyProjectCharGroup instance);
        partial void UpdateTMorphologyProjectCharGroup(TMorphologyProjectCharGroup instance);
        partial void DeleteTMorphologyProjectCharGroup(TMorphologyProjectCharGroup instance);
        partial void InsertTMorphologyProjectEntity(TMorphologyProjectEntity instance);
        partial void UpdateTMorphologyProjectEntity(TMorphologyProjectEntity instance);
        partial void DeleteTMorphologyProjectEntity(TMorphologyProjectEntity instance);
        partial void InsertTMorphologyProjectGroup(TMorphologyProjectGroup instance);
        partial void UpdateTMorphologyProjectGroup(TMorphologyProjectGroup instance);
        partial void DeleteTMorphologyProjectGroup(TMorphologyProjectGroup instance);
        partial void InsertTMorphologyProjectMiscItem(TMorphologyProjectMiscItem instance);
        partial void UpdateTMorphologyProjectMiscItem(TMorphologyProjectMiscItem instance);
        partial void DeleteTMorphologyProjectMiscItem(TMorphologyProjectMiscItem instance);
        partial void InsertTMorphologyProjectView(TMorphologyProjectView instance);
        partial void UpdateTMorphologyProjectView(TMorphologyProjectView instance);
        partial void DeleteTMorphologyProjectView(TMorphologyProjectView instance);
        partial void InsertTMorphologyView(TMorphologyView instance);
        partial void UpdateTMorphologyView(TMorphologyView instance);
        partial void DeleteTMorphologyView(TMorphologyView instance);
        partial void InsertTMorphologyViewAlias(TMorphologyViewAlias instance);
        partial void UpdateTMorphologyViewAlias(TMorphologyViewAlias instance);
        partial void DeleteTMorphologyViewAlias(TMorphologyViewAlias instance);
        partial void InsertTMorphologyViewGroup(TMorphologyViewGroup instance);
        partial void UpdateTMorphologyViewGroup(TMorphologyViewGroup instance);
        partial void DeleteTMorphologyViewGroup(TMorphologyViewGroup instance);
        partial void InsertTMultimedia(TMultimedia instance);
        partial void UpdateTMultimedia(TMultimedia instance);
        partial void DeleteTMultimedia(TMultimedia instance);
        partial void InsertTMultimediaType(TMultimediaType instance);
        partial void UpdateTMultimediaType(TMultimediaType instance);
        partial void DeleteTMultimediaType(TMultimediaType instance);
        partial void InsertTNote(TNote instance);
        partial void UpdateTNote(TNote instance);
        partial void DeleteTNote(TNote instance);
        partial void InsertTNoteType(TNoteType instance);
        partial void UpdateTNoteType(TNoteType instance);
        partial void DeleteTNoteType(TNoteType instance);
        partial void InsertTPhrase(TPhrase instance);
        partial void UpdateTPhrase(TPhrase instance);
        partial void DeleteTPhrase(TPhrase instance);
        partial void InsertTPhraseCategory(TPhraseCategory instance);
        partial void UpdateTPhraseCategory(TPhraseCategory instance);
        partial void DeleteTPhraseCategory(TPhraseCategory instance);
        partial void InsertTPoliticalRegion(TPoliticalRegion instance);
        partial void UpdateTPoliticalRegion(TPoliticalRegion instance);
        partial void DeleteTPoliticalRegion(TPoliticalRegion instance);
        partial void InsertTPublication(TPublication instance);
        partial void UpdateTPublication(TPublication instance);
        partial void DeleteTPublication(TPublication instance);
        partial void InsertTReference(TReference instance);
        partial void UpdateTReference(TReference instance);
        partial void DeleteTReference(TReference instance);
        partial void InsertTRefLink(TRefLink instance);
        partial void UpdateTRefLink(TRefLink instance);
        partial void DeleteTRefLink(TRefLink instance);
        partial void InsertTRefLinkType(TRefLinkType instance);
        partial void UpdateTRefLinkType(TRefLinkType instance);
        partial void DeleteTRefLinkType(TRefLinkType instance);
        partial void InsertTReport(TReport instance);
        partial void UpdateTReport(TReport instance);
        partial void DeleteTReport(TReport instance);
        partial void InsertTSAN(TSAN instance);
        partial void UpdateTSAN(TSAN instance);
        partial void DeleteTSAN(TSAN instance);
        partial void InsertTSANTypeData(TSANTypeData instance);
        partial void UpdateTSANTypeData(TSANTypeData instance);
        partial void DeleteTSANTypeData(TSANTypeData instance);
        partial void InsertTSANTypeDataType(TSANTypeDataType instance);
        partial void UpdateTSANTypeDataType(TSANTypeDataType instance);
        partial void DeleteTSANTypeDataType(TSANTypeDataType instance);
        partial void InsertTSetting(TSetting instance);
        partial void UpdateTSetting(TSetting instance);
        partial void DeleteTSetting(TSetting instance);
        partial void InsertTSite(TSite instance);
        partial void UpdateTSite(TSite instance);
        partial void DeleteTSite(TSite instance);
        partial void InsertTSiteGroup(TSiteGroup instance);
        partial void UpdateTSiteGroup(TSiteGroup instance);
        partial void DeleteTSiteGroup(TSiteGroup instance);
        partial void InsertTSiteVisit(TSiteVisit instance);
        partial void UpdateTSiteVisit(TSiteVisit instance);
        partial void DeleteTSiteVisit(TSiteVisit instance);
        partial void InsertTTrait(TTrait instance);
        partial void UpdateTTrait(TTrait instance);
        partial void DeleteTTrait(TTrait instance);
        partial void InsertTTraitCategory(TTraitCategory instance);
        partial void UpdateTTraitCategory(TTraitCategory instance);
        partial void DeleteTTraitCategory(TTraitCategory instance);
        partial void InsertTTraitDefault(TTraitDefault instance);
        partial void UpdateTTraitDefault(TTraitDefault instance);
        partial void DeleteTTraitDefault(TTraitDefault instance);
        partial void InsertTTraitType(TTraitType instance);
        partial void UpdateTTraitType(TTraitType instance);
        partial void DeleteTTraitType(TTraitType instance);
        partial void InsertTTraitTypeToCategory(TTraitTypeToCategory instance);
        partial void UpdateTTraitTypeToCategory(TTraitTypeToCategory instance);
        partial void DeleteTTraitTypeToCategory(TTraitTypeToCategory instance);
        partial void InsertTTrap(TTrap instance);
        partial void UpdateTTrap(TTrap instance);
        partial void DeleteTTrap(TTrap instance);
        partial void InsertTUser(TUser instance);
        partial void UpdateTUser(TUser instance);
        partial void DeleteTUser(TUser instance);
        partial void InsertTUserPermission(TUserPermission instance);
        partial void UpdateTUserPermission(TUserPermission instance);
        partial void DeleteTUserPermission(TUserPermission instance);
        #endregion

        public BiolinkContext(string connection) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public BiolinkContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public BiolinkContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public BiolinkContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource) {
            OnCreated();
        }

        public System.Data.Linq.Table<TALN> ALN {
            get {
                return this.GetTable<TALN>();
            }
        }

        public System.Data.Linq.Table<TAssociate> Associate {
            get {
                return this.GetTable<TAssociate>();
            }
        }

        public System.Data.Linq.Table<TAuditDelete> AuditDelete {
            get {
                return this.GetTable<TAuditDelete>();
            }
        }

        public System.Data.Linq.Table<TAutoNumber> AutoNumber {
            get {
                return this.GetTable<TAutoNumber>();
            }
        }

        public System.Data.Linq.Table<TBiota> Biota {
            get {
                return this.GetTable<TBiota>();
            }
        }

        public System.Data.Linq.Table<TBiotaDefKingdom> BiotaDefKingdom {
            get {
                return this.GetTable<TBiotaDefKingdom>();
            }
        }

        public System.Data.Linq.Table<TBiotaDefRank> BiotaDefRank {
            get {
                return this.GetTable<TBiotaDefRank>();
            }
        }

        public System.Data.Linq.Table<TBiotaDefRules> BiotaDefRules {
            get {
                return this.GetTable<TBiotaDefRules>();
            }
        }

        public System.Data.Linq.Table<TBiotaDistribution> BiotaDistribution {
            get {
                return this.GetTable<TBiotaDistribution>();
            }
        }

        public System.Data.Linq.Table<TBiotaLocation> BiotaLocation {
            get {
                return this.GetTable<TBiotaLocation>();
            }
        }

        public System.Data.Linq.Table<TBiotaStorage> BiotaStorage {
            get {
                return this.GetTable<TBiotaStorage>();
            }
        }

        public System.Data.Linq.Table<TCharacter> Character {
            get {
                return this.GetTable<TCharacter>();
            }
        }

        public System.Data.Linq.Table<TCharacterDependancy> CharacterDependancy {
            get {
                return this.GetTable<TCharacterDependancy>();
            }
        }

        public System.Data.Linq.Table<TCharacterGroup> CharacterGroup {
            get {
                return this.GetTable<TCharacterGroup>();
            }
        }

        public System.Data.Linq.Table<TCharacterNumeric> CharacterNumeric {
            get {
                return this.GetTable<TCharacterNumeric>();
            }
        }

        public System.Data.Linq.Table<TCharacterState> CharacterState {
            get {
                return this.GetTable<TCharacterState>();
            }
        }

        public System.Data.Linq.Table<TCommonName> CommonName {
            get {
                return this.GetTable<TCommonName>();
            }
        }

        public System.Data.Linq.Table<TContact> Contact {
            get {
                return this.GetTable<TContact>();
            }
        }

        public System.Data.Linq.Table<TCurationEvent> CurationEvent {
            get {
                return this.GetTable<TCurationEvent>();
            }
        }

        public System.Data.Linq.Table<TDarwinCoreV1> DarwinCoreV1 {
            get {
                return this.GetTable<TDarwinCoreV1>();
            }
        }

        public System.Data.Linq.Table<TDichotomousKeyItem> DichotomousKeyItem {
            get {
                return this.GetTable<TDichotomousKeyItem>();
            }
        }

        public System.Data.Linq.Table<TDistributionRegion> DistributionRegion {
            get {
                return this.GetTable<TDistributionRegion>();
            }
        }

        public System.Data.Linq.Table<TFavorite> Favorite {
            get {
                return this.GetTable<TFavorite>();
            }
        }

        public System.Data.Linq.Table<TGAN> GAN {
            get {
                return this.GetTable<TGAN>();
            }
        }

        public System.Data.Linq.Table<TGANIncludedSpecies> GANIncludedSpecies {
            get {
                return this.GetTable<TGANIncludedSpecies>();
            }
        }

        public System.Data.Linq.Table<TGroup> Group {
            get {
                return this.GetTable<TGroup>();
            }
        }

        public System.Data.Linq.Table<TGroupPermission> GroupPermission {
            get {
                return this.GetTable<TGroupPermission>();
            }
        }

        public System.Data.Linq.Table<TJournal> Journal {
            get {
                return this.GetTable<TJournal>();
            }
        }

        public System.Data.Linq.Table<TKeyword> Keyword {
            get {
                return this.GetTable<TKeyword>();
            }
        }

        public System.Data.Linq.Table<TKeywordType> KeywordType {
            get {
                return this.GetTable<TKeywordType>();
            }
        }

        public System.Data.Linq.Table<TLabelSet> LabelSet {
            get {
                return this.GetTable<TLabelSet>();
            }
        }

        public System.Data.Linq.Table<TLabelSetItem> LabelSetItem {
            get {
                return this.GetTable<TLabelSetItem>();
            }
        }

        public System.Data.Linq.Table<TLoan> Loan {
            get {
                return this.GetTable<TLoan>();
            }
        }

        public System.Data.Linq.Table<TLoanCorrespondence> LoanCorrespondence {
            get {
                return this.GetTable<TLoanCorrespondence>();
            }
        }

        public System.Data.Linq.Table<TLoanMaterial> LoanMaterial {
            get {
                return this.GetTable<TLoanMaterial>();
            }
        }

        public System.Data.Linq.Table<TLoanReminder> LoanReminder {
            get {
                return this.GetTable<TLoanReminder>();
            }
        }

        public System.Data.Linq.Table<TMaterial> Material {
            get {
                return this.GetTable<TMaterial>();
            }
        }

        public System.Data.Linq.Table<TMaterialIdentification> MaterialIdentification {
            get {
                return this.GetTable<TMaterialIdentification>();
            }
        }

        public System.Data.Linq.Table<TMaterialPart> MaterialPart {
            get {
                return this.GetTable<TMaterialPart>();
            }
        }

        public System.Data.Linq.Table<TMorphologyCell> MorphologyCell {
            get {
                return this.GetTable<TMorphologyCell>();
            }
        }

        public System.Data.Linq.Table<TMorphologyCellNumeric> MorphologyCellNumeric {
            get {
                return this.GetTable<TMorphologyCellNumeric>();
            }
        }

        public System.Data.Linq.Table<TMorphologyCellState> MorphologyCellState {
            get {
                return this.GetTable<TMorphologyCellState>();
            }
        }

        public System.Data.Linq.Table<TMorphologyEntity> MorphologyEntity {
            get {
                return this.GetTable<TMorphologyEntity>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProject> MorphologyProject {
            get {
                return this.GetTable<TMorphologyProject>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProjectCharacter> MorphologyProjectCharacter {
            get {
                return this.GetTable<TMorphologyProjectCharacter>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProjectCharGroup> MorphologyProjectCharGroup {
            get {
                return this.GetTable<TMorphologyProjectCharGroup>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProjectEntity> MorphologyProjectEntity {
            get {
                return this.GetTable<TMorphologyProjectEntity>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProjectGroup> MorphologyProjectGroup {
            get {
                return this.GetTable<TMorphologyProjectGroup>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProjectMiscItem> MorphologyProjectMiscItem {
            get {
                return this.GetTable<TMorphologyProjectMiscItem>();
            }
        }

        public System.Data.Linq.Table<TMorphologyProjectView> MorphologyProjectView {
            get {
                return this.GetTable<TMorphologyProjectView>();
            }
        }

        public System.Data.Linq.Table<TMorphologyView> MorphologyView {
            get {
                return this.GetTable<TMorphologyView>();
            }
        }

        public System.Data.Linq.Table<TMorphologyViewAlias> MorphologyViewAlias {
            get {
                return this.GetTable<TMorphologyViewAlias>();
            }
        }

        public System.Data.Linq.Table<TMorphologyViewGroup> MorphologyViewGroup {
            get {
                return this.GetTable<TMorphologyViewGroup>();
            }
        }

        public System.Data.Linq.Table<TMultimedia> Multimedia {
            get {
                return this.GetTable<TMultimedia>();
            }
        }

        public System.Data.Linq.Table<TMultimediaLink> MultimediaLink {
            get {
                return this.GetTable<TMultimediaLink>();
            }
        }

        public System.Data.Linq.Table<TMultimediaType> MultimediaType {
            get {
                return this.GetTable<TMultimediaType>();
            }
        }

        public System.Data.Linq.Table<TNote> Note {
            get {
                return this.GetTable<TNote>();
            }
        }

        public System.Data.Linq.Table<TNoteType> NoteType {
            get {
                return this.GetTable<TNoteType>();
            }
        }

        public System.Data.Linq.Table<TPhrase> Phrase {
            get {
                return this.GetTable<TPhrase>();
            }
        }

        public System.Data.Linq.Table<TPhraseCategory> PhraseCategory {
            get {
                return this.GetTable<TPhraseCategory>();
            }
        }

        public System.Data.Linq.Table<TPoliticalRegion> PoliticalRegion {
            get {
                return this.GetTable<TPoliticalRegion>();
            }
        }

        public System.Data.Linq.Table<TPublication> Publication {
            get {
                return this.GetTable<TPublication>();
            }
        }

        public System.Data.Linq.Table<TReference> Reference {
            get {
                return this.GetTable<TReference>();
            }
        }

        public System.Data.Linq.Table<TRefLink> RefLink {
            get {
                return this.GetTable<TRefLink>();
            }
        }

        public System.Data.Linq.Table<TRefLinkType> RefLinkType {
            get {
                return this.GetTable<TRefLinkType>();
            }
        }

        public System.Data.Linq.Table<TReport> Report {
            get {
                return this.GetTable<TReport>();
            }
        }

        public System.Data.Linq.Table<TSAN> SAN {
            get {
                return this.GetTable<TSAN>();
            }
        }

        public System.Data.Linq.Table<TSANTypeData> SANTypeData {
            get {
                return this.GetTable<TSANTypeData>();
            }
        }

        public System.Data.Linq.Table<TSANTypeDataType> SANTypeDataType {
            get {
                return this.GetTable<TSANTypeDataType>();
            }
        }

        public System.Data.Linq.Table<TSetting> Setting {
            get {
                return this.GetTable<TSetting>();
            }
        }

        public System.Data.Linq.Table<TSite> Site {
            get {
                return this.GetTable<TSite>();
            }
        }

        public System.Data.Linq.Table<TSiteGroup> SiteGroup {
            get {
                return this.GetTable<TSiteGroup>();
            }
        }

        public System.Data.Linq.Table<TSiteVisit> SiteVisit {
            get {
                return this.GetTable<TSiteVisit>();
            }
        }

        public System.Data.Linq.Table<TTrait> Trait {
            get {
                return this.GetTable<TTrait>();
            }
        }

        public System.Data.Linq.Table<TTraitCategory> TraitCategory {
            get {
                return this.GetTable<TTraitCategory>();
            }
        }

        public System.Data.Linq.Table<TTraitDefault> TraitDefault {
            get {
                return this.GetTable<TTraitDefault>();
            }
        }

        public System.Data.Linq.Table<TTraitType> TraitType {
            get {
                return this.GetTable<TTraitType>();
            }
        }

        public System.Data.Linq.Table<TTraitTypeToCategory> TraitTypeToCategory {
            get {
                return this.GetTable<TTraitTypeToCategory>();
            }
        }

        public System.Data.Linq.Table<TTrap> Trap {
            get {
                return this.GetTable<TTrap>();
            }
        }

        public System.Data.Linq.Table<TUser> User {
            get {
                return this.GetTable<TUser>();
            }
        }

        public System.Data.Linq.Table<TUserPermission> UserPermission {
            get {
                return this.GetTable<TUserPermission>();
            }
        }

        [Function(Name = "dbo.spALNGet")]
        public ISingleResult<SpALNGetResult> SpALNGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpALNGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spALNInsertUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpALNInsertUpdate([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "VarChar(255)")] string vchrAvailableNameStatus, [Parameter(DbType = "Text")] string txtRefQual) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, intRefID, vchrRefPage, vchrAvailableNameStatus, txtRefQual);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAlternateNamesList")]
        public ISingleResult<SpAlternateNamesListResult> SpAlternateNamesList([Parameter(DbType = "Char(1)")] string chrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrCategory, intIntraCatID);
            return ((ISingleResult<SpAlternateNamesListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAssociateDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpAssociateDelete([Parameter(DbType = "Int")] System.Nullable<int> intAssociateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intAssociateID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAssociateInsert")]
        public ISingleResult<SpAssociateInsertResult> SpAssociateInsert([Parameter(DbType = "Int")] System.Nullable<int> intFromIntraCatID, [Parameter(Name = "FromCategory", DbType = "VarChar(50)")] string fromCategory, [Parameter(DbType = "Int")] System.Nullable<int> intToIntraCatID, [Parameter(Name = "ToCategory", DbType = "VarChar(50)")] string toCategory, [Parameter(DbType = "Text")] string txtAssocDescription, [Parameter(DbType = "VarChar(50)")] string vchrRelationFromTo, [Parameter(DbType = "VarChar(50)")] string vchrRelationToFrom, [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID, [Parameter(DbType = "VarChar(50)")] string vchrSource, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(255)")] string vchrRefPage, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUncertain, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFromIntraCatID, fromCategory, intToIntraCatID, toCategory, txtAssocDescription, vchrRelationFromTo, vchrRelationToFrom, intPoliticalRegionID, vchrSource, intRefID, vchrRefPage, bitUncertain, txtNotes);
            return ((ISingleResult<SpAssociateInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAssociatesCopy")]
        [return: Parameter(DbType = "Int")]
        public int SpAssociatesCopy([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intBasedOnID, [Parameter(DbType = "Int")] System.Nullable<int> intNewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intBasedOnID, intNewID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAssociateUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpAssociateUpdate([Parameter(DbType = "Int")] System.Nullable<int> intAssociateID, [Parameter(DbType = "Int")] System.Nullable<int> intFromIntraCatID, [Parameter(Name = "FromCategory", DbType = "VarChar(50)")] string fromCategory, [Parameter(DbType = "Int")] System.Nullable<int> intToIntraCatID, [Parameter(Name = "ToCategory", DbType = "VarChar(50)")] string toCategory, [Parameter(DbType = "Text")] string txtAssocDescription, [Parameter(DbType = "VarChar(50)")] string vchrRelationFromTo, [Parameter(DbType = "VarChar(50)")] string vchrRelationToFrom, [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID, [Parameter(DbType = "VarChar(50)")] string vchrSource, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(255)")] string vchrRefPage, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUncertain, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intAssociateID, intFromIntraCatID, fromCategory, intToIntraCatID, toCategory, txtAssocDescription, vchrRelationFromTo, vchrRelationToFrom, intPoliticalRegionID, vchrSource, intRefID, vchrRefPage, bitUncertain, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAutoNumberCatList")]
        public ISingleResult<SpAutoNumberCatListResult> SpAutoNumberCatList([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpAutoNumberCatListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAutoNumberDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpAutoNumberDelete([Parameter(DbType = "Int")] System.Nullable<int> intAutoNumberCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intAutoNumberCatID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAutoNumberGetNext")]
        public ISingleResult<SpAutoNumberGetNextResult> SpAutoNumberGetNext([Parameter(DbType = "Int")] System.Nullable<int> intAutoNumberCatID, [Parameter(DbType = "Int")] System.Nullable<int> intSeed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intAutoNumberCatID, intSeed);
            return ((ISingleResult<SpAutoNumberGetNextResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAutoNumberInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpAutoNumberInsert([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(50)")] string vchrName, [Parameter(DbType = "VarChar(50)")] string vchrPrefix, [Parameter(DbType = "VarChar(50)")] string vchrPostfix, [Parameter(DbType = "Int")] System.Nullable<int> intNumLeadingZeros, [Parameter(DbType = "Bit")] System.Nullable<bool> bitEnsureUnique) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, vchrName, vchrPrefix, vchrPostfix, intNumLeadingZeros, bitEnsureUnique);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spAutoNumberUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpAutoNumberUpdate([Parameter(DbType = "Int")] System.Nullable<int> intAutoNumberCatID, [Parameter(DbType = "VarChar(50)")] string vchrName, [Parameter(DbType = "VarChar(50)")] string vchrPrefix, [Parameter(DbType = "VarChar(50)")] string vchrPostfix, [Parameter(DbType = "Int")] System.Nullable<int> intNumLeadingZeros, [Parameter(DbType = "Bit")] System.Nullable<bool> bitEnsureUnique) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intAutoNumberCatID, vchrName, vchrPrefix, vchrPostfix, intNumLeadingZeros, bitEnsureUnique);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaAvLitChange")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaAvLitChange([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Bit")] System.Nullable<bool> bitAvailableName, [Parameter(DbType = "Bit")] System.Nullable<bool> bitLiteratureName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, bitAvailableName, bitLiteratureName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaBuildFullName")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaBuildFullName([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(500)")] ref string vchrBiotaFullName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrBiotaFullName);
            vchrBiotaFullName = ((string)(result.GetParameterValue(1)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDefKingdomGet")]
        public ISingleResult<SpBiotaDefKingdomGetResult> SpBiotaDefKingdomGet([Parameter(DbType = "VarChar(10)")] string vchrKingdom) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrKingdom);
            return ((ISingleResult<SpBiotaDefKingdomGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDefKingdomList")]
        public ISingleResult<SpBiotaDefKingdomListResult> SpBiotaDefKingdomList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpBiotaDefKingdomListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDefRankGet")]
        public ISingleResult<SpBiotaDefRankGetResult> SpBiotaDefRankGet([Parameter(DbType = "Char(20)")] string chrCode) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrCode);
            return ((ISingleResult<SpBiotaDefRankGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDefRankGetAll")]
        public ISingleResult<SpBiotaDefRankGetAllResult> SpBiotaDefRankGetAll() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpBiotaDefRankGetAllResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDefRulesGet")]
        public ISingleResult<SpBiotaDefRulesGetResult> SpBiotaDefRulesGet([Parameter(DbType = "VarChar(20)")] string vchrRank, [Parameter(DbType = "VarChar(10)")] string vchrKingdom) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRank, vchrKingdom);
            return ((ISingleResult<SpBiotaDefRulesGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaDelete([Parameter(DbType = "Int")] System.Nullable<int> intTaxaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTaxaID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaDistDeleteAll")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaDistDeleteAll([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGet")]
        public ISingleResult<SpBiotaGetResult> SpBiotaGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetAllWithRank")]
        public ISingleResult<SpBiotaGetAllWithRankResult> SpBiotaGetAllWithRank([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetAllWithRankResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetChildrenID")]
        public ISingleResult<SpBiotaGetChildrenIDResult> SpBiotaGetChildrenID([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpBiotaGetChildrenIDResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetDistQual")]
        public ISingleResult<SpBiotaGetDistQualResult> SpBiotaGetDistQual([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetDistQualResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetDistribution")]
        public ISingleResult<SpBiotaGetDistributionResult> SpBiotaGetDistribution([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetDistributionResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetOwnership")]
        public ISingleResult<SpBiotaGetOwnershipResult> SpBiotaGetOwnership([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetOwnershipResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetParentage")]
        public ISingleResult<SpBiotaGetParentageResult> SpBiotaGetParentage([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetParentageResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaGetTypeAndDesc")]
        public ISingleResult<SpBiotaGetTypeAndDescResult> SpBiotaGetTypeAndDesc([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaGetTypeAndDescResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaImport")]
        public ISingleResult<SpBiotaImportResult> SpBiotaImport([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(200)")] string vchrEpithet, [Parameter(DbType = "VarChar(200)")] string vchrAuthor, [Parameter(DbType = "VarChar(50)")] string vchrYearOfPub, [Parameter(DbType = "Bit")] System.Nullable<bool> bitChgComb, [Parameter(DbType = "Char(5)")] string chrElemType, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUnplaced, [Parameter(DbType = "VarChar(50)")] string vchrRank, [Parameter(DbType = "Char(2)")] string chrKingdomType, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUnverified, [Parameter(DbType = "VarChar(255)")] string vchrAvailableNameStatus) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrEpithet, vchrAuthor, vchrYearOfPub, bitChgComb, chrElemType, bitUnplaced, vchrRank, chrKingdomType, intOrder, bitUnverified, vchrAvailableNameStatus);
            return ((ISingleResult<SpBiotaImportResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaInsert")]
        public ISingleResult<SpBiotaInsertResult> SpBiotaInsert([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(200)")] string vchrEpithet, [Parameter(DbType = "VarChar(200)")] string vchrAuthor, [Parameter(DbType = "VarChar(50)")] string vchrYearOfPub, [Parameter(DbType = "Bit")] System.Nullable<bool> bitChgComb, [Parameter(DbType = "Char(5)")] string chrElemType, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUnplaced, [Parameter(DbType = "VarChar(50)")] string vchrRank, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUnverified, [Parameter(DbType = "Char(2)")] string chrKingdomCode, [Parameter(DbType = "Bit")] System.Nullable<bool> bitAvailableName, [Parameter(DbType = "Bit")] System.Nullable<bool> bitLiteratureName, [Parameter(DbType = "VarChar(255)")] string vchrAvailableNameStatus) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrEpithet, vchrAuthor, vchrYearOfPub, bitChgComb, chrElemType, bitUnplaced, vchrRank, intOrder, bitUnverified, chrKingdomCode, bitAvailableName, bitLiteratureName, vchrAvailableNameStatus);
            return ((ISingleResult<SpBiotaInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaList")]
        public ISingleResult<SpBiotaListResult> SpBiotaList([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpBiotaListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaListChildren")]
        public ISingleResult<SpBiotaListChildrenResult> SpBiotaListChildren([Parameter(DbType = "Int")] System.Nullable<int> intParentBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentBiotaID);
            return ((ISingleResult<SpBiotaListChildrenResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaListFullTree")]
        public ISingleResult<SpBiotaListFullTreeResult> SpBiotaListFullTree([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpBiotaListFullTreeResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaListTop")]
        public ISingleResult<SpBiotaListTopResult> SpBiotaListTop() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpBiotaListTopResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaListTypes")]
        public ISingleResult<SpBiotaListTypesResult> SpBiotaListTypes([Parameter(Name = "BiotaID", DbType = "Int")] System.Nullable<int> biotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), biotaID);
            return ((ISingleResult<SpBiotaListTypesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaLocationDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaLocationDelete([Parameter(DbType = "Int")] System.Nullable<int> intBiotaLocationID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaLocationID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaLocationGet")]
        public ISingleResult<SpBiotaLocationGetResult> SpBiotaLocationGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpBiotaLocationGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaLocationInsert")]
        public ISingleResult<SpBiotaLocationInsertResult> SpBiotaLocationInsert([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, intBiotaStorageID, txtNotes);
            return ((ISingleResult<SpBiotaLocationInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaLocationUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaLocationUpdate([Parameter(DbType = "Int")] System.Nullable<int> intBiotaLocationID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaLocationID, intBiotaID, intBiotaStorageID, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaLookup")]
        public ISingleResult<SpBiotaLookupResult> SpBiotaLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpBiotaLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaLookupValid")]
        public ISingleResult<SpBiotaLookupValidResult> SpBiotaLookupValid([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpBiotaLookupValidResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaMove")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaMove([Parameter(DbType = "Int")] System.Nullable<int> intTaxaID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTaxaID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaPreDeleteMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaPreDeleteMerge([Parameter(DbType = "Int")] System.Nullable<int> intRemovedBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intMergedWithBiotaID, [Parameter(DbType = "Bit")] System.Nullable<bool> bitCreateNewIDRecord) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRemovedBiotaID, intMergedWithBiotaID, bitCreateNewIDRecord);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaRankGetFromLongName")]
        public ISingleResult<SpBiotaRankGetFromLongNameResult> SpBiotaRankGetFromLongName([Parameter(DbType = "VarChar(100)")] string vchrLongName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrLongName);
            return ((ISingleResult<SpBiotaRankGetFromLongNameResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaRankList")]
        public ISingleResult<SpBiotaRankListResult> SpBiotaRankList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpBiotaRankListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaRefreshFullName")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaRefreshFullName() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageBuildFullPath")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaStorageBuildFullPath([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID, [Parameter(DbType = "VarChar(5000)")] ref string vchrRegionFullPath) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID, vchrRegionFullPath);
            vchrRegionFullPath = ((string)(result.GetParameterValue(1)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaStorageDelete([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageFind")]
        public ISingleResult<SpBiotaStorageFindResult> SpBiotaStorageFind([Parameter(DbType = "VarChar(255)")] string vchrBiotaStorageToFind) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrBiotaStorageToFind);
            return ((ISingleResult<SpBiotaStorageFindResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageGetParentage")]
        public ISingleResult<SpBiotaStorageGetParentageResult> SpBiotaStorageGetParentage([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID);
            return ((ISingleResult<SpBiotaStorageGetParentageResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageInsert")]
        public ISingleResult<SpBiotaStorageInsertResult> SpBiotaStorageInsert([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(200)")] string vchrBiotaStorageName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrBiotaStorageName);
            return ((ISingleResult<SpBiotaStorageInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageList")]
        public ISingleResult<SpBiotaStorageListResult> SpBiotaStorageList([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpBiotaStorageListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageListFullTree")]
        public ISingleResult<SpBiotaStorageListFullTreeResult> SpBiotaStorageListFullTree([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpBiotaStorageListFullTreeResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageListTop")]
        public ISingleResult<SpBiotaStorageListTopResult> SpBiotaStorageListTop() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpBiotaStorageListTopResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageMove")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaStorageMove([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageOKToDelete")]
        public ISingleResult<SpBiotaStorageOKToDeleteResult> SpBiotaStorageOKToDelete([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID);
            return ((ISingleResult<SpBiotaStorageOKToDeleteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStoragePreDeleteMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaStoragePreDeleteMerge([Parameter(DbType = "Int")] System.Nullable<int> intRemovedBiotaStorageID, [Parameter(DbType = "Int")] System.Nullable<int> intMergedWithBiotaStorageID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRemovedBiotaStorageID, intMergedWithBiotaStorageID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaStorageUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaStorageUpdate([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID, [Parameter(DbType = "VarChar(200)")] string vchrBiotaStorageName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID, vchrBiotaStorageName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaUpdate([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(200)")] string vchrEpithet, [Parameter(DbType = "VarChar(200)")] string vchrAuthor, [Parameter(DbType = "VarChar(50)")] string vchrYearOfPub, [Parameter(DbType = "Bit")] System.Nullable<bool> bitChgComb, [Parameter(DbType = "Char(5)")] string chrElemType, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUnplaced, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUnverified, [Parameter(DbType = "VarChar(50)")] string vchrRank, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Char(2)")] string chrKingdomCode, [Parameter(DbType = "Bit")] System.Nullable<bool> bitAvailableName, [Parameter(DbType = "Bit")] System.Nullable<bool> bitLiteratureName, [Parameter(DbType = "VarChar(255)")] string vchrAvailableNameStatus) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrEpithet, vchrAuthor, vchrYearOfPub, bitChgComb, chrElemType, bitUnplaced, bitUnverified, vchrRank, intOrder, chrKingdomCode, bitAvailableName, bitLiteratureName, vchrAvailableNameStatus);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spBiotaUpdateDistQual")]
        [return: Parameter(DbType = "Int")]
        public int SpBiotaUpdateDistQual([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Text")] string txtDistQual) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, txtDistQual);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCellDetailsGetCell")]
        public ISingleResult<SpCellDetailsGetCellResult> SpCellDetailsGetCell([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyCellID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyCellID);
            return ((ISingleResult<SpCellDetailsGetCellResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCellDetailsGetVEC")]
        public ISingleResult<SpCellDetailsGetVECResult> SpCellDetailsGetVEC([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyViewID, [Parameter(DbType = "Int")] System.Nullable<int> intMorphologyEntityID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyViewID, intMorphologyEntityID, intCharacterID);
            return ((ISingleResult<SpCellDetailsGetVECResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCellsListForEntityID")]
        public ISingleResult<SpCellsListForEntityIDResult> SpCellsListForEntityID([Parameter(DbType = "Int")] System.Nullable<int> intItemID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intItemID);
            return ((ISingleResult<SpCellsListForEntityIDResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterDelete([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDependancyDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterDependancyDelete([Parameter(DbType = "Int")] System.Nullable<int> intCharacterDependancyID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterDependancyID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDependancyInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterDependancyInsert([Parameter(DbType = "Int")] System.Nullable<int> intDepCharacterID, [Parameter(DbType = "Int")] System.Nullable<int> intControllingStateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDepCharacterID, intControllingStateID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDependancyList")]
        [ResultType(typeof(SpCharacterDependancyListResult))]
        public IMultipleResults SpCharacterDependancyList([Parameter(Name = "Type", DbType = "Char(1)")] string type, [Parameter(Name = "TypeID", DbType = "Int")] System.Nullable<int> typeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, typeID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDependancyUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterDependancyUpdate([Parameter(DbType = "Int")] System.Nullable<int> intCharacterDependancyID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterDependancyID, intCharacterID, intCharacterStateID, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDependancyUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterDependancyUpdateFromCube([Parameter(DbType = "Int")] System.Nullable<int> intCharacterDependancyID, [Parameter(DbType = "Int")] System.Nullable<int> intDepCharacterID, [Parameter(DbType = "Int")] System.Nullable<int> intControllingStateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterDependancyID, intDepCharacterID, intControllingStateID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterDependenciesList")]
        public ISingleResult<SpCharacterDependenciesListResult> SpCharacterDependenciesList([Parameter(DbType = "Int")] System.Nullable<int> intDependentCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDependentCharacterID);
            return ((ISingleResult<SpCharacterDependenciesListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGet")]
        public ISingleResult<SpCharacterGetResult> SpCharacterGet([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID);
            return ((ISingleResult<SpCharacterGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGetForProject")]
        public ISingleResult<SpCharacterGetForProjectResult> SpCharacterGetForProject([Parameter(DbType = "Int")] System.Nullable<int> intProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID);
            return ((ISingleResult<SpCharacterGetForProjectResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGroupDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterGroupDelete([Parameter(DbType = "Int")] System.Nullable<int> intCharacterGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGroupInsert")]
        public ISingleResult<SpCharacterGroupInsertResult> SpCharacterGroupInsert([Parameter(DbType = "VarChar(50)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, intParentID);
            return ((ISingleResult<SpCharacterGroupInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGroupMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterGroupMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldCharacterGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intNewCharacterGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldCharacterGroupID, intNewCharacterGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGroupMove")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterGroupMove([Parameter(DbType = "Int")] System.Nullable<int> intCharacterGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterGroupID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterGroupRename")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterGroupRename([Parameter(DbType = "Int")] System.Nullable<int> intCharacterGroupID, [Parameter(DbType = "VarChar(50)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterGroupID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterInsert")]
        public ISingleResult<SpCharacterInsertResult> SpCharacterInsert([Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "VarChar(10)")] string vchrCharType, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, vchrCharType, intCharacterGroupID);
            return ((ISingleResult<SpCharacterInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterInsertFromCube([Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "VarChar(10)")] string vchrType, [Parameter(Name = "ImportedWithProjectID", DbType = "Int")] System.Nullable<int> importedWithProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, vchrType, importedWithProjectID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterLookup")]
        public ISingleResult<SpCharacterLookupResult> SpCharacterLookup([Parameter(DbType = "VarChar(2000)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpCharacterLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldCharacterID, [Parameter(DbType = "Int")] System.Nullable<int> intNewCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldCharacterID, intNewCharacterID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterMove")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterMove([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, intCharacterGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterNumericDelete([Parameter(DbType = "Int")] System.Nullable<int> intCharacterNumericID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterNumericID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericGet")]
        public ISingleResult<SpCharacterNumericGetResult> SpCharacterNumericGet([Parameter(DbType = "Int")] System.Nullable<int> intCharacterNumericID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterNumericID);
            return ((ISingleResult<SpCharacterNumericGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericInsert")]
        public ISingleResult<SpCharacterNumericInsertResult> SpCharacterNumericInsert([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, vchrName, tintType);
            return ((ISingleResult<SpCharacterNumericInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterNumericInsertFromCube([Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID, [Parameter(Name = "Name", DbType = "VarChar(255)")] string name, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintType, [Parameter(Name = "Units", DbType = "VarChar(255)")] string units, [Parameter(Name = "Min", DbType = "Real")] System.Nullable<float> min, [Parameter(Name = "Max", DbType = "Real")] System.Nullable<float> max, [Parameter(DbType = "Int")] System.Nullable<int> intOrder) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), characterID, name, tintType, units, min, max, intOrder);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericList")]
        public ISingleResult<SpCharacterNumericListResult> SpCharacterNumericList([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID);
            return ((ISingleResult<SpCharacterNumericListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterNumericUpdateFromCube([Parameter(Name = "CharacterNumericID", DbType = "Int")] System.Nullable<int> characterNumericID, [Parameter(Name = "Name", DbType = "VarChar(255)")] string name, [Parameter(Name = "Units", DbType = "VarChar(255)")] string units, [Parameter(Name = "Min", DbType = "Real")] System.Nullable<float> min, [Parameter(Name = "Max", DbType = "Real")] System.Nullable<float> max, [Parameter(DbType = "Int")] System.Nullable<int> intOrder) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), characterNumericID, name, units, min, max, intOrder);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterNumericUpdateFromList")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterNumericUpdateFromList([Parameter(DbType = "Int")] System.Nullable<int> intCharacterNumericID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintType, [Parameter(DbType = "Real")] System.Nullable<float> numMinimum, [Parameter(DbType = "Real")] System.Nullable<float> numMaximum, [Parameter(DbType = "VarChar(255)")] string vchrUnits, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Int")] System.Nullable<int> intDefault) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterNumericID, vchrName, tintType, numMinimum, numMaximum, vchrUnits, intOrder, intDefault);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterRename")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterRename([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "VarChar(2000)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateDelete([Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterStateID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateGet")]
        public ISingleResult<SpCharacterStateGetResult> SpCharacterStateGet([Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterStateID);
            return ((ISingleResult<SpCharacterStateGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateInsert")]
        public ISingleResult<SpCharacterStateInsertResult> SpCharacterStateInsert([Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, intCharacterID);
            return ((ISingleResult<SpCharacterStateInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateInsertFromCube([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitImplicit, [Parameter(Name = "OriginalDeltaNumber", DbType = "Int")] System.Nullable<int> originalDeltaNumber) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, vchrName, intOrder, bitImplicit, originalDeltaNumber);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateList")]
        public ISingleResult<SpCharacterStateListResult> SpCharacterStateList([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID);
            return ((ISingleResult<SpCharacterStateListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateLookup")]
        public ISingleResult<SpCharacterStateLookupResult> SpCharacterStateLookup([Parameter(DbType = "VarChar(2000)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpCharacterStateLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldCharacterStateID, [Parameter(DbType = "Int")] System.Nullable<int> intNewCharacterStateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldCharacterStateID, intNewCharacterStateID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateMove")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateMove([Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterStateID, intCharacterID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateRename")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateRename([Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID, [Parameter(DbType = "VarChar(2000)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterStateID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateUpdateFromCube([Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID, [Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitImplicit) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterStateID, vchrName, intOrder, bitImplicit);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterStateUpdateFromList")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterStateUpdateFromList([Parameter(DbType = "Int")] System.Nullable<int> intCharacterStateID, [Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Int")] System.Nullable<int> intDefault) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterStateID, vchrName, intOrder, intDefault);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterUpdate([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "VarChar(10)")] string vchrCharacterType, [Parameter(DbType = "VarChar(50)")] string vchrGridText) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, vchrName, vchrCharacterType, vchrGridText);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharacterUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpCharacterUpdateFromCube([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "VarChar(2000)")] string vchrName, [Parameter(DbType = "VarChar(10)")] string vchrType, [Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intOrderNumber, [Parameter(DbType = "VarChar(2000)")] string vchrDescription, [Parameter(DbType = "Bit")] System.Nullable<bool> bitMandatory, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintReliability, [Parameter(DbType = "Bit")] System.Nullable<bool> bitHidden) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, vchrName, vchrType, intProjectID, intOrderNumber, vchrDescription, bitMandatory, tintReliability, bitHidden);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharExplorerList")]
        [ResultType(typeof(SpCharExplorerListResult))]
        public IMultipleResults SpCharExplorerList([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "Char(1)")] string chrType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, chrType);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCharExplorerListTop")]
        public ISingleResult<SpCharExplorerListTopResult> SpCharExplorerListTop() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpCharExplorerListTopResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spClassifiedByListDistinct")]
        public ISingleResult<SpClassifiedByListDistinctResult> SpClassifiedByListDistinct() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpClassifiedByListDistinctResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCMIS")]
        public ISingleResult<SpCMISResult> SpCMIS([Parameter(DbType = "VarChar(50)")] string vchrFamilyName, [Parameter(DbType = "VarChar(50)")] string vchrGenusName, [Parameter(DbType = "VarChar(50)")] string vchrSpeciesName, [Parameter(DbType = "VarChar(50)")] string vchrCommonName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFamilyName, vchrGenusName, vchrSpeciesName, vchrCommonName);
            return ((ISingleResult<SpCMISResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCollectorListDistinct")]
        public ISingleResult<SpCollectorListDistinctResult> SpCollectorListDistinct() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpCollectorListDistinctResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCommonNameDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCommonNameDelete([Parameter(DbType = "Int")] System.Nullable<int> intCommonNameID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCommonNameID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCommonNameGet")]
        public ISingleResult<SpCommonNameGetResult> SpCommonNameGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpCommonNameGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCommonNameImport")]
        public ISingleResult<SpCommonNameImportResult> SpCommonNameImport([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(100)")] string vchrCommonName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrCommonName);
            return ((ISingleResult<SpCommonNameImportResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCommonNameInsert")]
        public ISingleResult<SpCommonNameInsertResult> SpCommonNameInsert([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(100)")] string vchrCommonName, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrCommonName, intRefID, vchrRefPage, txtNotes);
            return ((ISingleResult<SpCommonNameInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCommonNameUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpCommonNameUpdate([Parameter(DbType = "Int")] System.Nullable<int> intCommonNameID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(100)")] string vchrCommonName, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCommonNameID, intBiotaID, vchrCommonName, intRefID, vchrRefPage, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spContactDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpContactDelete([Parameter(DbType = "Int")] System.Nullable<int> intContactID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intContactID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spContactGet")]
        public ISingleResult<SpContactGetResult> SpContactGet([Parameter(DbType = "Int")] System.Nullable<int> intContactID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intContactID);
            return ((ISingleResult<SpContactGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spContactInsert")]
        public ISingleResult<SpContactInsertResult> SpContactInsert([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(50)")] string vchrTitle, [Parameter(DbType = "VarChar(255)")] string vchrGivenName, [Parameter(DbType = "VarChar(1000)")] string vchrPostalAddress, [Parameter(DbType = "VarChar(1000)")] string vchrStreetAddress, [Parameter(DbType = "VarChar(255)")] string vchrInstitution, [Parameter(DbType = "VarChar(255)")] string vchrJobTitle, [Parameter(DbType = "VarChar(50)")] string vchrWorkPh, [Parameter(DbType = "VarChar(50)")] string vchrWorkFax, [Parameter(DbType = "VarChar(50)")] string vchrHomePh, [Parameter(DbType = "VarChar(255)")] string vchrEMail) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, vchrTitle, vchrGivenName, vchrPostalAddress, vchrStreetAddress, vchrInstitution, vchrJobTitle, vchrWorkPh, vchrWorkFax, vchrHomePh, vchrEMail);
            return ((ISingleResult<SpContactInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spContactLookup")]
        public ISingleResult<SpContactLookupResult> SpContactLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpContactLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spContactUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpContactUpdate([Parameter(DbType = "Int")] System.Nullable<int> intContactID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(50)")] string vchrTitle, [Parameter(DbType = "VarChar(255)")] string vchrGivenName, [Parameter(DbType = "VarChar(1000)")] string vchrPostalAddress, [Parameter(DbType = "VarChar(1000)")] string vchrStreetAddress, [Parameter(DbType = "VarChar(255)")] string vchrInstitution, [Parameter(DbType = "VarChar(255)")] string vchrJobTitle, [Parameter(DbType = "VarChar(50)")] string vchrWorkPh, [Parameter(DbType = "VarChar(50)")] string vchrWorkFax, [Parameter(DbType = "VarChar(50)")] string vchrHomePh, [Parameter(DbType = "VarChar(255)")] string vchrEMail) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intContactID, vchrName, vchrTitle, vchrGivenName, vchrPostalAddress, vchrStreetAddress, vchrInstitution, vchrJobTitle, vchrWorkPh, vchrWorkFax, vchrHomePh, vchrEMail);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCurationEventDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpCurationEventDelete([Parameter(DbType = "Int")] System.Nullable<int> intCurationEventID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCurationEventID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCurationEventGet")]
        public ISingleResult<SpCurationEventGetResult> SpCurationEventGet([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpCurationEventGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCurationEventInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpCurationEventInsert([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrSubpartName, [Parameter(DbType = "VarChar(50)")] string vchrWho, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtWhen, [Parameter(DbType = "VarChar(100)")] string vchrEventType, [Parameter(DbType = "Text")] string txtEventDesc) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrSubpartName, vchrWho, dtWhen, vchrEventType, txtEventDesc);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spCurationEventUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpCurationEventUpdate([Parameter(DbType = "Int")] System.Nullable<int> intCurationEventID, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrSubpartName, [Parameter(DbType = "VarChar(50)")] string vchrWho, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtWhen, [Parameter(DbType = "VarChar(100)")] string vchrEventType, [Parameter(DbType = "Text")] string txtEventDesc) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCurationEventID, intMaterialID, vchrSubpartName, vchrWho, dtWhen, vchrEventType, txtEventDesc);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDichotomousImageUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpDichotomousImageUpdate([Parameter(DbType = "Int")] System.Nullable<int> intDKItemID, [Parameter(DbType = "VarChar(255)")] string vchrFilename, [Parameter(DbType = "VarChar(10)")] string vchrFileExtension, [Parameter(DbType = "Int")] System.Nullable<int> intImageSize, [Parameter(Name = "Image", DbType = "Image")] System.Data.Linq.Binary image) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDKItemID, vchrFilename, vchrFileExtension, intImageSize, image);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDichotomousItemDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpDichotomousItemDelete([Parameter(DbType = "Int")] System.Nullable<int> intItemID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intItemID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDichotomousItemInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpDichotomousItemInsert([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Char(1)")] string chrType, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(1000)")] string vchrDesc, [Parameter(DbType = "VarChar(1000)")] string vchrHistoryDesc, [Parameter(DbType = "Int")] System.Nullable<int> intTaxonID, [Parameter(DbType = "Int")] System.Nullable<int> intOrder) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, chrType, intParentID, vchrDesc, vchrHistoryDesc, intTaxonID, intOrder);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDichotomousItemUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpDichotomousItemUpdate([Parameter(DbType = "Int")] System.Nullable<int> intItemID, [Parameter(DbType = "Char(1)")] string chrType, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(1000)")] string vchrDesc, [Parameter(DbType = "VarChar(1000)")] string vchrHistoryDesc, [Parameter(DbType = "Int")] System.Nullable<int> intTaxonID, [Parameter(DbType = "Int")] System.Nullable<int> intOrder) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intItemID, chrType, intParentID, vchrDesc, vchrHistoryDesc, intTaxonID, intOrder);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDichotomousProjectGet")]
        public ISingleResult<SpDichotomousProjectGetResult> SpDichotomousProjectGet([Parameter(DbType = "Int")] System.Nullable<int> intProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID);
            return ((ISingleResult<SpDichotomousProjectGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionBuildFullPath")]
        [return: Parameter(DbType = "Int")]
        public int SpDistRegionBuildFullPath([Parameter(DbType = "Int")] System.Nullable<int> intDistRegionID, [Parameter(DbType = "VarChar(5000)")] ref string vchrRegionFullPath) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistRegionID, vchrRegionFullPath);
            vchrRegionFullPath = ((string)(result.GetParameterValue(1)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpDistRegionDelete([Parameter(DbType = "Int")] System.Nullable<int> intDistRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistRegionID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionFind")]
        public ISingleResult<SpDistRegionFindResult> SpDistRegionFind([Parameter(DbType = "VarChar(255)")] string vchrDistRegionToFind) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrDistRegionToFind);
            return ((ISingleResult<SpDistRegionFindResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionGetParentage")]
        public ISingleResult<SpDistRegionGetParentageResult> SpDistRegionGetParentage([Parameter(DbType = "Int")] System.Nullable<int> intDistributionRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistributionRegionID);
            return ((ISingleResult<SpDistRegionGetParentageResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionInsert")]
        public ISingleResult<SpDistRegionInsertResult> SpDistRegionInsert([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(200)")] string vchrDistRegionName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrDistRegionName);
            return ((ISingleResult<SpDistRegionInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionList")]
        public ISingleResult<SpDistRegionListResult> SpDistRegionList([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpDistRegionListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionListFullTree")]
        public ISingleResult<SpDistRegionListFullTreeResult> SpDistRegionListFullTree([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpDistRegionListFullTreeResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionListTop")]
        public ISingleResult<SpDistRegionListTopResult> SpDistRegionListTop() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpDistRegionListTopResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionMove")]
        [return: Parameter(DbType = "Int")]
        public int SpDistRegionMove([Parameter(DbType = "Int")] System.Nullable<int> intDistRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistRegionID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionOKToDelete")]
        public ISingleResult<SpDistRegionOKToDeleteResult> SpDistRegionOKToDelete([Parameter(DbType = "Int")] System.Nullable<int> intDistRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistRegionID);
            return ((ISingleResult<SpDistRegionOKToDeleteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionPreDeleteMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpDistRegionPreDeleteMerge([Parameter(DbType = "Int")] System.Nullable<int> intRemovedDistRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intMergedWithDistRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRemovedDistRegionID, intMergedWithDistRegionID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spDistRegionUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpDistRegionUpdate([Parameter(DbType = "Int")] System.Nullable<int> intDistributionRegionID, [Parameter(DbType = "VarChar(200)")] string vchrDistRegionName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistributionRegionID, vchrDistRegionName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spExportMaterialGet")]
        public ISingleResult<SpExportMaterialGetResult> SpExportMaterialGet([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpExportMaterialGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spExportRegionGet")]
        public ISingleResult<SpExportRegionGetResult> SpExportRegionGet([Parameter(DbType = "Int")] System.Nullable<int> intRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID);
            return ((ISingleResult<SpExportRegionGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spExportSiteGet")]
        public ISingleResult<SpExportSiteGetResult> SpExportSiteGet([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpExportSiteGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spExportSiteVisitGet")]
        public ISingleResult<SpExportSiteVisitGetResult> SpExportSiteVisitGet([Parameter(DbType = "Int")] System.Nullable<int> intVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intVisitID);
            return ((ISingleResult<SpExportSiteVisitGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spFavoriteDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpFavoriteDelete([Parameter(DbType = "Int")] System.Nullable<int> intFavoriteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFavoriteID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spFavoriteInsert")]
        public ISingleResult<SpFavoriteInsertResult> SpFavoriteInsert([Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintGroup, [Parameter(DbType = "VarChar(255)")] string vchrGroupName, [Parameter(DbType = "Int")] System.Nullable<int> intID1, [Parameter(DbType = "VarChar(255)")] string vchrID2, [Parameter(DbType = "Bit")] System.Nullable<bool> bitGlobal) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrType, intParentID, tintGroup, vchrGroupName, intID1, vchrID2, bitGlobal);
            return ((ISingleResult<SpFavoriteInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spFavoriteMove")]
        [return: Parameter(DbType = "Int")]
        public int SpFavoriteMove([Parameter(DbType = "Int")] System.Nullable<int> intFavoriteID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFavoriteID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spFavoriteRename")]
        [return: Parameter(DbType = "Int")]
        public int SpFavoriteRename([Parameter(DbType = "Int")] System.Nullable<int> intFavoriteID, [Parameter(DbType = "VarChar(50)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFavoriteID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGANGet")]
        public ISingleResult<SpGANGetResult> SpGANGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpGANGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGANIncludedSpeciesDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpGANIncludedSpeciesDelete([Parameter(DbType = "Int")] System.Nullable<int> intGANISID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGANISID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGANIncludedSpeciesGet")]
        public ISingleResult<SpGANIncludedSpeciesGetResult> SpGANIncludedSpeciesGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpGANIncludedSpeciesGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGANIncludedSpeciesInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpGANIncludedSpeciesInsert([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(255)")] string vchrIncludedSpecies) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrIncludedSpecies);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGANIncludedSpeciesUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpGANIncludedSpeciesUpdate([Parameter(DbType = "Int")] System.Nullable<int> intGANISID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(255)")] string vchrIncludedSpecies) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGANISID, intBiotaID, vchrIncludedSpecies);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGANInsertUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpGANInsertUpdate([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "VarChar(255)")] string vchrAvailableNameStatus, [Parameter(DbType = "Text")] string txtRefQual, [Parameter(DbType = "SmallInt")] System.Nullable<short> sintDesignation, [Parameter(DbType = "VarChar(500)")] string vchrTypeSpecies, [Parameter(DbType = "VarChar(255)")] string vchrTSFixationMethod) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, intRefID, vchrRefPage, vchrAvailableNameStatus, txtRefQual, sintDesignation, vchrTypeSpecies, vchrTSFixationMethod);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGetRoughTableCount")]
        public ISingleResult<SpGetRoughTableCountResult> SpGetRoughTableCount([Parameter(DbType = "VarChar(100)")] string vchrTableCode) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTableCode);
            return ((ISingleResult<SpGetRoughTableCountResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGroupDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpGroupDelete([Parameter(DbType = "Int")] System.Nullable<int> intGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGroupInsert")]
        public ISingleResult<SpGroupInsertResult> SpGroupInsert([Parameter(DbType = "VarChar(50)")] string vchrGroupName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrGroupName);
            return ((ISingleResult<SpGroupInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGroupList")]
        public ISingleResult<SpGroupListResult> SpGroupList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpGroupListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spGroupUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpGroupUpdate([Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "VarChar(50)")] string vchrGroupName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID, vchrGroupName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIICharacterDetailGet")]
        public ISingleResult<SpIICharacterDetailGetResult> SpIICharacterDetailGet([Parameter(Name = "CharID", DbType = "Int")] System.Nullable<int> charID, [Parameter(Name = "MorphologyViewID", DbType = "Int")] System.Nullable<int> morphologyViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), charID, morphologyViewID);
            return ((ISingleResult<SpIICharacterDetailGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIICharacterListForProject")]
        public ISingleResult<SpIICharacterListForProjectResult> SpIICharacterListForProject([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
            return ((ISingleResult<SpIICharacterListForProjectResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIICharacterNumericDetailList")]
        public ISingleResult<SpIICharacterNumericDetailListResult> SpIICharacterNumericDetailList([Parameter(Name = "CharID", DbType = "Int")] System.Nullable<int> charID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), charID);
            return ((ISingleResult<SpIICharacterNumericDetailListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIICharacterStateDetailList")]
        public ISingleResult<SpIICharacterStateDetailListResult> SpIICharacterStateDetailList([Parameter(Name = "CharID", DbType = "Int")] System.Nullable<int> charID, [Parameter(Name = "MorphologyViewID", DbType = "Int")] System.Nullable<int> morphologyViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), charID, morphologyViewID);
            return ((ISingleResult<SpIICharacterStateDetailListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIIDiagnosis")]
        [return: Parameter(DbType = "Int")]
        public int SpIIDiagnosis([Parameter(DbType = "Int")] System.Nullable<int> intEntityID, [Parameter(Name = "CharacterList", DbType = "VarChar(8000)")] string characterList) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intEntityID, characterList);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIIEntityDetailGet")]
        public ISingleResult<SpIIEntityDetailGetResult> SpIIEntityDetailGet([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyEntityID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyEntityID);
            return ((ISingleResult<SpIIEntityDetailGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIIEntityListForProject")]
        public ISingleResult<SpIIEntityListForProjectResult> SpIIEntityListForProject([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
            return ((ISingleResult<SpIIEntityListForProjectResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIIHistoryNumericImpactBiota")]
        public ISingleResult<SpIIHistoryNumericImpactBiotaResult> SpIIHistoryNumericImpactBiota([Parameter(Name = "BiotaID", DbType = "Int")] System.Nullable<int> biotaID, [Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID, [Parameter(Name = "NumericID", DbType = "Int")] System.Nullable<int> numericID, [Parameter(Name = "NumericValue", DbType = "Float")] System.Nullable<double> numericValue, [Parameter(Name = "MorphologyViewID", DbType = "Int")] System.Nullable<int> morphologyViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), biotaID, characterID, numericID, numericValue, morphologyViewID);
            return ((ISingleResult<SpIIHistoryNumericImpactBiotaResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIINoteList")]
        public ISingleResult<SpIINoteListResult> SpIINoteList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpIINoteListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIINumericDetail")]
        public ISingleResult<SpIINumericDetailResult> SpIINumericDetail([Parameter(Name = "CharNumericID", DbType = "Int")] System.Nullable<int> charNumericID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), charNumericID);
            return ((ISingleResult<SpIINumericDetailResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIIProjectGet")]
        public ISingleResult<SpIIProjectGetResult> SpIIProjectGet([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
            return ((ISingleResult<SpIIProjectGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spIIRefLinkList")]
        public ISingleResult<SpIIRefLinkListResult> SpIIRefLinkList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpIIRefLinkListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpJournalDelete([Parameter(DbType = "Int")] System.Nullable<int> intJournalID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intJournalID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalFind")]
        public ISingleResult<SpJournalFindResult> SpJournalFind([Parameter(DbType = "VarChar(255)")] string vchrCriteria) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCriteria);
            return ((ISingleResult<SpJournalFindResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalGet")]
        public ISingleResult<SpJournalGetResult> SpJournalGet([Parameter(DbType = "Int")] System.Nullable<int> intJournalID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intJournalID);
            return ((ISingleResult<SpJournalGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalInsert")]
        public ISingleResult<SpJournalInsertResult> SpJournalInsert([Parameter(DbType = "VarChar(100)")] string vchrAbbrevName, [Parameter(DbType = "VarChar(100)")] string vchrAbbrevName2, [Parameter(DbType = "VarChar(100)")] string vchrAlias, [Parameter(DbType = "VarChar(900)")] string vchrFullName, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrAbbrevName, vchrAbbrevName2, vchrAlias, vchrFullName, txtNotes);
            return ((ISingleResult<SpJournalInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalLookup")]
        public ISingleResult<SpJournalLookupResult> SpJournalLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpJournalLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalOKToDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpJournalOKToDelete([Parameter(DbType = "Int")] System.Nullable<int> intJournalID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intJournalID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spJournalUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpJournalUpdate([Parameter(DbType = "Int")] System.Nullable<int> intJournalID, [Parameter(DbType = "VarChar(100)")] string vchrAbbrevName, [Parameter(DbType = "VarChar(100)")] string vchrAbbrevName2, [Parameter(DbType = "VarChar(100)")] string vchrAlias, [Parameter(DbType = "VarChar(900)")] string vchrFullName, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intJournalID, vchrAbbrevName, vchrAbbrevName2, vchrAlias, vchrFullName, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpKeywordDelete([Parameter(DbType = "Int")] System.Nullable<int> intKeywordID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intKeywordID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordInsert")]
        public ISingleResult<SpKeywordInsertResult> SpKeywordInsert([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(50)")] string vchrKeyword, [Parameter(DbType = "VarChar(50)")] string vchrValue, [Parameter(DbType = "Text")] string txtValueQual, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReport) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID, vchrKeyword, vchrValue, txtValueQual, bitUseInReport);
            return ((ISingleResult<SpKeywordInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordList")]
        public ISingleResult<SpKeywordListResult> SpKeywordList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpKeywordListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordTypeGetSet")]
        [return: Parameter(DbType = "Int")]
        public int SpKeywordTypeGetSet([Parameter(DbType = "VarChar(255)")] string vchrKeywordType, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] ref System.Nullable<int> intKeywordTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrKeywordType, vchrCategory, intKeywordTypeID);
            intKeywordTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordTypeGetSetForCatID")]
        [return: Parameter(DbType = "Int")]
        public int SpKeywordTypeGetSetForCatID([Parameter(DbType = "VarChar(255)")] string vchrKeywordType, [Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] ref System.Nullable<int> intKeywordTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrKeywordType, intCategoryID, intKeywordTypeID);
            intKeywordTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordTypeListForCategory")]
        public ISingleResult<SpKeywordTypeListForCategoryResult> SpKeywordTypeListForCategory([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpKeywordTypeListForCategoryResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpKeywordUpdate([Parameter(DbType = "Int")] System.Nullable<int> intKeywordID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(50)")] string vchrKeyword, [Parameter(DbType = "VarChar(255)")] string vchrValue, [Parameter(DbType = "Text")] string txtValueQual, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReport) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intKeywordID, vchrCategory, vchrKeyword, vchrValue, txtValueQual, bitUseInReport);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spKeywordValueList")]
        public ISingleResult<SpKeywordValueListResult> SpKeywordValueList([Parameter(DbType = "VarChar(255)")] string vchrKeywordCategory, [Parameter(DbType = "VarChar(255)")] string vchrKeywordType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrKeywordCategory, vchrKeywordType);
            return ((ISingleResult<SpKeywordValueListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpLabelSetDelete([Parameter(DbType = "Int")] System.Nullable<int> intLabelSetID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLabelSetID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetInsert")]
        public ISingleResult<SpLabelSetInsertResult> SpLabelSetInsert([Parameter(DbType = "VarChar(200)")] string vchrName, [Parameter(DbType = "Text")] string txtDelimitedFields) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, txtDelimitedFields);
            return ((ISingleResult<SpLabelSetInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetItemDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpLabelSetItemDelete([Parameter(DbType = "Int")] System.Nullable<int> intLabelSetItemID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLabelSetItemID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetItemInsert")]
        public ISingleResult<SpLabelSetItemInsertResult> SpLabelSetItemInsert([Parameter(DbType = "Int")] System.Nullable<int> intLabelSetID, [Parameter(DbType = "Int")] System.Nullable<int> intItemID, [Parameter(DbType = "VarChar(20)")] string vchrItemType, [Parameter(DbType = "Int")] System.Nullable<int> intPrintOrder, [Parameter(DbType = "Int")] System.Nullable<int> intNumCopies) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLabelSetID, intItemID, vchrItemType, intPrintOrder, intNumCopies);
            return ((ISingleResult<SpLabelSetItemInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetItemList")]
        public ISingleResult<SpLabelSetItemListResult> SpLabelSetItemList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpLabelSetItemListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetItemListOne")]
        [ResultType(typeof(SpLabelSetItemListOneResult1))]
        [ResultType(typeof(SpLabelSetItemListOneResult2))]
        [ResultType(typeof(SpLabelSetItemListOneResult3))]
        public IMultipleResults SpLabelSetItemListOne([Parameter(DbType = "Int")] System.Nullable<int> intItemID, [Parameter(DbType = "VarChar(20)")] string vchrItemType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intItemID, vchrItemType);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetItemListUserPeriod")]
        public ISingleResult<SpLabelSetItemListUserPeriodResult> SpLabelSetItemListUserPeriod([Parameter(DbType = "VarChar(255)")] string vchrUser, [Parameter(DbType = "VarChar(50)")] string vchrDateStart, [Parameter(DbType = "VarChar(50)")] string vchrDateEnd) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUser, vchrDateStart, vchrDateEnd);
            return ((ISingleResult<SpLabelSetItemListUserPeriodResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetItemUpdateOrder")]
        [return: Parameter(DbType = "Int")]
        public int SpLabelSetItemUpdateOrder([Parameter(DbType = "Int")] System.Nullable<int> intItemID, [Parameter(DbType = "Int")] System.Nullable<int> intNewOrder, [Parameter(DbType = "Int")] System.Nullable<int> intNumCopies) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intItemID, intNewOrder, intNumCopies);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetList")]
        public ISingleResult<SpLabelSetListResult> SpLabelSetList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpLabelSetListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLabelSetUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpLabelSetUpdate([Parameter(DbType = "Int")] System.Nullable<int> intLabelSetID, [Parameter(DbType = "VarChar(200)")] string vchrLabelSetName, [Parameter(DbType = "Text")] string txtDelimitedFields) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLabelSetID, vchrLabelSetName, txtDelimitedFields);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanCorrDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanCorrDelete([Parameter(DbType = "Int")] System.Nullable<int> intLoanCorrespondenceID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanCorrespondenceID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanCorrInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanCorrInsert([Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "VarChar(50)")] string vchrRefNo, [Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDate, [Parameter(DbType = "Int")] System.Nullable<int> intSenderID, [Parameter(DbType = "Int")] System.Nullable<int> intRecipientID, [Parameter(DbType = "Text")] string txtDescription) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID, vchrRefNo, vchrType, dtDate, intSenderID, intRecipientID, txtDescription);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanCorrList")]
        public ISingleResult<SpLoanCorrListResult> SpLoanCorrList([Parameter(DbType = "Int")] System.Nullable<int> intLoanID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID);
            return ((ISingleResult<SpLoanCorrListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanCorrUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanCorrUpdate([Parameter(DbType = "Int")] System.Nullable<int> intLoanCorrespondenceID, [Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "VarChar(50)")] string vchrRefNo, [Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDate, [Parameter(DbType = "Int")] System.Nullable<int> intSenderID, [Parameter(DbType = "Int")] System.Nullable<int> intRecipientID, [Parameter(DbType = "Text")] string txtDescription) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanCorrespondenceID, intLoanID, vchrRefNo, vchrType, dtDate, intSenderID, intRecipientID, txtDescription);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanDelete([Parameter(DbType = "Int")] System.Nullable<int> intLoanID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanFind")]
        [ResultType(typeof(SpLoanFindResult))]
        public IMultipleResults SpLoanFind([Parameter(DbType = "VarChar(50)")] string vchrFieldType, [Parameter(DbType = "VarChar(255)")] string vchrFieldValue, [Parameter(DbType = "Bit")] System.Nullable<bool> bitOnlyActiveLoans) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFieldType, vchrFieldValue, bitOnlyActiveLoans);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanGet")]
        public ISingleResult<SpLoanGetResult> SpLoanGet([Parameter(DbType = "Int")] System.Nullable<int> intLoanID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID);
            return ((ISingleResult<SpLoanGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanInsert")]
        public ISingleResult<SpLoanInsertResult> SpLoanInsert([Parameter(DbType = "VarChar(50)")] string vchrLoanNumber, [Parameter(DbType = "Int")] System.Nullable<int> intRequestorID, [Parameter(DbType = "Int")] System.Nullable<int> intReceiverID, [Parameter(DbType = "Int")] System.Nullable<int> intOriginatorID, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateInitiated, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateDue, [Parameter(DbType = "VarChar(255)")] string vchrMethodOfTransfer, [Parameter(DbType = "VarChar(50)")] string vchrPermitNumber, [Parameter(DbType = "VarChar(50)")] string vchrTypeOfReturn, [Parameter(DbType = "VarChar(255)")] string vchrRestrictions, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateClosed, [Parameter(DbType = "Bit")] System.Nullable<bool> bitLoanClosed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrLoanNumber, intRequestorID, intReceiverID, intOriginatorID, dtDateInitiated, dtDateDue, vchrMethodOfTransfer, vchrPermitNumber, vchrTypeOfReturn, vchrRestrictions, dtDateClosed, bitLoanClosed);
            return ((ISingleResult<SpLoanInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanListForContact")]
        public ISingleResult<SpLoanListForContactResult> SpLoanListForContact([Parameter(DbType = "Int")] System.Nullable<int> intContactID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intContactID);
            return ((ISingleResult<SpLoanListForContactResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanListForMaterial")]
        public ISingleResult<SpLoanListForMaterialResult> SpLoanListForMaterial([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpLoanListForMaterialResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanMaterialDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanMaterialDelete([Parameter(DbType = "Int")] System.Nullable<int> intLoanMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanMaterialID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanMaterialGet")]
        public ISingleResult<SpLoanMaterialGetResult> SpLoanMaterialGet([Parameter(DbType = "Int")] System.Nullable<int> intLoanMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanMaterialID);
            return ((ISingleResult<SpLoanMaterialGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanMaterialInsert")]
        public ISingleResult<SpLoanMaterialInsertResult> SpLoanMaterialInsert([Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(50)")] string vchrNumSpecimens, [Parameter(DbType = "VarChar(255)")] string vchrTaxonName, [Parameter(DbType = "VarChar(255)")] string vchrMaterialDescription, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateAdded, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateReturned, [Parameter(DbType = "Bit")] System.Nullable<bool> bitReturned) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID, intMaterialID, vchrNumSpecimens, vchrTaxonName, vchrMaterialDescription, dtDateAdded, dtDateReturned, bitReturned);
            return ((ISingleResult<SpLoanMaterialInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanMaterialList")]
        public ISingleResult<SpLoanMaterialListResult> SpLoanMaterialList([Parameter(DbType = "Int")] System.Nullable<int> intLoanID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID);
            return ((ISingleResult<SpLoanMaterialListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanMaterialUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanMaterialUpdate([Parameter(DbType = "Int")] System.Nullable<int> intLoanMaterialID, [Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(50)")] string vchrNumSpecimens, [Parameter(DbType = "VarChar(255)")] string vchrTaxonName, [Parameter(DbType = "VarChar(255)")] string vchrMaterialDescription, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateAdded, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateReturned, [Parameter(DbType = "Bit")] System.Nullable<bool> bitReturned) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanMaterialID, intLoanID, intMaterialID, vchrNumSpecimens, vchrTaxonName, vchrMaterialDescription, dtDateAdded, dtDateReturned, bitReturned);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanReminderDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanReminderDelete([Parameter(DbType = "Int")] System.Nullable<int> intLoanReminderID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanReminderID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanReminderDue")]
        public ISingleResult<SpLoanReminderDueResult> SpLoanReminderDue([Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDueByDate) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dtDueByDate);
            return ((ISingleResult<SpLoanReminderDueResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanReminderInsert")]
        public ISingleResult<SpLoanReminderInsertResult> SpLoanReminderInsert([Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDate, [Parameter(DbType = "Bit")] System.Nullable<bool> bitClosed, [Parameter(DbType = "Text")] string txtDescription) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID, dtDate, bitClosed, txtDescription);
            return ((ISingleResult<SpLoanReminderInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanReminderList")]
        public ISingleResult<SpLoanReminderListResult> SpLoanReminderList([Parameter(DbType = "Int")] System.Nullable<int> intLoanID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID);
            return ((ISingleResult<SpLoanReminderListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanReminderUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanReminderUpdate([Parameter(DbType = "Int")] System.Nullable<int> intLoanReminderID, [Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDate, [Parameter(DbType = "Bit")] System.Nullable<bool> bitClosed, [Parameter(DbType = "Text")] string txtDescription) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanReminderID, intLoanID, dtDate, bitClosed, txtDescription);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spLoanUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpLoanUpdate([Parameter(DbType = "Int")] System.Nullable<int> intLoanID, [Parameter(DbType = "VarChar(50)")] string vchrLoanNumber, [Parameter(DbType = "Int")] System.Nullable<int> intRequestorID, [Parameter(DbType = "Int")] System.Nullable<int> intReceiverID, [Parameter(DbType = "Int")] System.Nullable<int> intOriginatorID, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateInitiated, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateDue, [Parameter(DbType = "VarChar(255)")] string vchrMethodOfTransfer, [Parameter(DbType = "VarChar(50)")] string vchrPermitNumber, [Parameter(DbType = "VarChar(50)")] string vchrTypeOfReturn, [Parameter(DbType = "VarChar(255)")] string vchrRestrictions, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dtDateClosed, [Parameter(DbType = "Bit")] System.Nullable<bool> bitLoanClosed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intLoanID, vchrLoanNumber, intRequestorID, intReceiverID, intOriginatorID, dtDateInitiated, dtDateDue, vchrMethodOfTransfer, vchrPermitNumber, vchrTypeOfReturn, vchrRestrictions, dtDateClosed, bitLoanClosed);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialDelete([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialFindTemplates")]
        public ISingleResult<SpMaterialFindTemplatesResult> SpMaterialFindTemplates([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpMaterialFindTemplatesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialGet")]
        public ISingleResult<SpMaterialGetResult> SpMaterialGet([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpMaterialGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialGetBiotaName")]
        public ISingleResult<SpMaterialGetBiotaNameResult> SpMaterialGetBiotaName([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpMaterialGetBiotaNameResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialGetSiteVisitID")]
        public ISingleResult<SpMaterialGetSiteVisitIDResult> SpMaterialGetSiteVisitID([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpMaterialGetSiteVisitIDResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialIDDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialIDDelete([Parameter(DbType = "Int")] System.Nullable<int> intMaterialIdentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialIdentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialIDGet")]
        public ISingleResult<SpMaterialIDGetResult> SpMaterialIDGet([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpMaterialIDGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialIDInsert")]
        public ISingleResult<SpMaterialIDInsertResult> SpMaterialIDInsert([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrTaxa, [Parameter(DbType = "VarChar(50)")] string vchrIDBy, [Parameter(DbType = "VarChar(50)")] string vchrIDDate, [Parameter(DbType = "VarChar(255)")] string vchrIDMethod, [Parameter(DbType = "Int")] System.Nullable<int> intIDRefID, [Parameter(DbType = "VarChar(100)")] string vchrIDRefPage, [Parameter(DbType = "VarChar(50)")] string vchrIDAccuracy, [Parameter(DbType = "VarChar(255)")] string vchrNameQual, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrTaxa, vchrIDBy, vchrIDDate, vchrIDMethod, intIDRefID, vchrIDRefPage, vchrIDAccuracy, vchrNameQual, txtNotes);
            return ((ISingleResult<SpMaterialIDInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialIDListForTaxon")]
        public ISingleResult<SpMaterialIDListForTaxonResult> SpMaterialIDListForTaxon([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpMaterialIDListForTaxonResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialIDUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialIDUpdate([Parameter(DbType = "Int")] System.Nullable<int> intMaterialIdentID, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrTaxa, [Parameter(DbType = "VarChar(50)")] string vchrIDBy, [Parameter(DbType = "VarChar(50)")] string vchrIDDate, [Parameter(DbType = "VarChar(255)")] string vchrIDMethod, [Parameter(DbType = "Int")] System.Nullable<int> intIDRefID, [Parameter(DbType = "VarChar(100)")] string vchrIDRefPage, [Parameter(DbType = "VarChar(50)")] string vchrIDAccuracy, [Parameter(DbType = "VarChar(255)")] string vchrNameQual, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialIdentID, intMaterialID, vchrTaxa, vchrIDBy, vchrIDDate, vchrIDMethod, intIDRefID, vchrIDRefPage, vchrIDAccuracy, vchrNameQual, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialInsert")]
        [ResultType(typeof(SpMaterialInsertResult))]
        public IMultipleResults SpMaterialInsert([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID, [Parameter(DbType = "Int")] System.Nullable<int> intBasedOnMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID, intBasedOnMaterialID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialInsertTemplate")]
        public ISingleResult<SpMaterialInsertTemplateResult> SpMaterialInsertTemplate([Parameter(DbType = "VarChar(50)")] string vchrDummy) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrDummy);
            return ((ISingleResult<SpMaterialInsertTemplateResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialList")]
        public ISingleResult<SpMaterialListResult> SpMaterialList([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID);
            return ((ISingleResult<SpMaterialListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialListTemplates")]
        public ISingleResult<SpMaterialListTemplatesResult> SpMaterialListTemplates() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpMaterialListTemplatesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialLookup")]
        public ISingleResult<SpMaterialLookupResult> SpMaterialLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpMaterialLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldMaterialID, [Parameter(DbType = "Int")] System.Nullable<int> intNewMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldMaterialID, intNewMaterialID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialMove")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialMove([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "Int")] System.Nullable<int> intNewSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, intNewSiteVisitID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialPartDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialPartDelete([Parameter(DbType = "Int")] System.Nullable<int> intMaterialPartID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialPartID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialPartGet")]
        public ISingleResult<SpMaterialPartGetResult> SpMaterialPartGet([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpMaterialPartGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialPartInsert")]
        public ISingleResult<SpMaterialPartInsertResult> SpMaterialPartInsert([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrPartName, [Parameter(DbType = "VarChar(50)")] string vchrSampleType, [Parameter(DbType = "Int")] System.Nullable<int> intNoSpecimens, [Parameter(DbType = "VarChar(50)")] string vchrNoSpecimensQual, [Parameter(DbType = "VarChar(50)")] string vchrLifestage, [Parameter(DbType = "VarChar(50)")] string vchrGender, [Parameter(DbType = "VarChar(50)")] string vchrRegNo, [Parameter(DbType = "VarChar(100)")] string vchrCondition, [Parameter(DbType = "VarChar(100)")] string vchrStorageSite, [Parameter(DbType = "VarChar(100)")] string vchrStorageMethod, [Parameter(DbType = "VarChar(100)")] string vchrCurationStatus, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrPartName, vchrSampleType, intNoSpecimens, vchrNoSpecimensQual, vchrLifestage, vchrGender, vchrRegNo, vchrCondition, vchrStorageSite, vchrStorageMethod, vchrCurationStatus, txtNotes);
            return ((ISingleResult<SpMaterialPartInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialPartInsertRDE")]
        public ISingleResult<SpMaterialPartInsertRDEResult> SpMaterialPartInsertRDE([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrPartName, [Parameter(DbType = "Int")] System.Nullable<int> intNoSpecimens, [Parameter(DbType = "VarChar(50)")] string vchrLifestage, [Parameter(DbType = "VarChar(50)")] string vchrGender, [Parameter(DbType = "VarChar(50)")] string vchrStorageMethod, [Parameter(DbType = "VarChar(50)")] string vchrSampleType, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrPartName, intNoSpecimens, vchrLifestage, vchrGender, vchrStorageMethod, vchrSampleType, txtNotes);
            return ((ISingleResult<SpMaterialPartInsertRDEResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialPartUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialPartUpdate([Parameter(DbType = "Int")] System.Nullable<int> intMaterialPartID, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrPartName, [Parameter(DbType = "VarChar(50)")] string vchrSampleType, [Parameter(DbType = "Int")] System.Nullable<int> intNoSpecimens, [Parameter(DbType = "VarChar(50)")] string vchrNoSpecimensQual, [Parameter(DbType = "VarChar(50)")] string vchrLifestage, [Parameter(DbType = "VarChar(50)")] string vchrGender, [Parameter(DbType = "VarChar(50)")] string vchrRegNo, [Parameter(DbType = "VarChar(100)")] string vchrCondition, [Parameter(DbType = "VarChar(100)")] string vchrStorageSite, [Parameter(DbType = "VarChar(100)")] string vchrStorageMethod, [Parameter(DbType = "VarChar(100)")] string vchrCurationStatus, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialPartID, intMaterialID, vchrPartName, vchrSampleType, intNoSpecimens, vchrNoSpecimensQual, vchrLifestage, vchrGender, vchrRegNo, vchrCondition, vchrStorageSite, vchrStorageMethod, vchrCurationStatus, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialPartUpdateRDE")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialPartUpdateRDE([Parameter(DbType = "Int")] System.Nullable<int> intMaterialPartID, [Parameter(DbType = "VarChar(255)")] string vchrPartName, [Parameter(DbType = "Int")] System.Nullable<int> intNoSpecimens, [Parameter(DbType = "VarChar(50)")] string vchrLifestage, [Parameter(DbType = "VarChar(50)")] string vchrGender, [Parameter(DbType = "VarChar(50)")] string vchrStorageMethod, [Parameter(DbType = "VarChar(50)")] string vchrSampleType, [Parameter(DbType = "Text")] string txtNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialPartID, vchrPartName, intNoSpecimens, vchrLifestage, vchrGender, vchrStorageMethod, vchrSampleType, txtNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialUpdate(
                    [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID,
                    [Parameter(DbType = "VarChar(255)")] string vchrMaterialName,
                    [Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID,
                    [Parameter(DbType = "VarChar(50)")] string vchrAccessionNo,
                    [Parameter(DbType = "VarChar(50)")] string vchrRegNo,
                    [Parameter(DbType = "VarChar(50)")] string vchrCollectorNo,
                    [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID,
                    [Parameter(DbType = "VarChar(50)")] string vchrIDBy,
                    [Parameter(DbType = "VarChar(50)")] string vchrIDDate,
                    [Parameter(DbType = "Int")] System.Nullable<int> intIDRefID,
                    [Parameter(DbType = "VarChar(100)")] string vchrIDRefPage,
                    [Parameter(DbType = "VarChar(255)")] string vchrIDMethod,
                    [Parameter(DbType = "VarChar(50)")] string vchrIDAccuracy,
                    [Parameter(DbType = "VarChar(255)")] string vchrIDNameQual,
                    [Parameter(DbType = "VarChar(255)")] string vchrIDNotes,
                    [Parameter(DbType = "VarChar(100)")] string vchrInstitution,
                    [Parameter(DbType = "VarChar(50)")] string vchrCollectionMethod,
                    [Parameter(DbType = "VarChar(255)")] string vchrAbundance,
                    [Parameter(DbType = "VarChar(255)")] string vchrMacroHabitat,
                    [Parameter(DbType = "VarChar(255)")] string vchrMicroHabitat,
                    [Parameter(DbType = "VarChar(50)")] string vchrSource,
                    [Parameter(DbType = "Int")] System.Nullable<int> intAssociateOf,
                    [Parameter(DbType = "Int")] System.Nullable<int> intTrapID,
                    [Parameter(DbType = "VarChar(500)")] string vchrSpecialLabel,
                    [Parameter(DbType = "VarChar(500)")] string vchrOriginalLabel) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrMaterialName, intSiteVisitID, vchrAccessionNo, vchrRegNo, vchrCollectorNo, intBiotaID, vchrIDBy, vchrIDDate, intIDRefID, vchrIDRefPage, vchrIDMethod, vchrIDAccuracy, vchrIDNameQual, vchrIDNotes, vchrInstitution, vchrCollectionMethod, vchrAbundance, vchrMacroHabitat, vchrMicroHabitat, vchrSource, intAssociateOf, intTrapID, vchrSpecialLabel, vchrOriginalLabel);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialUpdateName")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialUpdateName([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMaterialUpdateRDE")]
        [return: Parameter(DbType = "Int")]
        public int SpMaterialUpdateRDE([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "VarChar(255)")] string vchrMaterialName, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(50)")] string vchrIDBy, [Parameter(DbType = "VarChar(50)")] string vchrIDDate, [Parameter(DbType = "VarChar(50)")] string vchrMaterialSource, [Parameter(DbType = "VarChar(100)")] string vchrInstitution, [Parameter(DbType = "VarChar(50)")] string vchrAccessionNo, [Parameter(DbType = "VarChar(50)")] string vchrRegNo, [Parameter(DbType = "VarChar(50)")] string vchrCollectorNo, [Parameter(DbType = "VarChar(255)")] string vchrMacroHabitat, [Parameter(DbType = "VarChar(255)")] string vchrMicroHabitat, [Parameter(DbType = "Int")] System.Nullable<int> intTrapID, [Parameter(DbType = "VarChar(100)")] string vchrCollectionMethod, [Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID, vchrMaterialName, intBiotaID, vchrIDBy, vchrIDDate, vchrMaterialSource, vchrInstitution, vchrAccessionNo, vchrRegNo, vchrCollectorNo, vchrMacroHabitat, vchrMicroHabitat, intTrapID, vchrCollectionMethod, intSiteVisitID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMergeKeywords")]
        [return: Parameter(DbType = "Int")]
        public int SpMergeKeywords([Parameter(DbType = "Int")] System.Nullable<int> intCatID, [Parameter(DbType = "Int")] System.Nullable<int> intOldIntraCatID, [Parameter(DbType = "Int")] System.Nullable<int> intNewIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCatID, intOldIntraCatID, intNewIntraCatID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMergeTraits")]
        [return: Parameter(DbType = "Int")]
        public int SpMergeTraits([Parameter(DbType = "Int")] System.Nullable<int> intCatID, [Parameter(DbType = "Int")] System.Nullable<int> intOldIntraCatID, [Parameter(DbType = "Int")] System.Nullable<int> intNewIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCatID, intOldIntraCatID, intNewIntraCatID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyBiotaListFromFavorite")]
        public ISingleResult<SpMorphologyBiotaListFromFavoriteResult> SpMorphologyBiotaListFromFavorite([Parameter(DbType = "Int")] System.Nullable<int> intFavoriteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFavoriteID);
            return ((ISingleResult<SpMorphologyBiotaListFromFavoriteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellIDGet")]
        public ISingleResult<SpMorphologyCellIDGetResult> SpMorphologyCellIDGet([Parameter(Name = "ViewID", DbType = "Int")] System.Nullable<int> viewID, [Parameter(Name = "EntityID", DbType = "Int")] System.Nullable<int> entityID, [Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), viewID, entityID, characterID);
            return ((ISingleResult<SpMorphologyCellIDGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellListForInheritance")]
        public ISingleResult<SpMorphologyCellListForInheritanceResult> SpMorphologyCellListForInheritance([Parameter(DbType = "Int")] System.Nullable<int> intViewID, [Parameter(DbType = "Int")] System.Nullable<int> intEntityID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intViewID, intEntityID, intCharacterID);
            return ((ISingleResult<SpMorphologyCellListForInheritanceResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellNumericsClear")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyCellNumericsClear([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyCellID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyCellID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellNumericsInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyCellNumericsInsert([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyCellID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterNumericID, [Parameter(DbType = "Decimal(18,0)")] System.Nullable<decimal> numStart, [Parameter(DbType = "Decimal(18,0)")] System.Nullable<decimal> numEnd) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyCellID, intCharacterNumericID, numStart, numEnd);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellStatesClear")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyCellStatesClear([Parameter(Name = "CellID", DbType = "Int")] System.Nullable<int> cellID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cellID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellStateUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyCellStateUpdateFromCube([Parameter(Name = "CellID", DbType = "Int")] System.Nullable<int> cellID, [Parameter(Name = "StateID", DbType = "Int")] System.Nullable<int> stateID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cellID, stateID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCellUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyCellUpdateFromCube([Parameter(Name = "ViewID", DbType = "Int")] System.Nullable<int> viewID, [Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID, [Parameter(Name = "EntityID", DbType = "Int")] System.Nullable<int> entityID, [Parameter(Name = "InsertedWithProjectID", DbType = "Int")] System.Nullable<int> insertedWithProjectID, [Parameter(Name = "Flags", DbType = "Int")] System.Nullable<int> flags, [Parameter(Name = "Coding", DbType = "Text")] string coding) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), viewID, characterID, entityID, insertedWithProjectID, flags, coding);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCharListFromChar")]
        public ISingleResult<SpMorphologyCharListFromCharResult> SpMorphologyCharListFromChar([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID);
            return ((ISingleResult<SpMorphologyCharListFromCharResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCharListFromFavorite")]
        public ISingleResult<SpMorphologyCharListFromFavoriteResult> SpMorphologyCharListFromFavorite([Parameter(DbType = "Int")] System.Nullable<int> intFavoriteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFavoriteID);
            return ((ISingleResult<SpMorphologyCharListFromFavoriteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyCharListFromGroup")]
        public ISingleResult<SpMorphologyCharListFromGroupResult> SpMorphologyCharListFromGroup([Parameter(DbType = "Int")] System.Nullable<int> intCharGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharGroupID);
            return ((ISingleResult<SpMorphologyCharListFromGroupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyEntityInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyEntityInsertFromCube([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(20)")] string vchrType, [Parameter(DbType = "Int")] System.Nullable<int> intBaseEntityParentID, [Parameter(Name = "ImportedWithProjectID", DbType = "Int")] System.Nullable<int> importedWithProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, vchrType, intBaseEntityParentID, importedWithProjectID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyImportMapCharacter")]
        [ResultType(typeof(SpMorphologyImportMapCharacterResult))]
        public IMultipleResults SpMorphologyImportMapCharacter([Parameter(DbType = "VarChar(255)")] string vchrCharacter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCharacter);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyImportMapCharacterState")]
        [ResultType(typeof(SpMorphologyImportMapCharacterStateResult))]
        public IMultipleResults SpMorphologyImportMapCharacterState([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "VarChar(255)")] string vchrCharacterState) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID, vchrCharacterState);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyImportMapTaxon")]
        [ResultType(typeof(SpMorphologyImportMapTaxonResult))]
        public IMultipleResults SpMorphologyImportMapTaxon([Parameter(DbType = "VarChar(255)")] string vchrTaxon) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTaxon);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyMaterialFromBase")]
        [ResultType(typeof(SpMorphologyMaterialFromBaseResult))]
        public IMultipleResults SpMorphologyMaterialFromBase([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharacterAdd")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectCharacterAdd([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID, [Parameter(DbType = "Int")] System.Nullable<int> intOrderNumber, [Parameter(DbType = "Int")] System.Nullable<int> intOrigDeltaNumber) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intCharacterID, intOrderNumber, intOrigDeltaNumber);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharacterAliasList")]
        [ResultType(typeof(SpMorphologyProjectCharacterAliasListResult))]
        public IMultipleResults SpMorphologyProjectCharacterAliasList([Parameter(DbType = "Char(1)")] string chrIDType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrIDType, intID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharacterList")]
        [ResultType(typeof(SpMorphologyProjectCharacterListResult1))]
        [ResultType(typeof(SpMorphologyProjectCharacterListResult2))]
        public IMultipleResults SpMorphologyProjectCharacterList([Parameter(DbType = "VarChar(5)")] string vchrIDType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrIDType, intID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharacterNumericList")]
        [ResultType(typeof(SpMorphologyProjectCharacterNumericListResult))]
        public IMultipleResults SpMorphologyProjectCharacterNumericList([Parameter(DbType = "VarChar(5)")] string vchrIDType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrIDType, intID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharacterRemove")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectCharacterRemove([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intCharacterID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharacterStateList")]
        [ResultType(typeof(SpMorphologyProjectCharacterStateListResult1))]
        [ResultType(typeof(SpMorphologyProjectCharacterStateListResult2))]
        public IMultipleResults SpMorphologyProjectCharacterStateList([Parameter(DbType = "VarChar(5)")] string vchrIDType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrIDType, intID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharGroupDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectCharGroupDelete([Parameter(DbType = "Int")] System.Nullable<int> intMorphProjCharGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphProjCharGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharGroupInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectCharGroupInsert([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(5)")] string vchrType, [Parameter(DbType = "Int")] System.Nullable<int> intOrderNumber, [Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, intProjectID, intParentID, vchrType, intOrderNumber, intCharacterID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharGroupMove")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectCharGroupMove([Parameter(DbType = "Int")] System.Nullable<int> intMorphProjCharGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphProjCharGroupID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectCharGroupUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectCharGroupUpdate([Parameter(DbType = "Int")] System.Nullable<int> intMorphProjCharGroupID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "Int")] System.Nullable<int> intOrderNumber) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphProjCharGroupID, vchrName, intParentID, intOrderNumber);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectClearAll")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectClearAll([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectDelete([Parameter(DbType = "Int")] System.Nullable<int> intProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectDependancyList")]
        [ResultType(typeof(SpMorphologyProjectDependancyListResult))]
        public IMultipleResults SpMorphologyProjectDependancyList([Parameter(DbType = "VarChar(5)")] string vchrIDType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrIDType, intID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectEntityAdd")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectEntityAdd([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intSourceID, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintSourceType, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(Name = "ImportedWithProjectID", DbType = "Int")] System.Nullable<int> importedWithProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intSourceID, tintSourceType, intOrder, importedWithProjectID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectEntityList")]
        public ISingleResult<SpMorphologyProjectEntityListResult> SpMorphologyProjectEntityList([Parameter(DbType = "Int")] System.Nullable<int> intProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID);
            return ((ISingleResult<SpMorphologyProjectEntityListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectEntityRemove")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectEntityRemove([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intEntityID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intEntityID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectEntityUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectEntityUpdate([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intEntityID, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitHidden, [Parameter(DbType = "Int")] System.Nullable<int> intBaseEntityParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intEntityID, intOrder, bitHidden, intBaseEntityParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectGet")]
        public ISingleResult<SpMorphologyProjectGetResult> SpMorphologyProjectGet([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
            return ((ISingleResult<SpMorphologyProjectGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectGroupDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectGroupDelete([Parameter(DbType = "Int")] System.Nullable<int> intProjectGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectGroupInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectGroupInsert([Parameter(DbType = "VarChar(30)")] string vchrParentID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrParentID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectGroupList")]
        public ISingleResult<SpMorphologyProjectGroupListResult> SpMorphologyProjectGroupList([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID);
            return ((ISingleResult<SpMorphologyProjectGroupListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectGroupRename")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectGroupRename([Parameter(DbType = "Int")] System.Nullable<int> vchrProjectID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrProjectID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectInsert([Parameter(DbType = "Char(1)")] string chrProjectType, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Bit")] System.Nullable<bool> bitCreatedByImport, [Parameter(DbType = "Int")] System.Nullable<int> intProjectGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrProjectType, vchrName, bitCreatedByImport, intProjectGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectLookup")]
        public ISingleResult<SpMorphologyProjectLookupResult> SpMorphologyProjectLookup([Parameter(DbType = "VarChar(2000)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpMorphologyProjectLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectMiscItemInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectMiscItemInsertFromCube([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "VarChar(255)")] string vchrCategory, [Parameter(DbType = "VarChar(2000)")] string vchrValue, [Parameter(DbType = "Int")] System.Nullable<int> intOrder) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, vchrCategory, vchrValue, intOrder);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectMiscItemList")]
        public ISingleResult<SpMorphologyProjectMiscItemListResult> SpMorphologyProjectMiscItemList([Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intID);
            return ((ISingleResult<SpMorphologyProjectMiscItemListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectMiscItemUpdateFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectMiscItemUpdateFromCube([Parameter(DbType = "Int")] System.Nullable<int> intProjectMiscItemID, [Parameter(DbType = "VarChar(255)")] string vchrCategory, [Parameter(DbType = "VarChar(2000)")] string vchrValue, [Parameter(DbType = "Int")] System.Nullable<int> intOrder) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectMiscItemID, vchrCategory, vchrValue, intOrder);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectMove")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectMove([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intNewProjectGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intNewProjectGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectRename")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectRename([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectsList")]
        public ISingleResult<SpMorphologyProjectsListResult> SpMorphologyProjectsList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpMorphologyProjectsListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectUpdate([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Text")] string txtDescription, [Parameter(DbType = "Bit")] System.Nullable<bool> bitImported, [Parameter(DbType = "SmallInt")] System.Nullable<short> sintImportSourceType, [Parameter(DbType = "VarChar(50)")] string vchrImportDateTime) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, vchrName, txtDescription, bitImported, sintImportSourceType, vchrImportDateTime);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectViewAdd")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectViewAdd([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intViewID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectViewList")]
        [ResultType(typeof(SpMorphologyProjectViewListResult))]
        public IMultipleResults SpMorphologyProjectViewList([Parameter(DbType = "Char(1)")] string chrSourceType, [Parameter(DbType = "Int")] System.Nullable<int> intSourceID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrSourceType, intSourceID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyProjectViewRemove")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyProjectViewRemove([Parameter(DbType = "Int")] System.Nullable<int> intProjectID, [Parameter(DbType = "Int")] System.Nullable<int> intViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID, intViewID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyTaxonFromBase")]
        public ISingleResult<SpMorphologyTaxonFromBaseResult> SpMorphologyTaxonFromBase([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpMorphologyTaxonFromBaseResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewAliasDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewAliasDelete([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyViewAliasID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyViewAliasID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewAliasInsert")]
        public ISingleResult<SpMorphologyViewAliasInsertResult> SpMorphologyViewAliasInsert([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyViewID, [Parameter(DbType = "Int")] System.Nullable<int> intSourceID, [Parameter(DbType = "Char(1)")] string chrSourceType, [Parameter(DbType = "VarChar(1000)")] string vchrAlias) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyViewID, intSourceID, chrSourceType, vchrAlias);
            return ((ISingleResult<SpMorphologyViewAliasInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewAliasInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewAliasInsertFromCube([Parameter(DbType = "Char(1)")] string chrSourceType, [Parameter(DbType = "Int")] System.Nullable<int> intSourceID, [Parameter(DbType = "Int")] System.Nullable<int> intMorphologyViewID, [Parameter(DbType = "VarChar(1000)")] string vchrAlias, [Parameter(DbType = "Bit")] System.Nullable<bool> bitClearFirst) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrSourceType, intSourceID, intMorphologyViewID, vchrAlias, bitClearFirst);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewAliasList")]
        public ISingleResult<SpMorphologyViewAliasListResult> SpMorphologyViewAliasList([Parameter(DbType = "Char(1)")] string chrSourceType, [Parameter(DbType = "Int")] System.Nullable<int> intSourceID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrSourceType, intSourceID);
            return ((ISingleResult<SpMorphologyViewAliasListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewAliasUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewAliasUpdate([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyViewAliasID, [Parameter(DbType = "VarChar(1000)")] string vchrAlias) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyViewAliasID, vchrAlias);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewAlreadyExists")]
        public ISingleResult<SpMorphologyViewAlreadyExistsResult> SpMorphologyViewAlreadyExists([Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName);
            return ((ISingleResult<SpMorphologyViewAlreadyExistsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewDelete([Parameter(DbType = "Int")] System.Nullable<int> intViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intViewID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewGet")]
        public ISingleResult<SpMorphologyViewGetResult> SpMorphologyViewGet([Parameter(DbType = "Int")] System.Nullable<int> intMorphologyViewID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMorphologyViewID);
            return ((ISingleResult<SpMorphologyViewGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewGetDefault")]
        public ISingleResult<SpMorphologyViewGetDefaultResult> SpMorphologyViewGetDefault() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpMorphologyViewGetDefaultResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewGroupDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewGroupDelete([Parameter(DbType = "Int")] System.Nullable<int> intViewGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intViewGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewGroupInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewGroupInsert([Parameter(DbType = "VarChar(30)")] string vchrParentID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrParentID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewGroupRename")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewGroupRename([Parameter(DbType = "Int")] System.Nullable<int> vchrViewID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrViewID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewInsert([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intViewGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, intViewGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewInsertFromCube")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewInsertFromCube([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intImportedWithProjID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, intImportedWithProjID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewLookup")]
        public ISingleResult<SpMorphologyViewLookupResult> SpMorphologyViewLookup([Parameter(DbType = "VarChar(2000)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpMorphologyViewLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewMove")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewMove([Parameter(DbType = "Int")] System.Nullable<int> intViewID, [Parameter(DbType = "Int")] System.Nullable<int> intNewViewGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intViewID, intNewViewGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewRename")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewRename([Parameter(DbType = "Int")] System.Nullable<int> intViewID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intViewID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewsList")]
        public ISingleResult<SpMorphologyViewsListResult> SpMorphologyViewsList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpMorphologyViewsListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMorphologyViewUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMorphologyViewUpdate([Parameter(DbType = "Int")] System.Nullable<int> intViewID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(10)")] string vchrType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intViewID, vchrName, vchrType);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaArtistLookup")]
        public ISingleResult<SpMultimediaArtistLookupResult> SpMultimediaArtistLookup([Parameter(DbType = "VarChar(255)")] string vchrSearchCriteria) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrSearchCriteria);
            return ((ISingleResult<SpMultimediaArtistLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaDelete([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaExtensions")]
        public ISingleResult<SpMultimediaExtensionsResult> SpMultimediaExtensions() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpMultimediaExtensionsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaFind")]
        public ISingleResult<SpMultimediaFindResult> SpMultimediaFind([Parameter(DbType = "VarChar(255)")] string vchrExtensionCriteria, [Parameter(DbType = "VarChar(255)")] string vchrCategoryCriteria, [Parameter(DbType = "Text")] string txtSearchTerm) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrExtensionCriteria, vchrCategoryCriteria, txtSearchTerm);
            return ((ISingleResult<SpMultimediaFindResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaFindByName")]
        public ISingleResult<SpMultimediaFindByNameResult> SpMultimediaFindByName([Parameter(DbType = "Text")] string txtSearchTerm) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), txtSearchTerm);
            return ((ISingleResult<SpMultimediaFindByNameResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaGet")]
        public ISingleResult<SpMultimediaGetResult> SpMultimediaGet([Parameter(DbType = "Int")] System.Nullable<int> intMMID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMMID);
            return ((ISingleResult<SpMultimediaGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaGetOne")]
        public ISingleResult<SpMultimediaGetOneResult> SpMultimediaGetOne([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaID);
            return ((ISingleResult<SpMultimediaGetOneResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaInsert")]
        public ISingleResult<SpMultimediaInsertResult> SpMultimediaInsert([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(255)")] string vchrFileExtension, [Parameter(DbType = "Int")] System.Nullable<int> intSizeInBytes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, vchrFileExtension, intSizeInBytes);
            return ((ISingleResult<SpMultimediaInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaLinkDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaLinkDelete([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaLinkID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaLinkID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaLinkExists")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaLinkExists([Parameter(DbType = "Int")] System.Nullable<int> intMMID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intMMTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMMID, vchrCategory, intMMTypeID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaLinkInsert")]
        public ISingleResult<SpMultimediaLinkInsertResult> SpMultimediaLinkInsert([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(255)")] string vchrMultimediaType, [Parameter(DbType = "Int")] System.Nullable<int> intMultimediaID, [Parameter(DbType = "VarChar(255)")] string vchrCaption) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID, vchrMultimediaType, intMultimediaID, vchrCaption);
            return ((ISingleResult<SpMultimediaLinkInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaLinkTypesForCategory")]
        public ISingleResult<SpMultimediaLinkTypesForCategoryResult> SpMultimediaLinkTypesForCategory([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpMultimediaLinkTypesForCategoryResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaLinkUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaLinkUpdate([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaLinkID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(255)")] string vchrMultimediaType, [Parameter(DbType = "VarChar(255)")] string vchrCaption) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaLinkID, vchrCategory, vchrMultimediaType, vchrCaption);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaList")]
        public ISingleResult<SpMultimediaListResult> SpMultimediaList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpMultimediaListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaListForCharacter")]
        public ISingleResult<SpMultimediaListForCharacterResult> SpMultimediaListForCharacter([Parameter(DbType = "Int")] System.Nullable<int> intCharacterID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCharacterID);
            return ((ISingleResult<SpMultimediaListForCharacterResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaListForProject")]
        public ISingleResult<SpMultimediaListForProjectResult> SpMultimediaListForProject([Parameter(DbType = "Int")] System.Nullable<int> intProjectID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intProjectID);
            return ((ISingleResult<SpMultimediaListForProjectResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaOwnerLookup")]
        public ISingleResult<SpMultimediaOwnerLookupResult> SpMultimediaOwnerLookup([Parameter(DbType = "VarChar(255)")] string vchrSearchCriteria) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrSearchCriteria);
            return ((ISingleResult<SpMultimediaOwnerLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaTypeGetSet")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaTypeGetSet([Parameter(DbType = "VarChar(255)")] string vchrMultimediaType, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] ref System.Nullable<int> intMultimediaTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrMultimediaType, vchrCategory, intMultimediaTypeID);
            intMultimediaTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaTypeGetSetFromCatID")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaTypeGetSetFromCatID([Parameter(DbType = "VarChar(255)")] string vchrMultimediaType, [Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] ref System.Nullable<int> intMultimediaTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrMultimediaType, intCategoryID, intMultimediaTypeID);
            intMultimediaTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaTypeList")]
        public ISingleResult<SpMultimediaTypeListResult> SpMultimediaTypeList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpMultimediaTypeListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaUpdateLong")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaUpdateLong([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(255)")] string vchrNumber, [Parameter(DbType = "VarChar(255)")] string vchrArtist, [Parameter(DbType = "VarChar(255)")] string vchrDateRecorded, [Parameter(DbType = "VarChar(255)")] string vchrOwner, [Parameter(DbType = "Text")] string txtCopyright) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaID, vchrName, vchrNumber, vchrArtist, vchrDateRecorded, vchrOwner, txtCopyright);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spMultimediaUpdateShort")]
        [return: Parameter(DbType = "Int")]
        public int SpMultimediaUpdateShort([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(255)")] string vchrFileExtension, [Parameter(DbType = "Int")] System.Nullable<int> intSizeInBytes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaID, vchrName, vchrFileExtension, intSizeInBytes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpNoteDelete([Parameter(DbType = "Int")] System.Nullable<int> intNoteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intNoteID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteInsert")]
        public ISingleResult<SpNoteInsertResult> SpNoteInsert([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(255)")] string vchrNoteType, [Parameter(DbType = "Text")] string txtNote, [Parameter(DbType = "VarChar(255)")] string vchrAuthor, [Parameter(DbType = "Text")] string txtComments, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReports, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(255)")] string vchrRefPages) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID, vchrNoteType, txtNote, vchrAuthor, txtComments, bitUseInReports, intRefID, vchrRefPages);
            return ((ISingleResult<SpNoteInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteList")]
        public ISingleResult<SpNoteListResult> SpNoteList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpNoteListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNotesTraitsRefCopy")]
        [return: Parameter(DbType = "Int")]
        public int SpNotesTraitsRefCopy([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intBasedOnID, [Parameter(DbType = "Int")] System.Nullable<int> intNewID, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintDoNotes, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintDoTraits, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintDoRefs) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intBasedOnID, intNewID, tintDoNotes, tintDoTraits, tintDoRefs);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteTypeGetSet")]
        [return: Parameter(DbType = "Int")]
        public int SpNoteTypeGetSet([Parameter(DbType = "VarChar(255)")] string vchrNoteType, [Parameter(DbType = "VarChar(255)")] string vchrCategoryType, [Parameter(DbType = "Int")] ref System.Nullable<int> intNoteTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrNoteType, vchrCategoryType, intNoteTypeID);
            intNoteTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteTypeGetSetForCatID")]
        [return: Parameter(DbType = "Int")]
        public int SpNoteTypeGetSetForCatID([Parameter(DbType = "VarChar(255)")] string vchrNoteType, [Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] ref System.Nullable<int> intNoteTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrNoteType, intCategoryID, intNoteTypeID);
            intNoteTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteTypeList")]
        public ISingleResult<SpNoteTypeListResult> SpNoteTypeList([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpNoteTypeListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteTypeListForCategory")]
        public ISingleResult<SpNoteTypeListForCategoryResult> SpNoteTypeListForCategory([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpNoteTypeListForCategoryResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spNoteUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpNoteUpdate([Parameter(DbType = "Int")] System.Nullable<int> intNoteID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(50)")] string vchrNoteType, [Parameter(DbType = "Text")] string txtNote, [Parameter(DbType = "VarChar(255)")] string vchrAuthor, [Parameter(DbType = "Text")] string txtComments, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReports, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(255)")] string vchrRefPages) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intNoteID, vchrCategory, vchrNoteType, txtNote, vchrAuthor, txtComments, bitUseInReports, intRefID, vchrRefPages);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPermissionCopyGroup")]
        [return: Parameter(DbType = "Int")]
        public int SpPermissionCopyGroup([Parameter(DbType = "Int")] System.Nullable<int> intFromGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intToGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFromGroupID, intToGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPermissionList")]
        [ResultType(typeof(SpPermissionListResult))]
        public IMultipleResults SpPermissionList([Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intPermID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID, intPermID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPermissionRemoveGroup")]
        [return: Parameter(DbType = "Int")]
        public int SpPermissionRemoveGroup([Parameter(DbType = "Int")] System.Nullable<int> intGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPermissionSet")]
        [return: Parameter(DbType = "Int")]
        public int SpPermissionSet([Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intPermID, [Parameter(DbType = "Int")] System.Nullable<int> intPermMask1, [Parameter(DbType = "Int")] System.Nullable<int> intPermMask2) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID, intPermID, intPermMask1, intPermMask2);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseCategoryDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpPhraseCategoryDelete([Parameter(DbType = "Int")] System.Nullable<int> intCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCatID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseCategoryGetID")]
        [return: Parameter(DbType = "Int")]
        public int SpPhraseCategoryGetID([Parameter(DbType = "VarChar(100)")] string vchrCategory, [Parameter(DbType = "Bit")] System.Nullable<bool> bitFixed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, bitFixed);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseCategoryInsert")]
        public ISingleResult<SpPhraseCategoryInsertResult> SpPhraseCategoryInsert([Parameter(DbType = "VarChar(100)")] string vchrCategory, [Parameter(DbType = "Bit")] System.Nullable<bool> bitFixed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, bitFixed);
            return ((ISingleResult<SpPhraseCategoryInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseCategoryList")]
        public ISingleResult<SpPhraseCategoryListResult> SpPhraseCategoryList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpPhraseCategoryListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseCategoryRename")]
        [return: Parameter(DbType = "Int")]
        public int SpPhraseCategoryRename([Parameter(DbType = "Int")] System.Nullable<int> intCatID, [Parameter(DbType = "VarChar(100)")] string vchrNewCategoryName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCatID, vchrNewCategoryName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpPhraseDelete([Parameter(DbType = "Int")] System.Nullable<int> intPhraseID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPhraseID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseInsert")]
        public ISingleResult<SpPhraseInsertResult> SpPhraseInsert([Parameter(DbType = "Int")] System.Nullable<int> intPhraseCatID, [Parameter(DbType = "VarChar(255)")] string vchrPhrase) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPhraseCatID, vchrPhrase);
            return ((ISingleResult<SpPhraseInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseList")]
        public ISingleResult<SpPhraseListResult> SpPhraseList([Parameter(DbType = "Int")] System.Nullable<int> intCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategory);
            return ((ISingleResult<SpPhraseListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseListByCatName")]
        public ISingleResult<SpPhraseListByCatNameResult> SpPhraseListByCatName([Parameter(DbType = "VarChar(255)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpPhraseListByCatNameResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPhraseRename")]
        [return: Parameter(DbType = "Int")]
        public int SpPhraseRename([Parameter(DbType = "Int")] System.Nullable<int> intPhraseID, [Parameter(DbType = "VarChar(255)")] string vchrPhrase) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPhraseID, vchrPhrase);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spProjectGetCells")]
        public ISingleResult<SpProjectGetCellsResult> SpProjectGetCells([Parameter(DbType = "Int")] System.Nullable<int> intNumCells) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intNumCells);
            return ((ISingleResult<SpProjectGetCellsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPublicationDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpPublicationDelete([Parameter(DbType = "Int")] System.Nullable<int> intPublicationID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPublicationID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPublicationInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpPublicationInsert([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Text")] string txtXMLData) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, txtXMLData);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPublicationList")]
        public ISingleResult<SpPublicationListResult> SpPublicationList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpPublicationListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spPublicationUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpPublicationUpdate([Parameter(DbType = "Int")] System.Nullable<int> intPublicationID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Text")] string txtXMLData) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPublicationID, vchrName, txtXMLData);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceCount")]
        public ISingleResult<SpReferenceCountResult> SpReferenceCount() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpReferenceCountResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpReferenceDelete([Parameter(DbType = "Int")] System.Nullable<int> intRefID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceGet")]
        public ISingleResult<SpReferenceGetResult> SpReferenceGet([Parameter(DbType = "Int")] System.Nullable<int> intRefID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID);
            return ((ISingleResult<SpReferenceGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceGetIDForCode")]
        public ISingleResult<SpReferenceGetIDForCodeResult> SpReferenceGetIDForCode([Parameter(DbType = "VarChar(50)")] string vchrRefCode) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefCode);
            return ((ISingleResult<SpReferenceGetIDForCodeResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceImport")]
        [ResultType(typeof(SpReferenceImportResult1))]
        [ResultType(typeof(SpReferenceImportResult2))]
        public IMultipleResults SpReferenceImport(
                    [Parameter(DbType = "VarChar(50)")] string vchrRefCode,
                    [Parameter(DbType = "VarChar(900)")] string vchrAuthor,
                    [Parameter(DbType = "VarChar(900)")] string vchrTitle,
                    [Parameter(DbType = "VarChar(900)")] string vchrBookTitle,
                    [Parameter(DbType = "VarChar(500)")] string vchrEditor,
                    [Parameter(DbType = "VarChar(20)")] string vchrRefType,
                    [Parameter(DbType = "VarChar(10)")] string vchrYearOfPub,
                    [Parameter(DbType = "VarChar(50)")] string vchrActualDate,
                    [Parameter(DbType = "VarChar(100)")] string vchrJournalAbbrevName,
                    [Parameter(DbType = "VarChar(900)")] string vchrJournalFullName,
                    [Parameter(DbType = "VarChar(50)")] string vchrPartNo,
                    [Parameter(DbType = "VarChar(50)")] string vchrSeries,
                    [Parameter(DbType = "VarChar(200)")] string vchrPublisher,
                    [Parameter(DbType = "VarChar(200)")] string vchrPlace,
                    [Parameter(DbType = "VarChar(50)")] string vchrVolume,
                    [Parameter(DbType = "VarChar(50)")] string vchrPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrTotalPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrPossess,
                    [Parameter(DbType = "VarChar(50)")] string vchrSource,
                    [Parameter(DbType = "VarChar(50)")] string vchrEdition,
                    [Parameter(DbType = "VarChar(30)")] string vchrISBN,
                    [Parameter(DbType = "VarChar(30)")] string vchrISSN,
                    [Parameter(DbType = "Text")] string txtAbstract,
                    [Parameter(DbType = "Text")] string txtDateQual,
                    [Parameter(DbType = "Int")] System.Nullable<int> intStartPage,
                    [Parameter(DbType = "Int")] System.Nullable<int> intEndPage) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefCode, vchrAuthor, vchrTitle, vchrBookTitle, vchrEditor, vchrRefType, vchrYearOfPub, vchrActualDate, vchrJournalAbbrevName, vchrJournalFullName, vchrPartNo, vchrSeries, vchrPublisher, vchrPlace, vchrVolume, vchrPages, vchrTotalPages, vchrPossess, vchrSource, vchrEdition, vchrISBN, vchrISSN, txtAbstract, txtDateQual, intStartPage, intEndPage);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceInsert")]
        public ISingleResult<SpReferenceInsertResult> SpReferenceInsert(
                    [Parameter(DbType = "VarChar(50)")] string vchrRefCode,
                    [Parameter(DbType = "VarChar(900)")] string vchrAuthor,
                    [Parameter(DbType = "VarChar(900)")] string vchrTitle,
                    [Parameter(DbType = "VarChar(900)")] string vchrBookTitle,
                    [Parameter(DbType = "VarChar(500)")] string vchrEditor,
                    [Parameter(DbType = "VarChar(20)")] string vchrRefType,
                    [Parameter(DbType = "VarChar(10)")] string vchrYearOfPub,
                    [Parameter(DbType = "VarChar(50)")] string vchrActualDate,
                    [Parameter(DbType = "Int")] System.Nullable<int> intJournalID,
                    [Parameter(DbType = "VarChar(50)")] string vchrPartNo,
                    [Parameter(DbType = "VarChar(50)")] string vchrSeries,
                    [Parameter(DbType = "VarChar(200)")] string vchrPublisher,
                    [Parameter(DbType = "VarChar(200)")] string vchrPlace,
                    [Parameter(DbType = "VarChar(50)")] string vchrVolume,
                    [Parameter(DbType = "VarChar(50)")] string vchrPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrTotalPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrPossess,
                    [Parameter(DbType = "VarChar(50)")] string vchrSource,
                    [Parameter(DbType = "VarChar(50)")] string vchrEdition,
                    [Parameter(DbType = "VarChar(30)")] string vchrISBN,
                    [Parameter(DbType = "VarChar(30)")] string vchrISSN,
                    [Parameter(DbType = "Text")] string txtAbstract,
                    [Parameter(DbType = "Text")] string txtFullText,
                    [Parameter(DbType = "Text")] string txtFullRTF,
                    [Parameter(DbType = "Int")] System.Nullable<int> intStartPage,
                    [Parameter(DbType = "Int")] System.Nullable<int> intEndPage) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefCode, vchrAuthor, vchrTitle, vchrBookTitle, vchrEditor, vchrRefType, vchrYearOfPub, vchrActualDate, intJournalID, vchrPartNo, vchrSeries, vchrPublisher, vchrPlace, vchrVolume, vchrPages, vchrTotalPages, vchrPossess, vchrSource, vchrEdition, vchrISBN, vchrISSN, txtAbstract, txtFullText, txtFullRTF, intStartPage, intEndPage);
            return ((ISingleResult<SpReferenceInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceInsertADODB")]
        public ISingleResult<SpReferenceInsertADODBResult> SpReferenceInsertADODB(
                    [Parameter(DbType = "VarChar(50)")] string vchrRefCode,
                    [Parameter(DbType = "VarChar(900)")] string vchrAuthor,
                    [Parameter(DbType = "VarChar(200)")] string vchrTitle1,
                    [Parameter(DbType = "VarChar(200)")] string vchrTitle2,
                    [Parameter(DbType = "VarChar(200)")] string vchrTitle3,
                    [Parameter(DbType = "VarChar(200)")] string vchrBookTitle1,
                    [Parameter(DbType = "VarChar(200)")] string vchrBookTitle2,
                    [Parameter(DbType = "VarChar(200)")] string vchrBookTitle3,
                    [Parameter(DbType = "VarChar(500)")] string vchrEditor,
                    [Parameter(DbType = "VarChar(20)")] string vchrRefType,
                    [Parameter(DbType = "VarChar(10)")] string vchrYearOfPub,
                    [Parameter(DbType = "VarChar(50)")] string vchrActualDate,
                    [Parameter(DbType = "Int")] System.Nullable<int> intJournalID,
                    [Parameter(DbType = "VarChar(50)")] string vchrPartNo,
                    [Parameter(DbType = "VarChar(50)")] string vchrSeries,
                    [Parameter(DbType = "VarChar(200)")] string vchrPublisher,
                    [Parameter(DbType = "VarChar(200)")] string vchrPlace,
                    [Parameter(DbType = "VarChar(50)")] string vchrVolume,
                    [Parameter(DbType = "VarChar(50)")] string vchrPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrTotalPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrPossess,
                    [Parameter(DbType = "VarChar(50)")] string vchrSource,
                    [Parameter(DbType = "VarChar(50)")] string vchrEdition,
                    [Parameter(DbType = "VarChar(30)")] string vchrISBN,
                    [Parameter(DbType = "VarChar(30)")] string vchrISSN,
                    [Parameter(DbType = "Text")] string txtAbstract,
                    [Parameter(DbType = "VarChar(200)")] string txtFullText1,
                    [Parameter(DbType = "VarChar(200)")] string txtFullText2,
                    [Parameter(DbType = "VarChar(200)")] string txtFullText3,
                    [Parameter(DbType = "VarChar(200)")] string txtFullText4,
                    [Parameter(DbType = "VarChar(200)")] string txtFullRTF1,
                    [Parameter(DbType = "VarChar(200)")] string txtFullRTF2,
                    [Parameter(DbType = "VarChar(200)")] string txtFullRTF3,
                    [Parameter(DbType = "VarChar(200)")] string txtFullRTF4,
                    [Parameter(DbType = "Int")] System.Nullable<int> intStartPage,
                    [Parameter(DbType = "Int")] System.Nullable<int> intEndPage) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefCode, vchrAuthor, vchrTitle1, vchrTitle2, vchrTitle3, vchrBookTitle1, vchrBookTitle2, vchrBookTitle3, vchrEditor, vchrRefType, vchrYearOfPub, vchrActualDate, intJournalID, vchrPartNo, vchrSeries, vchrPublisher, vchrPlace, vchrVolume, vchrPages, vchrTotalPages, vchrPossess, vchrSource, vchrEdition, vchrISBN, vchrISSN, txtAbstract, txtFullText1, txtFullText2, txtFullText3, txtFullText4, txtFullRTF1, txtFullRTF2, txtFullRTF3, txtFullRTF4, intStartPage, intEndPage);
            return ((ISingleResult<SpReferenceInsertADODBResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceList")]
        public ISingleResult<SpReferenceListResult> SpReferenceList([Parameter(DbType = "VarChar(2000)")] string vchrRefIDList) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefIDList);
            return ((ISingleResult<SpReferenceListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceListBlankPreviewIDs")]
        public ISingleResult<SpReferenceListBlankPreviewIDsResult> SpReferenceListBlankPreviewIDs() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpReferenceListBlankPreviewIDsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceListCheck")]
        public ISingleResult<SpReferenceListCheckResult> SpReferenceListCheck([Parameter(DbType = "VarChar(1000)")] string vchrTitle, [Parameter(DbType = "VarChar(1000)")] string vchrAuthor, [Parameter(DbType = "VarChar(1000)")] string vchrYearOfPub) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTitle, vchrAuthor, vchrYearOfPub);
            return ((ISingleResult<SpReferenceListCheckResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceLookup")]
        public ISingleResult<SpReferenceLookupResult> SpReferenceLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpReferenceLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpReferenceMerge([Parameter(DbType = "Int")] System.Nullable<int> intFromRefID, [Parameter(DbType = "Int")] System.Nullable<int> intToRefID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intFromRefID, intToRefID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceSavePreview")]
        [return: Parameter(DbType = "Int")]
        public int SpReferenceSavePreview([Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "Text")] string txtFullRTF, [Parameter(DbType = "Text")] string txtFullText) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID, txtFullRTF, txtFullText);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReferenceUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpReferenceUpdate(
                    [Parameter(DbType = "Int")] System.Nullable<int> intRefID,
                    [Parameter(DbType = "VarChar(50)")] string vchrRefCode,
                    [Parameter(DbType = "VarChar(900)")] string vchrAuthor,
                    [Parameter(DbType = "VarChar(900)")] string vchrTitle,
                    [Parameter(DbType = "VarChar(900)")] string vchrBookTitle,
                    [Parameter(DbType = "VarChar(500)")] string vchrEditor,
                    [Parameter(DbType = "VarChar(20)")] string vchrRefType,
                    [Parameter(DbType = "VarChar(10)")] string vchrYearOfPub,
                    [Parameter(DbType = "VarChar(50)")] string vchrActualDate,
                    [Parameter(DbType = "Int")] System.Nullable<int> intJournalID,
                    [Parameter(DbType = "VarChar(50)")] string vchrPartNo,
                    [Parameter(DbType = "VarChar(50)")] string vchrSeries,
                    [Parameter(DbType = "VarChar(200)")] string vchrPublisher,
                    [Parameter(DbType = "VarChar(200)")] string vchrPlace,
                    [Parameter(DbType = "VarChar(50)")] string vchrVolume,
                    [Parameter(DbType = "VarChar(50)")] string vchrPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrTotalPages,
                    [Parameter(DbType = "VarChar(50)")] string vchrPossess,
                    [Parameter(DbType = "VarChar(50)")] string vchrSource,
                    [Parameter(DbType = "VarChar(50)")] string vchrEdition,
                    [Parameter(DbType = "VarChar(30)")] string vchrISBN,
                    [Parameter(DbType = "VarChar(30)")] string vchrISSN,
                    [Parameter(DbType = "Text")] string txtAbstract,
                    [Parameter(DbType = "Text")] string txtFullText,
                    [Parameter(DbType = "Text")] string txtFullRTF,
                    [Parameter(DbType = "Int")] System.Nullable<int> intStartPage,
                    [Parameter(DbType = "Int")] System.Nullable<int> intEndPage) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID, vchrRefCode, vchrAuthor, vchrTitle, vchrBookTitle, vchrEditor, vchrRefType, vchrYearOfPub, vchrActualDate, intJournalID, vchrPartNo, vchrSeries, vchrPublisher, vchrPlace, vchrVolume, vchrPages, vchrTotalPages, vchrPossess, vchrSource, vchrEdition, vchrISBN, vchrISSN, txtAbstract, txtFullText, txtFullRTF, intStartPage, intEndPage);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpRefLinkDelete([Parameter(DbType = "Int")] System.Nullable<int> intRefLinkID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefLinkID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkGetRefDetail")]
        public ISingleResult<SpRefLinkGetRefDetailResult> SpRefLinkGetRefDetail([Parameter(DbType = "Int")] System.Nullable<int> intRefID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID);
            return ((ISingleResult<SpRefLinkGetRefDetailResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkInsert")]
        public ISingleResult<SpRefLinkInsertResult> SpRefLinkInsert([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(50)")] string vchrRefLink, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "Text")] string txtRefQual, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReport) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID, vchrRefLink, intRefID, vchrRefPage, txtRefQual, intOrder, bitUseInReport);
            return ((ISingleResult<SpRefLinkInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkList")]
        public ISingleResult<SpRefLinkListResult> SpRefLinkList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpRefLinkListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkTaxonList")]
        public ISingleResult<SpRefLinkTaxonListResult> SpRefLinkTaxonList([Parameter(DbType = "Int")] System.Nullable<int> intReferenceID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intReferenceID);
            return ((ISingleResult<SpRefLinkTaxonListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkTaxonUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpRefLinkTaxonUpdate([Parameter(DbType = "Int")] System.Nullable<int> intRefLinkID, [Parameter(DbType = "VarChar(50)")] string vchrRefLink, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "Text")] string txtRefQual, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReport) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefLinkID, vchrRefLink, intBiotaID, vchrRefPage, txtRefQual, bitUseInReport);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkTypeGetSet")]
        [return: Parameter(DbType = "Int")]
        public int SpRefLinkTypeGetSet([Parameter(DbType = "VarChar(255)")] string vchrRefLinkType, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] ref System.Nullable<int> intRefLinkTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefLinkType, vchrCategory, intRefLinkTypeID);
            intRefLinkTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkTypeGetSetForCatID")]
        [return: Parameter(DbType = "Int")]
        public int SpRefLinkTypeGetSetForCatID([Parameter(DbType = "VarChar(255)")] string vchrRefLinkType, [Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] ref System.Nullable<int> intRefLinkTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRefLinkType, intCategoryID, intRefLinkTypeID);
            intRefLinkTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkTypeList")]
        public ISingleResult<SpRefLinkTypeListResult> SpRefLinkTypeList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpRefLinkTypeListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkTypesForCategory")]
        public ISingleResult<SpRefLinkTypesForCategoryResult> SpRefLinkTypesForCategory([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpRefLinkTypesForCategoryResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpRefLinkUpdate([Parameter(DbType = "Int")] System.Nullable<int> intRefLinkID, [Parameter(DbType = "VarChar(50)")] string vchrRefLink, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "Text")] string txtRefQual, [Parameter(DbType = "Int")] System.Nullable<int> intOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUseInReport) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefLinkID, vchrRefLink, vchrCategory, intRefID, vchrRefPage, txtRefQual, intOrder, bitUseInReport);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRefLinkXMLExportList")]
        public ISingleResult<SpRefLinkXMLExportListResult> SpRefLinkXMLExportList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpRefLinkXMLExportListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionBuildFullName")]
        [return: Parameter(DbType = "Int")]
        public int SpRegionBuildFullName([Parameter(DbType = "Int")] System.Nullable<int> intRegionID, [Parameter(DbType = "VarChar(500)")] ref string vchrRegionFullName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID, vchrRegionFullName);
            vchrRegionFullName = ((string)(result.GetParameterValue(1)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpRegionDelete([Parameter(DbType = "Int")] System.Nullable<int> intRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionFind")]
        public ISingleResult<SpRegionFindResult> SpRegionFind([Parameter(DbType = "VarChar(255)")] string vchrRegionToFind) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRegionToFind);
            return ((ISingleResult<SpRegionFindResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionFullTree")]
        public ISingleResult<SpRegionFullTreeResult> SpRegionFullTree([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpRegionFullTreeResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionGet")]
        public ISingleResult<SpRegionGetResult> SpRegionGet([Parameter(DbType = "Int")] System.Nullable<int> intRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID);
            return ((ISingleResult<SpRegionGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionGetSiteIDList")]
        public ISingleResult<SpRegionGetSiteIDListResult> SpRegionGetSiteIDList([Parameter(DbType = "Int")] System.Nullable<int> intRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID);
            return ((ISingleResult<SpRegionGetSiteIDListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionImportGetID")]
        public ISingleResult<SpRegionImportGetIDResult> SpRegionImportGetID([Parameter(DbType = "VarChar(255)")] string vchrRegionName, [Parameter(DbType = "Int")] System.Nullable<int> intInsertUnderParent, [Parameter(DbType = "VarChar(50)")] string vchrRank) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrRegionName, intInsertUnderParent, vchrRank);
            return ((ISingleResult<SpRegionImportGetIDResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionInsert")]
        public ISingleResult<SpRegionInsertResult> SpRegionInsert([Parameter(DbType = "VarChar(50)")] string vchrName, [Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, intParentID);
            return ((ISingleResult<SpRegionInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionList")]
        public ISingleResult<SpRegionListResult> SpRegionList([Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID);
            return ((ISingleResult<SpRegionListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionListTop")]
        public ISingleResult<SpRegionListTopResult> SpRegionListTop() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpRegionListTopResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionLookup")]
        public ISingleResult<SpRegionLookupResult> SpRegionLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpRegionLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpRegionMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intNewRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldRegionID, intNewRegionID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionMove")]
        [return: Parameter(DbType = "Int")]
        public int SpRegionMove([Parameter(DbType = "Int")] System.Nullable<int> intRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionRankList")]
        public ISingleResult<SpRegionRankListResult> SpRegionRankList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpRegionRankListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionRename")]
        [return: Parameter(DbType = "Int")]
        public int SpRegionRename([Parameter(DbType = "Int")] System.Nullable<int> intRegionID, [Parameter(DbType = "VarChar(50)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRegionUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpRegionUpdate([Parameter(DbType = "Int")] System.Nullable<int> intRegionID, [Parameter(DbType = "VarChar(50)")] string vchrName, [Parameter(DbType = "VarChar(255)")] string vchrRank) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID, vchrName, vchrRank);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportChecklist")]
        [ResultType(typeof(SpReportChecklistResult))]
        public IMultipleResults SpReportChecklist([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Bit")] System.Nullable<bool> bitLevel, [Parameter(DbType = "Bit")] System.Nullable<bool> bitUserOrder, [Parameter(DbType = "Bit")] System.Nullable<bool> bitVerifiedOnly) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, bitLevel, bitUserOrder, bitVerifiedOnly);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportGetXML")]
        public ISingleResult<SpReportGetXMLResult> SpReportGetXML([Parameter(DbType = "Int")] System.Nullable<int> intReportID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intReportID);
            return ((ISingleResult<SpReportGetXMLResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMAvNameTypes")]
        public ISingleResult<SpReportMAvNameTypesResult> SpReportMAvNameTypes([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMAvNameTypesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaAssocIDList")]
        public ISingleResult<SpReportMBiotaAssocIDListResult> SpReportMBiotaAssocIDList([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMBiotaAssocIDListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaAssocRef")]
        public ISingleResult<SpReportMBiotaAssocRefResult> SpReportMBiotaAssocRef([Parameter(DbType = "Int")] System.Nullable<int> intAssocID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intAssocID);
            return ((ISingleResult<SpReportMBiotaAssocRefResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaAvNameRef")]
        [ResultType(typeof(SpReportMBiotaAvNameRefResult))]
        public IMultipleResults SpReportMBiotaAvNameRef([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaAvNames")]
        public ISingleResult<SpReportMBiotaAvNamesResult> SpReportMBiotaAvNames([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMBiotaAvNamesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaListAvChildren")]
        public ISingleResult<SpReportMBiotaListAvChildrenResult> SpReportMBiotaListAvChildren([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMBiotaListAvChildrenResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaListChildren")]
        public ISingleResult<SpReportMBiotaListChildrenResult> SpReportMBiotaListChildren([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMBiotaListChildrenResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaListChildrenAtRank")]
        public ISingleResult<SpReportMBiotaListChildrenAtRankResult> SpReportMBiotaListChildrenAtRank([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(50)")] string vchrRank) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrRank);
            return ((ISingleResult<SpReportMBiotaListChildrenAtRankResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaLitNames")]
        public ISingleResult<SpReportMBiotaLitNamesResult> SpReportMBiotaLitNames([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMBiotaLitNamesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaParentage")]
        public ISingleResult<SpReportMBiotaParentageResult> SpReportMBiotaParentage([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(20)")] string vchrFormat, [Parameter(DbType = "VarChar(10)")] string vchrElemType, [Parameter(DbType = "VarChar(50)")] string vchrSeparator) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrFormat, vchrElemType, vchrSeparator);
            return ((ISingleResult<SpReportMBiotaParentageResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaParentageMin")]
        public ISingleResult<SpReportMBiotaParentageMinResult> SpReportMBiotaParentageMin([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(50)")] string vchrSeparator) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrSeparator);
            return ((ISingleResult<SpReportMBiotaParentageMinResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMBiotaParentFromLongRank")]
        [ResultType(typeof(SpReportMBiotaParentFromLongRankResult1))]
        [ResultType(typeof(SpReportMBiotaParentFromLongRankResult2))]
        public IMultipleResults SpReportMBiotaParentFromLongRank([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(255)")] string vchrLongRank) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrLongRank);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMCitation")]
        public ISingleResult<SpReportMCitationResult> SpReportMCitation([Parameter(DbType = "Int")] System.Nullable<int> intRefLinkID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefLinkID);
            return ((ISingleResult<SpReportMCitationResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMCommonName")]
        public ISingleResult<SpReportMCommonNameResult> SpReportMCommonName([Parameter(DbType = "Int")] System.Nullable<int> intCommonNameID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCommonNameID);
            return ((ISingleResult<SpReportMCommonNameResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMCommonNameDefList")]
        public ISingleResult<SpReportMCommonNameDefListResult> SpReportMCommonNameDefList([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMCommonNameDefListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMCommonNameIDList")]
        public ISingleResult<SpReportMCommonNameIDListResult> SpReportMCommonNameIDList([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMCommonNameIDListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpReportMDelete([Parameter(DbType = "Int")] System.Nullable<int> intReportID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intReportID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMDistribution")]
        public ISingleResult<SpReportMDistributionResult> SpReportMDistribution([Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intID);
            return ((ISingleResult<SpReportMDistributionResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpReportMInsert([Parameter(Name = "Context", DbType = "VarChar(50)")] string context, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(Name = "GUID", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> gUID, [Parameter(DbType = "Text")] string txtReportXML) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), context, vchrName, gUID, txtReportXML);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMJournalGeneral")]
        public ISingleResult<SpReportMJournalGeneralResult> SpReportMJournalGeneral([Parameter(DbType = "Int")] System.Nullable<int> intJournalID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intJournalID);
            return ((ISingleResult<SpReportMJournalGeneralResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMListForUser")]
        [ResultType(typeof(SpReportMListForUserResult))]
        public IMultipleResults SpReportMListForUser([Parameter(DbType = "VarChar(50)")] string vchrUser, [Parameter(Name = "Context", DbType = "VarChar(50)")] string context) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUser, context);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterial")]
        public ISingleResult<SpReportMMaterialResult> SpReportMMaterial([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpReportMMaterialResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialAssocList")]
        public ISingleResult<SpReportMMaterialAssocListResult> SpReportMMaterialAssocList([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpReportMMaterialAssocListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialEventList")]
        public ISingleResult<SpReportMMaterialEventListResult> SpReportMMaterialEventList([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpReportMMaterialEventListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialHistoryList")]
        public ISingleResult<SpReportMMaterialHistoryListResult> SpReportMMaterialHistoryList([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpReportMMaterialHistoryListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialListForTaxon")]
        public ISingleResult<SpReportMMaterialListForTaxonResult> SpReportMMaterialListForTaxon([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpReportMMaterialListForTaxonResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialListForTrap")]
        public ISingleResult<SpReportMMaterialListForTrapResult> SpReportMMaterialListForTrap([Parameter(DbType = "Int")] System.Nullable<int> intTrapID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID);
            return ((ISingleResult<SpReportMMaterialListForTrapResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialListForVisit")]
        public ISingleResult<SpReportMMaterialListForVisitResult> SpReportMMaterialListForVisit([Parameter(DbType = "Int")] System.Nullable<int> intVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intVisitID);
            return ((ISingleResult<SpReportMMaterialListForVisitResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMaterialPartList")]
        public ISingleResult<SpReportMMaterialPartListResult> SpReportMMaterialPartList([Parameter(DbType = "Int")] System.Nullable<int> intMaterialID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMaterialID);
            return ((ISingleResult<SpReportMMaterialPartListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMMultimediaGeneral")]
        public ISingleResult<SpReportMMultimediaGeneralResult> SpReportMMultimediaGeneral([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaLinkID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaLinkID);
            return ((ISingleResult<SpReportMMultimediaGeneralResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMNote")]
        public ISingleResult<SpReportMNoteResult> SpReportMNote([Parameter(DbType = "Int")] System.Nullable<int> intID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(50)")] string vchrNoteType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intID, vchrCategory, vchrNoteType);
            return ((ISingleResult<SpReportMNoteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMRefDefault")]
        [ResultType(typeof(SpReportMRefDefaultResult))]
        public IMultipleResults SpReportMRefDefault([Parameter(DbType = "Char(1)")] string chrRefIDType, [Parameter(DbType = "VarChar(50)")] string vchrRefIDCode) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chrRefIDType, vchrRefIDCode);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMRefGeneral")]
        public ISingleResult<SpReportMRefGeneralResult> SpReportMRefGeneral([Parameter(DbType = "Int")] System.Nullable<int> intRefID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID);
            return ((ISingleResult<SpReportMRefGeneralResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMRefJournal")]
        public ISingleResult<SpReportMRefJournalResult> SpReportMRefJournal([Parameter(DbType = "Int")] System.Nullable<int> intRefID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRefID);
            return ((ISingleResult<SpReportMRefJournalResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMRefLink")]
        [return: Parameter(DbType = "Int")]
        public int SpReportMRefLink([Parameter(DbType = "Int")] System.Nullable<int> intID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(2000)")] string vchrRefLinkTypeList) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intID, vchrCategory, vchrRefLinkTypeList);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMRegion")]
        public ISingleResult<SpReportMRegionResult> SpReportMRegion([Parameter(DbType = "Int")] System.Nullable<int> intRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID);
            return ((ISingleResult<SpReportMRegionResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMRegionParentage")]
        public ISingleResult<SpReportMRegionParentageResult> SpReportMRegionParentage([Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID, [Parameter(DbType = "VarChar(20)")] string vchrFormat, [Parameter(DbType = "VarChar(20)")] string vchrRank, [Parameter(DbType = "VarChar(50)")] string vchrSeparator) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPoliticalRegionID, vchrFormat, vchrRank, vchrSeparator);
            return ((ISingleResult<SpReportMRegionParentageResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMSite")]
        public ISingleResult<SpReportMSiteResult> SpReportMSite([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpReportMSiteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMSiteListForRegion")]
        public ISingleResult<SpReportMSiteListForRegionResult> SpReportMSiteListForRegion([Parameter(DbType = "Int")] System.Nullable<int> intRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intRegionID);
            return ((ISingleResult<SpReportMSiteListForRegionResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMSparcDeduceID")]
        [ResultType(typeof(SpReportMSparcDeduceIDResult))]
        public IMultipleResults SpReportMSparcDeduceID([Parameter(DbType = "VarChar(50)")] string vchrSourceCategory, [Parameter(DbType = "VarChar(50)")] string vchrForCategory, [Parameter(DbType = "Int")] System.Nullable<int> intSourceID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrSourceCategory, vchrForCategory, intSourceID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMStorage")]
        public ISingleResult<SpReportMStorageResult> SpReportMStorage([Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intID);
            return ((ISingleResult<SpReportMStorageResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMTrait")]
        public ISingleResult<SpReportMTraitResult> SpReportMTrait([Parameter(DbType = "Int")] System.Nullable<int> intID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(50)")] string vchrTraitType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intID, vchrCategory, vchrTraitType);
            return ((ISingleResult<SpReportMTraitResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMTrap")]
        public ISingleResult<SpReportMTrapResult> SpReportMTrap([Parameter(DbType = "Int")] System.Nullable<int> intTrapID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID);
            return ((ISingleResult<SpReportMTrapResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMTrapListForSite")]
        public ISingleResult<SpReportMTrapListForSiteResult> SpReportMTrapListForSite([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpReportMTrapListForSiteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMTrapListForVisit")]
        public ISingleResult<SpReportMTrapListForVisitResult> SpReportMTrapListForVisit([Parameter(DbType = "Int")] System.Nullable<int> intVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intVisitID);
            return ((ISingleResult<SpReportMTrapListForVisitResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpReportMUpdate([Parameter(DbType = "Int")] System.Nullable<int> intReportID, [Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "Text")] string txtReportXML) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intReportID, vchrName, txtReportXML);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMVisit")]
        public ISingleResult<SpReportMVisitResult> SpReportMVisit([Parameter(DbType = "Int")] System.Nullable<int> intVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intVisitID);
            return ((ISingleResult<SpReportMVisitResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportMVisitListForSite")]
        public ISingleResult<SpReportMVisitListForSiteResult> SpReportMVisitListForSite([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpReportMVisitListForSiteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportSitesForTaxa")]
        [ResultType(typeof(SpReportSitesForTaxaResult))]
        public IMultipleResults SpReportSitesForTaxa([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(20)")] string vchrSiteRegionType, [Parameter(DbType = "Int")] System.Nullable<int> intSiteRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrSiteRegionType, intSiteRegionID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportTaxaForDistRegion")]
        public ISingleResult<SpReportTaxaForDistRegionResult> SpReportTaxaForDistRegion([Parameter(DbType = "Int")] System.Nullable<int> intDistributionRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intDistributionRegionID, intBiotaID);
            return ((ISingleResult<SpReportTaxaForDistRegionResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spReportTaxaForLocation")]
        public ISingleResult<SpReportTaxaForLocationResult> SpReportTaxaForLocation([Parameter(DbType = "Int")] System.Nullable<int> intBiotaStorageID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaStorageID, intBiotaID);
            return ((ISingleResult<SpReportTaxaForLocationResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spRptMorphCellList")]
        public ISingleResult<SpRptMorphCellListResult> SpRptMorphCellList([Parameter(Name = "ViewID", DbType = "Int")] System.Nullable<int> viewID, [Parameter(Name = "EntityID", DbType = "Int")] System.Nullable<int> entityID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), viewID, entityID);
            return ((ISingleResult<SpRptMorphCellListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANGet")]
        public ISingleResult<SpSANGetResult> SpSANGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpSANGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANInsertUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpSANInsertUpdate([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intRefID, [Parameter(DbType = "VarChar(50)")] string vchrRefPage, [Parameter(DbType = "VarChar(255)")] string vchrAvailableNameStatus, [Parameter(DbType = "Text")] string txtRefQual, [Parameter(DbType = "VarChar(50)")] string vchrPrimaryType, [Parameter(DbType = "VarChar(50)")] string vchrSecondaryType, [Parameter(DbType = "Bit")] System.Nullable<bool> bitPrimaryTypeProbable, [Parameter(DbType = "Bit")] System.Nullable<bool> bitSecondaryTypeProbable) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, intRefID, vchrRefPage, vchrAvailableNameStatus, txtRefQual, vchrPrimaryType, vchrSecondaryType, bitPrimaryTypeProbable, bitSecondaryTypeProbable);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANTypeDataDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpSANTypeDataDelete([Parameter(DbType = "Int")] System.Nullable<int> intSANTypeDataID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSANTypeDataID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANTypeDataGet")]
        public ISingleResult<SpSANTypeDataGetResult> SpSANTypeDataGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpSANTypeDataGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANTypeDataInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpSANTypeDataInsert([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "VarChar(50)")] string vchrMuseum, [Parameter(DbType = "VarChar(50)")] string vchrAccessionNum, [Parameter(DbType = "VarChar(255)")] string vchrMaterial, [Parameter(DbType = "VarChar(100)")] string vchrLocality, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "Bit")] System.Nullable<bool> bitIDConfirmed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID, vchrType, vchrMuseum, vchrAccessionNum, vchrMaterial, vchrLocality, intMaterialID, bitIDConfirmed);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANTypeDataTypesGet")]
        public ISingleResult<SpSANTypeDataTypesGetResult> SpSANTypeDataTypesGet([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpSANTypeDataTypesGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSANTypeDataUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpSANTypeDataUpdate([Parameter(DbType = "Int")] System.Nullable<int> intSANTypeDataID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "VarChar(50)")] string vchrMuseum, [Parameter(DbType = "VarChar(50)")] string vchrAccessionNum, [Parameter(DbType = "VarChar(255)")] string vchrMaterial, [Parameter(DbType = "VarChar(100)")] string vchrLocality, [Parameter(DbType = "Int")] System.Nullable<int> intMaterialID, [Parameter(DbType = "Bit")] System.Nullable<bool> bitIDConfirmed) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSANTypeDataID, intBiotaID, vchrType, vchrMuseum, vchrAccessionNum, vchrMaterial, vchrLocality, intMaterialID, bitIDConfirmed);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSettingGet")]
        public ISingleResult<SpSettingGetResult> SpSettingGet([Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName);
            return ((ISingleResult<SpSettingGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSettingSet")]
        [return: Parameter(DbType = "Int")]
        public int SpSettingSet([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "VarChar(255)")] string vchrValue, [Parameter(DbType = "VarChar(255)")] string vchrDescription) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, vchrValue, vchrDescription);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteDelete([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteExplorerList")]
        [ResultType(typeof(SpSiteExplorerListResult1))]
        [ResultType(typeof(SpSiteExplorerListResult2))]
        public IMultipleResults SpSiteExplorerList([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(50)")] string vchrParentType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrParentType);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteFindTemplates")]
        public ISingleResult<SpSiteFindTemplatesResult> SpSiteFindTemplates([Parameter(DbType = "VarChar(255)")] string vchrTemplate) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTemplate);
            return ((ISingleResult<SpSiteFindTemplatesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGet")]
        public ISingleResult<SpSiteGetResult> SpSiteGet([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpSiteGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGetRDEFromIDList")]
        public ISingleResult<SpSiteGetRDEFromIDListResult> SpSiteGetRDEFromIDList([Parameter(DbType = "VarChar(8000)")] string vchrSiteIDList) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrSiteIDList);
            return ((ISingleResult<SpSiteGetRDEFromIDListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGetRDESiteID")]
        [ResultType(typeof(SpSiteGetRDESiteIDResult))]
        public IMultipleResults SpSiteGetRDESiteID([Parameter(DbType = "VarChar(10)")] string vchrElemType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrElemType, intID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGroupDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteGroupDelete([Parameter(DbType = "Int")] System.Nullable<int> intSiteGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGroupGetSiteIDList")]
        public ISingleResult<SpSiteGroupGetSiteIDListResult> SpSiteGroupGetSiteIDList([Parameter(DbType = "Int")] System.Nullable<int> intSiteGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteGroupID);
            return ((ISingleResult<SpSiteGroupGetSiteIDListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGroupInsert")]
        public ISingleResult<SpSiteGroupInsertResult> SpSiteGroupInsert([Parameter(DbType = "VarChar(255)")] string vchrName, [Parameter(DbType = "SmallInt")] System.Nullable<short> sintParentType, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrName, sintParentType, intParentID, intPoliticalRegionID);
            return ((ISingleResult<SpSiteGroupInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGroupMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteGroupMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldSiteGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intNewSiteGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldSiteGroupID, intNewSiteGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGroupMove")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteGroupMove([Parameter(DbType = "Int")] System.Nullable<int> intSiteGroupID, [Parameter(DbType = "SmallInt")] System.Nullable<short> sintParentType, [Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteGroupID, sintParentType, intParentID, intPoliticalRegionID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteGroupRename")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteGroupRename([Parameter(DbType = "Int")] System.Nullable<int> intSiteGroupID, [Parameter(DbType = "VarChar(255)")] string vchrSiteGroupName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteGroupID, vchrSiteGroupName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteImportGetID")]
        public ISingleResult<SpSiteImportGetIDResult> SpSiteImportGetID(
                    [Parameter(DbType = "VarChar(100)")] string vchrSiteName,
                    [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintLocalType,
                    [Parameter(DbType = "VarChar(255)")] string vchrLocal,
                    [Parameter(DbType = "VarChar(50)")] string vchrDistanceFromPlace,
                    [Parameter(DbType = "VarChar(10)")] string vchrDirFromPlace,
                    [Parameter(DbType = "VarChar(255)")] string vchrInformalLocal,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosCoordinates,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosAreaType,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosX1,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosY1,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosX2,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosY2,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosXYDisplayFormat,
                    [Parameter(DbType = "VarChar(50)")] string vchrPosSource,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosError,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosWho,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosDate,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosOriginal,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMSource,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMMapProj,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMMapName,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMMapVer,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintElevType,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevUpper,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevLower,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevDepth,
                    [Parameter(DbType = "VarChar(20)")] string vchrElevUnits,
                    [Parameter(DbType = "VarChar(50)")] string vchrElevSource,
                    [Parameter(DbType = "VarChar(20)")] string vchrElevError,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoEra,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoState,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoPlate,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoFormation,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoMember,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoBed,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoName,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoAgeBottom,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoAgeTop,
                    [Parameter(DbType = "VarChar(255)")] string vchrGeoNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrSiteName, intPoliticalRegionID, tintLocalType, vchrLocal, vchrDistanceFromPlace, vchrDirFromPlace, vchrInformalLocal, tintPosCoordinates, tintPosAreaType, fltPosX1, fltPosY1, fltPosX2, fltPosY2, tintPosXYDisplayFormat, vchrPosSource, vchrPosError, vchrPosWho, vchrPosDate, vchrPosOriginal, vchrPosUTMSource, vchrPosUTMMapProj, vchrPosUTMMapName, vchrPosUTMMapVer, tintElevType, fltElevUpper, fltElevLower, fltElevDepth, vchrElevUnits, vchrElevSource, vchrElevError, vchrGeoEra, vchrGeoState, vchrGeoPlate, vchrGeoFormation, vchrGeoMember, vchrGeoBed, vchrGeoName, vchrGeoAgeBottom, vchrGeoAgeTop, vchrGeoNotes);
            return ((ISingleResult<SpSiteImportGetIDResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteInsert")]
        public ISingleResult<SpSiteInsertResult> SpSiteInsert([Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intSiteGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intBasedOnSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intPoliticalRegionID, intSiteGroupID, intBasedOnSiteID);
            return ((ISingleResult<SpSiteInsertResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteInsertTemplate")]
        public ISingleResult<SpSiteInsertTemplateResult> SpSiteInsertTemplate([Parameter(DbType = "VarChar(50)")] string vchrDummy) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrDummy);
            return ((ISingleResult<SpSiteInsertTemplateResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteListTemplates")]
        public ISingleResult<SpSiteListTemplatesResult> SpSiteListTemplates() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpSiteListTemplatesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteLookup")]
        public ISingleResult<SpSiteLookupResult> SpSiteLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpSiteLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldSiteID, [Parameter(DbType = "Int")] System.Nullable<int> intNewSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldSiteID, intNewSiteID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteMove")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteMove([Parameter(DbType = "Int")] System.Nullable<int> intSiteID, [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID, [Parameter(DbType = "Int")] System.Nullable<int> intSiteGroupID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID, intPoliticalRegionID, intSiteGroupID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteOKToDelete")]
        public ISingleResult<SpSiteOKToDeleteResult> SpSiteOKToDelete([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpSiteOKToDeleteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteUpdate(
                    [Parameter(DbType = "Int")] System.Nullable<int> intSiteID,
                    [Parameter(DbType = "VarChar(100)")] string vchrSiteName,
                    [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintLocalType,
                    [Parameter(DbType = "VarChar(255)")] string vchrLocal,
                    [Parameter(DbType = "VarChar(50)")] string vchrDistanceFromPlace,
                    [Parameter(DbType = "VarChar(10)")] string vchrDirFromPlace,
                    [Parameter(DbType = "VarChar(255)")] string vchrInformalLocal,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosCoordinates,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosAreaType,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosX1,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosY1,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosX2,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosY2,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosXYDisplayFormat,
                    [Parameter(DbType = "VarChar(50)")] string vchrPosSource,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosError,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosWho,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosDate,
                    [Parameter(DbType = "VarChar(20)")] string vchrPosOriginal,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMSource,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMMapProj,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMMapName,
                    [Parameter(DbType = "VarChar(255)")] string vchrPosUTMMapVer,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintElevType,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevUpper,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevLower,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevDepth,
                    [Parameter(DbType = "VarChar(20)")] string vchrElevUnits,
                    [Parameter(DbType = "VarChar(50)")] string vchrElevSource,
                    [Parameter(DbType = "VarChar(20)")] string vchrElevError,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoEra,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoState,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoPlate,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoFormation,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoMember,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoBed,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoName,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoAgeBottom,
                    [Parameter(DbType = "VarChar(50)")] string vchrGeoAgeTop,
                    [Parameter(DbType = "VarChar(255)")] string vchrGeoNotes) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID, vchrSiteName, intPoliticalRegionID, tintLocalType, vchrLocal, vchrDistanceFromPlace, vchrDirFromPlace, vchrInformalLocal, tintPosCoordinates, tintPosAreaType, fltPosX1, fltPosY1, fltPosX2, fltPosY2, tintPosXYDisplayFormat, vchrPosSource, vchrPosError, vchrPosWho, vchrPosDate, vchrPosOriginal, vchrPosUTMSource, vchrPosUTMMapProj, vchrPosUTMMapName, vchrPosUTMMapVer, tintElevType, fltElevUpper, fltElevLower, fltElevDepth, vchrElevUnits, vchrElevSource, vchrElevError, vchrGeoEra, vchrGeoState, vchrGeoPlate, vchrGeoFormation, vchrGeoMember, vchrGeoBed, vchrGeoName, vchrGeoAgeBottom, vchrGeoAgeTop, vchrGeoNotes);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteUpdateName")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteUpdateName([Parameter(DbType = "Int")] System.Nullable<int> intSiteID, [Parameter(DbType = "VarChar(100)")] string vchrSiteName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID, vchrSiteName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteUpdateRDE")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteUpdateRDE(
                    [Parameter(DbType = "Int")] System.Nullable<int> intSiteID,
                    [Parameter(DbType = "VarChar(100)")] string vchrSiteName,
                    [Parameter(DbType = "Int")] System.Nullable<int> intPoliticalRegionID,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintLocalType,
                    [Parameter(DbType = "VarChar(255)")] string vchrLocal,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosCoordinates,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosAreaType,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosX1,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltPosY1,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintPosXYDisplayFormat,
                    [Parameter(DbType = "VarChar(50)")] string vchrPosSource,
                    [Parameter(DbType = "VarChar(50)")] string vchrPosError,
                    [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintElevType,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevUpper,
                    [Parameter(DbType = "Float")] System.Nullable<double> fltElevLower,
                    [Parameter(DbType = "VarChar(50)")] string vchrElevUnits,
                    [Parameter(DbType = "VarChar(50)")] string vchrElevSource,
                    [Parameter(DbType = "VarChar(50)")] string vchrElevError) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID, vchrSiteName, intPoliticalRegionID, tintLocalType, vchrLocal, tintPosCoordinates, tintPosAreaType, fltPosX1, fltPosY1, tintPosXYDisplayFormat, vchrPosSource, vchrPosError, tintElevType, fltElevUpper, fltElevLower, vchrElevUnits, vchrElevSource, vchrElevError);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteVisitDelete([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitFindTemplates")]
        public ISingleResult<SpSiteVisitFindTemplatesResult> SpSiteVisitFindTemplates([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpSiteVisitFindTemplatesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitGet")]
        public ISingleResult<SpSiteVisitGetResult> SpSiteVisitGet([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID);
            return ((ISingleResult<SpSiteVisitGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitGetRDE")]
        public ISingleResult<SpSiteVisitGetRDEResult> SpSiteVisitGetRDE([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpSiteVisitGetRDEResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitGetSiteID")]
        public ISingleResult<SpSiteVisitGetSiteIDResult> SpSiteVisitGetSiteID([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID);
            return ((ISingleResult<SpSiteVisitGetSiteIDResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitImportGetID")]
        [ResultType(typeof(SpSiteVisitImportGetIDResult))]
        public IMultipleResults SpSiteVisitImportGetID([Parameter(DbType = "VarChar(255)")] string vchrSiteVisitName, [Parameter(DbType = "Int")] System.Nullable<int> intSiteID, [Parameter(DbType = "VarChar(50)")] string vchrFieldNumber, [Parameter(DbType = "VarChar(255)")] string vchrCollector, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintDateType, [Parameter(DbType = "Int")] System.Nullable<int> intDateStart, [Parameter(DbType = "Int")] System.Nullable<int> intDateEnd, [Parameter(DbType = "Int")] System.Nullable<int> intTimeStart, [Parameter(DbType = "Int")] System.Nullable<int> intTimeEnd, [Parameter(DbType = "VarChar(255)")] string vchrCasualTime) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrSiteVisitName, intSiteID, vchrFieldNumber, vchrCollector, tintDateType, intDateStart, intDateEnd, intTimeStart, intTimeEnd, vchrCasualTime);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitInsert")]
        [ResultType(typeof(SpSiteVisitInsertResult))]
        public IMultipleResults SpSiteVisitInsert([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "Int")] System.Nullable<int> intBasedOnSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, intBasedOnSiteVisitID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitInsertTemplate")]
        public ISingleResult<SpSiteVisitInsertTemplateResult> SpSiteVisitInsertTemplate([Parameter(DbType = "VarChar(50)")] string vchrDummy) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrDummy);
            return ((ISingleResult<SpSiteVisitInsertTemplateResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitList")]
        public ISingleResult<SpSiteVisitListResult> SpSiteVisitList([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpSiteVisitListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitListTemplates")]
        public ISingleResult<SpSiteVisitListTemplatesResult> SpSiteVisitListTemplates() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpSiteVisitListTemplatesResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitLookup")]
        public ISingleResult<SpSiteVisitLookupResult> SpSiteVisitLookup([Parameter(DbType = "VarChar(255)")] string vchrFilter) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFilter);
            return ((ISingleResult<SpSiteVisitLookupResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteVisitMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldSiteVisitID, [Parameter(DbType = "Int")] System.Nullable<int> intNewSiteVisitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldSiteVisitID, intNewSiteVisitID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitMove")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteVisitMove([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID, [Parameter(DbType = "Int")] System.Nullable<int> intNewParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID, intNewParentID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteVisitUpdate([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID, [Parameter(DbType = "VarChar(255)")] string vchrSiteVisitName, [Parameter(DbType = "VarChar(50)")] string vchrFieldNumber, [Parameter(DbType = "VarChar(255)")] string vchrCollector, [Parameter(DbType = "TinyInt")] System.Nullable<byte> tintDateType, [Parameter(DbType = "Int")] System.Nullable<int> intDateStart, [Parameter(DbType = "Int")] System.Nullable<int> intDateEnd, [Parameter(DbType = "Int")] System.Nullable<int> intTimeStart, [Parameter(DbType = "Int")] System.Nullable<int> intTimeEnd, [Parameter(DbType = "VarChar(255)")] string vchrCasualTime) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID, vchrSiteVisitName, vchrFieldNumber, vchrCollector, tintDateType, intDateStart, intDateEnd, intTimeStart, intTimeEnd, vchrCasualTime);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitUpdateName")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteVisitUpdateName([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID, [Parameter(DbType = "VarChar(255)")] string vchrName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID, vchrName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spSiteVisitUpdateRDE")]
        [return: Parameter(DbType = "Int")]
        public int SpSiteVisitUpdateRDE([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID, [Parameter(DbType = "VarChar(255)")] string vchrSiteVisitName, [Parameter(DbType = "VarChar(255)")] string vchrCollector, [Parameter(DbType = "Int")] System.Nullable<int> intStartDate, [Parameter(DbType = "Int")] System.Nullable<int> intEndDate) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID, vchrSiteVisitName, vchrCollector, intStartDate, intEndDate);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitAppliesGet")]
        public ISingleResult<SpTraitAppliesGetResult> SpTraitAppliesGet([Parameter(DbType = "Int")] System.Nullable<int> intTraitTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTraitTypeID);
            return ((ISingleResult<SpTraitAppliesGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitCategoryGetSet")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitCategoryGetSet([Parameter(DbType = "VarChar(50)")] string vchrTraitCategory, [Parameter(DbType = "Int")] ref System.Nullable<int> intTraitCategoryID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTraitCategory, intTraitCategoryID);
            intTraitCategoryID = ((System.Nullable<int>)(result.GetParameterValue(1)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitDefaultDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitDefaultDelete([Parameter(DbType = "Int")] System.Nullable<int> intTraitDefaultID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTraitDefaultID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitDefaultInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitDefaultInsert([Parameter(Name = "TraitTypeID", DbType = "Int")] System.Nullable<int> traitTypeID, [Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID, [Parameter(Name = "ViewID", DbType = "Int")] System.Nullable<int> viewID, [Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID, [Parameter(Name = "StateID", DbType = "Int")] System.Nullable<int> stateID, [Parameter(Name = "BiotaID", DbType = "Int")] System.Nullable<int> biotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), traitTypeID, projectID, viewID, characterID, stateID, biotaID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitDefaultList")]
        public ISingleResult<SpTraitDefaultListResult> SpTraitDefaultList([Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID, [Parameter(Name = "ViewID", DbType = "Int")] System.Nullable<int> viewID, [Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID, [Parameter(Name = "EntityID", DbType = "Int")] System.Nullable<int> entityID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectID, viewID, characterID, entityID);
            return ((ISingleResult<SpTraitDefaultListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitDefaultUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitDefaultUpdate([Parameter(Name = "TraitDefaultID", DbType = "Int")] System.Nullable<int> traitDefaultID, [Parameter(Name = "ProjectID", DbType = "Int")] System.Nullable<int> projectID, [Parameter(Name = "ViewID", DbType = "Int")] System.Nullable<int> viewID, [Parameter(Name = "CharacterID", DbType = "Int")] System.Nullable<int> characterID, [Parameter(Name = "StateID", DbType = "Int")] System.Nullable<int> stateID, [Parameter(Name = "BiotaID", DbType = "Int")] System.Nullable<int> biotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), traitDefaultID, projectID, viewID, characterID, stateID, biotaID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitDelete([Parameter(DbType = "Int")] System.Nullable<int> intTraitID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTraitID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitImport")]
        public ISingleResult<SpTraitImportResult> SpTraitImport([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(255)")] string vchrTrait, [Parameter(DbType = "VarChar(255)")] string vchrValue, [Parameter(DbType = "VarChar(2000)")] string vchrComment) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID, vchrTrait, vchrValue, vchrComment);
            return ((ISingleResult<SpTraitImportResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitImportLite")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitImportLite([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "Int")] System.Nullable<int> intTraitTypeID, [Parameter(DbType = "VarChar(255)")] string vchrValue) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, intIntraCatID, intTraitTypeID, vchrValue);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitInsert")]
        [ResultType(typeof(SpTraitInsertResult1))]
        [ResultType(typeof(SpTraitInsertResult2))]
        public IMultipleResults SpTraitInsert([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(255)")] string vchrTrait, [Parameter(DbType = "VarChar(255)")] string vchrValue, [Parameter(DbType = "VarChar(2000)")] string vchrComment) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID, vchrTrait, vchrValue, vchrComment);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitList")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(8000)")] string vchrIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, vchrIntraCatID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitTypeGet")]
        public ISingleResult<SpTraitTypeGetResult> SpTraitTypeGet([Parameter(DbType = "Int")] System.Nullable<int> intTraitTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTraitTypeID);
            return ((ISingleResult<SpTraitTypeGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitTypeGetSet")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitTypeGetSet([Parameter(DbType = "VarChar(255)")] string vchrTraitType, [Parameter(DbType = "VarChar(255)")] string vchrCategoryType, [Parameter(DbType = "Int")] ref System.Nullable<int> intTraitTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTraitType, vchrCategoryType, intTraitTypeID);
            intTraitTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitTypeGetSetForCatID")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitTypeGetSetForCatID([Parameter(DbType = "VarChar(255)")] string vchrTraitType, [Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] ref System.Nullable<int> intTraitTypeID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrTraitType, intCategoryID, intTraitTypeID);
            intTraitTypeID = ((System.Nullable<int>)(result.GetParameterValue(2)));
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitTypeList")]
        public ISingleResult<SpTraitTypeListResult> SpTraitTypeList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpTraitTypeListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitTypeListForCategory")]
        public ISingleResult<SpTraitTypeListForCategoryResult> SpTraitTypeListForCategory([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpTraitTypeListForCategoryResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitTypeUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitTypeUpdate([Parameter(Name = "TraitTypeID", DbType = "Int")] System.Nullable<int> traitTypeID, [Parameter(Name = "TraitType", DbType = "VarChar(255)")] string traitType, [Parameter(Name = "DataType", DbType = "VarChar(20)")] string dataType, [Parameter(Name = "Validation", DbType = "VarChar(255)")] string validation) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), traitTypeID, traitType, dataType, validation);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTraitUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpTraitUpdate([Parameter(DbType = "Int")] System.Nullable<int> intTraitID, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(255)")] string vchrTrait, [Parameter(DbType = "VarChar(255)")] string vchrValue, [Parameter(DbType = "VarChar(2000)")] string vchrComment) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTraitID, vchrCategory, vchrTrait, vchrValue, vchrComment);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapDelete([Parameter(DbType = "Int")] System.Nullable<int> intTrapID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapGet")]
        public ISingleResult<SpTrapGetResult> SpTrapGet([Parameter(DbType = "Int")] System.Nullable<int> intTrapID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID);
            return ((ISingleResult<SpTrapGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapInsert([Parameter(DbType = "Int")] System.Nullable<int> intSiteID, [Parameter(DbType = "VarChar(100)")] string vchrTrapName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID, vchrTrapName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapInsertForSiteVisitID")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapInsertForSiteVisitID([Parameter(DbType = "Int")] System.Nullable<int> intSiteVisitID, [Parameter(DbType = "VarChar(100)")] string vchrTrapName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteVisitID, vchrTrapName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapList")]
        public ISingleResult<SpTrapListResult> SpTrapList([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpTrapListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapListForSite")]
        public ISingleResult<SpTrapListForSiteResult> SpTrapListForSite([Parameter(DbType = "Int")] System.Nullable<int> intSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intSiteID);
            return ((ISingleResult<SpTrapListForSiteResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapMerge")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapMerge([Parameter(DbType = "Int")] System.Nullable<int> intOldTrapID, [Parameter(DbType = "Int")] System.Nullable<int> intNewTrapID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intOldTrapID, intNewTrapID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapMove")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapMove([Parameter(DbType = "Int")] System.Nullable<int> intTrapID, [Parameter(DbType = "Int")] System.Nullable<int> intNewSiteID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID, intNewSiteID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapUpdate([Parameter(DbType = "Int")] System.Nullable<int> intTrapID, [Parameter(DbType = "VarChar(100)")] string vchrTrapName, [Parameter(DbType = "VarChar(50)")] string vchrTrapType, [Parameter(DbType = "VarChar(255)")] string vchrDescription) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID, vchrTrapName, vchrTrapType, vchrDescription);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTrapUpdateName")]
        [return: Parameter(DbType = "Int")]
        public int SpTrapUpdateName([Parameter(DbType = "Int")] System.Nullable<int> intTrapID, [Parameter(DbType = "VarChar(100)")] string vchrTrapName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intTrapID, vchrTrapName);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTypeDataDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpTypeDataDelete([Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "Int")] System.Nullable<int> intID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrType, intID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTypeDataInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpTypeDataInsert([Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "VarChar(255)")] string vchrDesc) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrType, vchrCategory, vchrDesc);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTypeDataList")]
        [ResultType(typeof(SpTypeDataListResult))]
        public IMultipleResults SpTypeDataList([Parameter(DbType = "VarChar(50)")] string vchrType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrType);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spTypeDataUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpTypeDataUpdate([Parameter(DbType = "VarChar(50)")] string vchrType, [Parameter(DbType = "Int")] System.Nullable<int> intID, [Parameter(DbType = "VarChar(255)")] string vchrDesc) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrType, intID, vchrDesc);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserAdminCreate")]
        [return: Parameter(DbType = "Int")]
        public int SpUserAdminCreate([Parameter(DbType = "VarChar(10)")] string vchrUsername) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserAdminDrop")]
        [return: Parameter(DbType = "Int")]
        public int SpUserAdminDrop([Parameter(DbType = "VarChar(10)")] string vchrUsername) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserDelete")]
        [return: Parameter(DbType = "Int")]
        public int SpUserDelete([Parameter(DbType = "VarChar(128)")] string vchrUsername) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserGet")]
        public ISingleResult<SpUserGetResult> SpUserGet([Parameter(DbType = "VarChar(20)")] string vchrUserName) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUserName);
            return ((ISingleResult<SpUserGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserHasBiotaPermission")]
        [return: Parameter(DbType = "Int")]
        public int SpUserHasBiotaPermission([Parameter(DbType = "VarChar(128)")] string vchrUsername, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intRequiredPermissionMask) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername, intBiotaID, intRequiredPermissionMask);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserInsert")]
        [return: Parameter(DbType = "Int")]
        public int SpUserInsert([Parameter(DbType = "VarChar(128)")] string vchrUsername, [Parameter(DbType = "VarChar(128)")] string vchrPassword, [Parameter(DbType = "VarChar(100)")] string vchrFullname, [Parameter(DbType = "VarChar(200)")] string vchrDescription, [Parameter(DbType = "VarChar(500)")] string vchrNotes, [Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "Int")] System.Nullable<int> bitCanCreateUsers) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername, vchrPassword, vchrFullname, vchrDescription, vchrNotes, intGroupID, bitCanCreateUsers);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserList")]
        public ISingleResult<SpUserListResult> SpUserList() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpUserListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserListWithIDs")]
        public ISingleResult<SpUserListWithIDsResult> SpUserListWithIDs() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpUserListWithIDsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserPasswordUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpUserPasswordUpdate([Parameter(DbType = "VarChar(128)")] string vchrUsername, [Parameter(DbType = "VarChar(128)")] string vchrPassword) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername, vchrPassword);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserPermissionsForBiota")]
        public ISingleResult<SpUserPermissionsForBiotaResult> SpUserPermissionsForBiota([Parameter(DbType = "VarChar(128)")] string vchrUsername, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername, intBiotaID);
            return ((ISingleResult<SpUserPermissionsForBiotaResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserPermissionsForBiotaUsingIDs")]
        public ISingleResult<SpUserPermissionsForBiotaUsingIDsResult> SpUserPermissionsForBiotaUsingIDs([Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intUserID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID, intUserID, intBiotaID);
            return ((ISingleResult<SpUserPermissionsForBiotaUsingIDsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserPermissionsInsertUpdate")]
        public ISingleResult<SpUserPermissionsInsertUpdateResult> SpUserPermissionsInsertUpdate([Parameter(DbType = "VarChar(128)")] string vchrUsername, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intPermMask1, [Parameter(DbType = "Int")] System.Nullable<int> intPermMask2) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername, intBiotaID, intPermMask1, intPermMask2);
            return ((ISingleResult<SpUserPermissionsInsertUpdateResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserPermissionsInsertUpdateUsingIDs")]
        public ISingleResult<SpUserPermissionsInsertUpdateUsingIDsResult> SpUserPermissionsInsertUpdateUsingIDs([Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "Int")] System.Nullable<int> intUserID, [Parameter(DbType = "Int")] System.Nullable<int> intBiotaID, [Parameter(DbType = "Int")] System.Nullable<int> intPermMask1, [Parameter(DbType = "Int")] System.Nullable<int> intPermMask2) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intGroupID, intUserID, intBiotaID, intPermMask1, intPermMask2);
            return ((ISingleResult<SpUserPermissionsInsertUpdateUsingIDsResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserPermissionsOwnersForBiota")]
        public ISingleResult<SpUserPermissionsOwnersForBiotaResult> SpUserPermissionsOwnersForBiota([Parameter(DbType = "Int")] System.Nullable<int> intBiotaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intBiotaID);
            return ((ISingleResult<SpUserPermissionsOwnersForBiotaResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spUserUpdate")]
        [return: Parameter(DbType = "Int")]
        public int SpUserUpdate([Parameter(DbType = "VarChar(128)")] string vchrUsername, [Parameter(DbType = "VarChar(100)")] string vchrFullname, [Parameter(DbType = "VarChar(200)")] string vchrDescription, [Parameter(DbType = "VarChar(500)")] string vchrNotes, [Parameter(DbType = "Int")] System.Nullable<int> intGroupID, [Parameter(DbType = "Bit")] System.Nullable<bool> bitCanCreateUsers) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrUsername, vchrFullname, vchrDescription, vchrNotes, intGroupID, bitCanCreateUsers);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.spVersion")]
        public ISingleResult<SpVersionResult> SpVersion() {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<SpVersionResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLExportMultimediaGet")]
        public ISingleResult<SpXMLExportMultimediaGetResult> SpXMLExportMultimediaGet([Parameter(DbType = "Int")] System.Nullable<int> intMultimediaID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intMultimediaID);
            return ((ISingleResult<SpXMLExportMultimediaGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLExportMultimediaList")]
        public ISingleResult<SpXMLExportMultimediaListResult> SpXMLExportMultimediaList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpXMLExportMultimediaListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLExportNoteList")]
        public ISingleResult<SpXMLExportNoteListResult> SpXMLExportNoteList([Parameter(DbType = "VarChar(50)")] string vchrCategory, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory, intIntraCatID);
            return ((ISingleResult<SpXMLExportNoteListResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportBiotaDefKingdomResolve")]
        public ISingleResult<SpXMLImportBiotaDefKingdomResolveResult> SpXMLImportBiotaDefKingdomResolve([Parameter(DbType = "VarChar(255)")] string vchrFullKingdom) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFullKingdom);
            return ((ISingleResult<SpXMLImportBiotaDefKingdomResolveResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportBiotaDefRankResolve")]
        public ISingleResult<SpXMLImportBiotaDefRankResolveResult> SpXMLImportBiotaDefRankResolve([Parameter(DbType = "VarChar(255)")] string vchrFullRank) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrFullRank);
            return ((ISingleResult<SpXMLImportBiotaDefRankResolveResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportBiotaFind")]
        [ResultType(typeof(SpXMLImportBiotaFindResult1))]
        [ResultType(typeof(SpXMLImportBiotaFindResult2))]
        public IMultipleResults SpXMLImportBiotaFind([Parameter(Name = "GUID", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> gUID, [Parameter(DbType = "VarChar(255)")] string vchrFullName, [Parameter(DbType = "VarChar(255)")] string vchrEpithet, [Parameter(DbType = "Int")] System.Nullable<int> intParentID) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID, vchrFullName, vchrEpithet, intParentID);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportCategoryGet")]
        public ISingleResult<SpXMLImportCategoryGetResult> SpXMLImportCategoryGet([Parameter(DbType = "VarChar(50)")] string vchrCategory) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchrCategory);
            return ((ISingleResult<SpXMLImportCategoryGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportDistributionRegion")]
        [ResultType(typeof(SpXMLImportDistributionRegionResult1))]
        [ResultType(typeof(SpXMLImportDistributionRegionResult2))]
        public IMultipleResults SpXMLImportDistributionRegion([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(255)")] string vchrRegion) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrRegion);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportKeywordTypeGet")]
        public ISingleResult<SpXMLImportKeywordTypeGetResult> SpXMLImportKeywordTypeGet([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "VarChar(255)")] string vchrKeywordType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, vchrKeywordType);
            return ((ISingleResult<SpXMLImportKeywordTypeGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportMultimediaTypeGet")]
        public ISingleResult<SpXMLImportMultimediaTypeGetResult> SpXMLImportMultimediaTypeGet([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "VarChar(255)")] string vchrMultimediaType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, vchrMultimediaType);
            return ((ISingleResult<SpXMLImportMultimediaTypeGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportNoteTypeGet")]
        public ISingleResult<SpXMLImportNoteTypeGetResult> SpXMLImportNoteTypeGet([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "VarChar(255)")] string vchrNoteType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, vchrNoteType);
            return ((ISingleResult<SpXMLImportNoteTypeGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportRefLinkTypeGet")]
        public ISingleResult<SpXMLImportRefLinkTypeGetResult> SpXMLImportRefLinkTypeGet([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "VarChar(255)")] string vchrRefLinkType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, vchrRefLinkType);
            return ((ISingleResult<SpXMLImportRefLinkTypeGetResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportStorageLocation")]
        [ResultType(typeof(SpXMLImportStorageLocationResult1))]
        [ResultType(typeof(SpXMLImportStorageLocationResult2))]
        public IMultipleResults SpXMLImportStorageLocation([Parameter(DbType = "Int")] System.Nullable<int> intParentID, [Parameter(DbType = "VarChar(255)")] string vchrLocation) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intParentID, vchrLocation);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportTrait")]
        public ISingleResult<SpXMLImportTraitResult> SpXMLImportTrait([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "Int")] System.Nullable<int> intTraitTypeID, [Parameter(DbType = "Int")] System.Nullable<int> intIntraCatID, [Parameter(DbType = "VarChar(255)")] string vchrValue) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, intTraitTypeID, intIntraCatID, vchrValue);
            return ((ISingleResult<SpXMLImportTraitResult>)(result.ReturnValue));
        }

        [Function(Name = "dbo.spXMLImportTraitTypeGet")]
        public ISingleResult<SpXMLImportTraitTypeGetResult> SpXMLImportTraitTypeGet([Parameter(DbType = "Int")] System.Nullable<int> intCategoryID, [Parameter(DbType = "VarChar(255)")] string vchrTraitType) {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), intCategoryID, vchrTraitType);
            return ((ISingleResult<SpXMLImportTraitTypeGetResult>)(result.ReturnValue));
        }
    }

    [Table(Name = "dbo.tblALN")]
    public partial class TALN : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaID;

        private System.Nullable<int> _RefID;

        private string _RefPage;

        private string _RefQual;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnRefIDChanging(System.Nullable<int> value);
        partial void OnRefIDChanged();
        partial void OnRefPageChanging(string value);
        partial void OnRefPageChanged();
        partial void OnRefQualChanging(string value);
        partial void OnRefQualChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TALN() {
            OnCreated();
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_RefPage", DbType = "VarChar(50)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this.OnRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._RefPage = value;
                    this.SendPropertyChanged("RefPage");
                    this.OnRefPageChanged();
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_RefQual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string RefQual {
            get {
                return this._RefQual;
            }
            set {
                if ((this._RefQual != value)) {
                    this.OnRefQualChanging(value);
                    this.SendPropertyChanging();
                    this._RefQual = value;
                    this.SendPropertyChanged("RefQual");
                    this.OnRefQualChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblAssociate")]
    public partial class TAssociate : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _AssociateID;

        private int _FromIntraCatID;

        private int _FromCatID;

        private System.Nullable<int> _ToIntraCatID;

        private System.Nullable<int> _ToCatID;

        private string _AssocDescription;

        private string _RelationFromTo;

        private string _RelationToFrom;

        private System.Nullable<int> _PoliticalRegionID;

        private string _Source;

        private System.Nullable<int> _RefID;

        private string _RefPage;

        private bool _Uncertain;

        private string _Notes;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _BasedOnID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAssociateIDChanging(int value);
        partial void OnAssociateIDChanged();
        partial void OnFromIntraCatIDChanging(int value);
        partial void OnFromIntraCatIDChanged();
        partial void OnFromCatIDChanging(int value);
        partial void OnFromCatIDChanged();
        partial void OnToIntraCatIDChanging(System.Nullable<int> value);
        partial void OnToIntraCatIDChanged();
        partial void OnToCatIDChanging(System.Nullable<int> value);
        partial void OnToCatIDChanged();
        partial void OnAssocDescriptionChanging(string value);
        partial void OnAssocDescriptionChanged();
        partial void OnRelationFromToChanging(string value);
        partial void OnRelationFromToChanged();
        partial void OnRelationToFromChanging(string value);
        partial void OnRelationToFromChanged();
        partial void OnPoliticalRegionIDChanging(System.Nullable<int> value);
        partial void OnPoliticalRegionIDChanged();
        partial void OnSourceChanging(string value);
        partial void OnSourceChanged();
        partial void OnRefIDChanging(System.Nullable<int> value);
        partial void OnRefIDChanged();
        partial void OnRefPageChanging(string value);
        partial void OnRefPageChanged();
        partial void OnUncertainChanging(bool value);
        partial void OnUncertainChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnBasedOnIDChanging(System.Nullable<int> value);
        partial void OnBasedOnIDChanged();
        #endregion

        public TAssociate() {
            OnCreated();
        }

        [Column(Name = "intAssociateID", Storage = "_AssociateID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int AssociateID {
            get {
                return this._AssociateID;
            }
            set {
                if ((this._AssociateID != value)) {
                    this.OnAssociateIDChanging(value);
                    this.SendPropertyChanging();
                    this._AssociateID = value;
                    this.SendPropertyChanged("AssociateID");
                    this.OnAssociateIDChanged();
                }
            }
        }

        [Column(Name = "intFromIntraCatID", Storage = "_FromIntraCatID", DbType = "Int NOT NULL")]
        public int FromIntraCatID {
            get {
                return this._FromIntraCatID;
            }
            set {
                if ((this._FromIntraCatID != value)) {
                    this.OnFromIntraCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._FromIntraCatID = value;
                    this.SendPropertyChanged("FromIntraCatID");
                    this.OnFromIntraCatIDChanged();
                }
            }
        }

        [Column(Name = "intFromCatID", Storage = "_FromCatID", DbType = "Int NOT NULL")]
        public int FromCatID {
            get {
                return this._FromCatID;
            }
            set {
                if ((this._FromCatID != value)) {
                    this.OnFromCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._FromCatID = value;
                    this.SendPropertyChanged("FromCatID");
                    this.OnFromCatIDChanged();
                }
            }
        }

        [Column(Name = "intToIntraCatID", Storage = "_ToIntraCatID", DbType = "Int")]
        public System.Nullable<int> ToIntraCatID {
            get {
                return this._ToIntraCatID;
            }
            set {
                if ((this._ToIntraCatID != value)) {
                    this.OnToIntraCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._ToIntraCatID = value;
                    this.SendPropertyChanged("ToIntraCatID");
                    this.OnToIntraCatIDChanged();
                }
            }
        }

        [Column(Name = "intToCatID", Storage = "_ToCatID", DbType = "Int")]
        public System.Nullable<int> ToCatID {
            get {
                return this._ToCatID;
            }
            set {
                if ((this._ToCatID != value)) {
                    this.OnToCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._ToCatID = value;
                    this.SendPropertyChanged("ToCatID");
                    this.OnToCatIDChanged();
                }
            }
        }

        [Column(Name = "txtAssocDescription", Storage = "_AssocDescription", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string AssocDescription {
            get {
                return this._AssocDescription;
            }
            set {
                if ((this._AssocDescription != value)) {
                    this.OnAssocDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._AssocDescription = value;
                    this.SendPropertyChanged("AssocDescription");
                    this.OnAssocDescriptionChanged();
                }
            }
        }

        [Column(Name = "vchrRelationFromTo", Storage = "_RelationFromTo", DbType = "VarChar(50)")]
        public string RelationFromTo {
            get {
                return this._RelationFromTo;
            }
            set {
                if ((this._RelationFromTo != value)) {
                    this.OnRelationFromToChanging(value);
                    this.SendPropertyChanging();
                    this._RelationFromTo = value;
                    this.SendPropertyChanged("RelationFromTo");
                    this.OnRelationFromToChanged();
                }
            }
        }

        [Column(Name = "vchrRelationToFrom", Storage = "_RelationToFrom", DbType = "VarChar(50)")]
        public string RelationToFrom {
            get {
                return this._RelationToFrom;
            }
            set {
                if ((this._RelationToFrom != value)) {
                    this.OnRelationToFromChanging(value);
                    this.SendPropertyChanging();
                    this._RelationToFrom = value;
                    this.SendPropertyChanged("RelationToFrom");
                    this.OnRelationToFromChanged();
                }
            }
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_PoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> PoliticalRegionID {
            get {
                return this._PoliticalRegionID;
            }
            set {
                if ((this._PoliticalRegionID != value)) {
                    this.OnPoliticalRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PoliticalRegionID = value;
                    this.SendPropertyChanged("PoliticalRegionID");
                    this.OnPoliticalRegionIDChanged();
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_Source", DbType = "VarChar(50)")]
        public string Source {
            get {
                return this._Source;
            }
            set {
                if ((this._Source != value)) {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_RefPage", DbType = "VarChar(255)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this.OnRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._RefPage = value;
                    this.SendPropertyChanged("RefPage");
                    this.OnRefPageChanged();
                }
            }
        }

        [Column(Name = "bitUncertain", Storage = "_Uncertain", DbType = "Bit NOT NULL")]
        public bool Uncertain {
            get {
                return this._Uncertain;
            }
            set {
                if ((this._Uncertain != value)) {
                    this.OnUncertainChanging(value);
                    this.SendPropertyChanging();
                    this._Uncertain = value;
                    this.SendPropertyChanged("Uncertain");
                    this.OnUncertainChanged();
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_Notes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intBasedOnID", Storage = "_BasedOnID", DbType = "Int")]
        public System.Nullable<int> BasedOnID {
            get {
                return this._BasedOnID;
            }
            set {
                if ((this._BasedOnID != value)) {
                    this.OnBasedOnIDChanging(value);
                    this.SendPropertyChanging();
                    this._BasedOnID = value;
                    this.SendPropertyChanged("BasedOnID");
                    this.OnBasedOnIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblAuditDelete")]
    public partial class TAuditDelete : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _AuditDeleteID;

        private string _SourceTable;

        private string _DeleteWho;

        private System.Nullable<System.DateTime> _DeleteDatetime;

        private System.Nullable<int> _SourceID;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _Description;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAuditDeleteIDChanging(int value);
        partial void OnAuditDeleteIDChanged();
        partial void OnSourceTableChanging(string value);
        partial void OnSourceTableChanged();
        partial void OnDeleteWhoChanging(string value);
        partial void OnDeleteWhoChanged();
        partial void OnDeleteDatetimeChanging(System.Nullable<System.DateTime> value);
        partial void OnDeleteDatetimeChanged();
        partial void OnSourceIDChanging(System.Nullable<int> value);
        partial void OnSourceIDChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        #endregion

        public TAuditDelete() {
            OnCreated();
        }

        [Column(Name = "intAuditDeleteID", Storage = "_AuditDeleteID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int AuditDeleteID {
            get {
                return this._AuditDeleteID;
            }
            set {
                if ((this._AuditDeleteID != value)) {
                    this.OnAuditDeleteIDChanging(value);
                    this.SendPropertyChanging();
                    this._AuditDeleteID = value;
                    this.SendPropertyChanged("AuditDeleteID");
                    this.OnAuditDeleteIDChanged();
                }
            }
        }

        [Column(Name = "vchrSourceTable", Storage = "_SourceTable", DbType = "VarChar(100)")]
        public string SourceTable {
            get {
                return this._SourceTable;
            }
            set {
                if ((this._SourceTable != value)) {
                    this.OnSourceTableChanging(value);
                    this.SendPropertyChanging();
                    this._SourceTable = value;
                    this.SendPropertyChanged("SourceTable");
                    this.OnSourceTableChanged();
                }
            }
        }

        [Column(Name = "vchrDeleteWho", Storage = "_DeleteWho", DbType = "VarChar(50)")]
        public string DeleteWho {
            get {
                return this._DeleteWho;
            }
            set {
                if ((this._DeleteWho != value)) {
                    this.OnDeleteWhoChanging(value);
                    this.SendPropertyChanging();
                    this._DeleteWho = value;
                    this.SendPropertyChanged("DeleteWho");
                    this.OnDeleteWhoChanged();
                }
            }
        }

        [Column(Name = "dtDeleteDatetime", Storage = "_DeleteDatetime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DeleteDatetime {
            get {
                return this._DeleteDatetime;
            }
            set {
                if ((this._DeleteDatetime != value)) {
                    this.OnDeleteDatetimeChanging(value);
                    this.SendPropertyChanging();
                    this._DeleteDatetime = value;
                    this.SendPropertyChanged("DeleteDatetime");
                    this.OnDeleteDatetimeChanged();
                }
            }
        }

        [Column(Name = "intSourceID", Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this.OnSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._SourceID = value;
                    this.SendPropertyChanged("SourceID");
                    this.OnSourceIDChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "VarChar(1000)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblAutoNumber")]
    public partial class TAutoNumber : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _AutoNumberCatID;

        private string _Category;

        private string _Name;

        private string _Prefix;

        private string _Postfix;

        private int _NumLeadingZeros;

        private int _LastNumber;

        private bool _Locked;

        private bool _EnsureUnique;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnAutoNumberCatIDChanging(int value);
        partial void OnAutoNumberCatIDChanged();
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnPrefixChanging(string value);
        partial void OnPrefixChanged();
        partial void OnPostfixChanging(string value);
        partial void OnPostfixChanged();
        partial void OnNumLeadingZerosChanging(int value);
        partial void OnNumLeadingZerosChanged();
        partial void OnLastNumberChanging(int value);
        partial void OnLastNumberChanged();
        partial void OnLockedChanging(bool value);
        partial void OnLockedChanged();
        partial void OnEnsureUniqueChanging(bool value);
        partial void OnEnsureUniqueChanged();
        #endregion

        public TAutoNumber() {
            OnCreated();
        }

        [Column(Name = "intAutoNumberCatID", Storage = "_AutoNumberCatID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int AutoNumberCatID {
            get {
                return this._AutoNumberCatID;
            }
            set {
                if ((this._AutoNumberCatID != value)) {
                    this.OnAutoNumberCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._AutoNumberCatID = value;
                    this.SendPropertyChanged("AutoNumberCatID");
                    this.OnAutoNumberCatIDChanged();
                }
            }
        }

        [Column(Name = "vchrCategory", Storage = "_Category", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this.OnCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "vchrPrefix", Storage = "_Prefix", DbType = "VarChar(50)")]
        public string Prefix {
            get {
                return this._Prefix;
            }
            set {
                if ((this._Prefix != value)) {
                    this.OnPrefixChanging(value);
                    this.SendPropertyChanging();
                    this._Prefix = value;
                    this.SendPropertyChanged("Prefix");
                    this.OnPrefixChanged();
                }
            }
        }

        [Column(Name = "vchrPostfix", Storage = "_Postfix", DbType = "VarChar(50)")]
        public string Postfix {
            get {
                return this._Postfix;
            }
            set {
                if ((this._Postfix != value)) {
                    this.OnPostfixChanging(value);
                    this.SendPropertyChanging();
                    this._Postfix = value;
                    this.SendPropertyChanged("Postfix");
                    this.OnPostfixChanged();
                }
            }
        }

        [Column(Name = "intNumLeadingZeros", Storage = "_NumLeadingZeros", DbType = "Int NOT NULL")]
        public int NumLeadingZeros {
            get {
                return this._NumLeadingZeros;
            }
            set {
                if ((this._NumLeadingZeros != value)) {
                    this.OnNumLeadingZerosChanging(value);
                    this.SendPropertyChanging();
                    this._NumLeadingZeros = value;
                    this.SendPropertyChanged("NumLeadingZeros");
                    this.OnNumLeadingZerosChanged();
                }
            }
        }

        [Column(Name = "intLastNumber", Storage = "_LastNumber", DbType = "Int NOT NULL")]
        public int LastNumber {
            get {
                return this._LastNumber;
            }
            set {
                if ((this._LastNumber != value)) {
                    this.OnLastNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LastNumber = value;
                    this.SendPropertyChanged("LastNumber");
                    this.OnLastNumberChanged();
                }
            }
        }

        [Column(Name = "bitLocked", Storage = "_Locked", DbType = "Bit NOT NULL")]
        public bool Locked {
            get {
                return this._Locked;
            }
            set {
                if ((this._Locked != value)) {
                    this.OnLockedChanging(value);
                    this.SendPropertyChanging();
                    this._Locked = value;
                    this.SendPropertyChanged("Locked");
                    this.OnLockedChanged();
                }
            }
        }

        [Column(Name = "bitEnsureUnique", Storage = "_EnsureUnique", DbType = "Bit NOT NULL")]
        public bool EnsureUnique {
            get {
                return this._EnsureUnique;
            }
            set {
                if ((this._EnsureUnique != value)) {
                    this.OnEnsureUniqueChanging(value);
                    this.SendPropertyChanging();
                    this._EnsureUnique = value;
                    this.SendPropertyChanged("EnsureUnique");
                    this.OnEnsureUniqueChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiota")]
    public partial class TBiota : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaID;

        private System.Nullable<int> _ParentID;

        private string _Epithet;

        private string _FullName;

        private string _YearOfPub;

        private string _Author;

        private string _NameQualifier;

        private string _ChrElemType;

        private string _Rank;

        private string _ChrKingdomCode;

        private System.Nullable<int> _Order;

        private string _Parentage;

        private bool _ChangedComb;

        private bool _Shadowed;

        private bool _Unplaced;

        private bool _Unverified;

        private bool _AvailableName;

        private bool _LiteratureName;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private string _DistQual;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _ImportedWithProjectID;

        private string _AvailableNameStatus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnParentIDChanging(System.Nullable<int> value);
        partial void OnParentIDChanged();
        partial void OnEpithetChanging(string value);
        partial void OnEpithetChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnYearOfPubChanging(string value);
        partial void OnYearOfPubChanged();
        partial void OnAuthorChanging(string value);
        partial void OnAuthorChanged();
        partial void OnNameQualifierChanging(string value);
        partial void OnNameQualifierChanged();
        partial void OnChrElemTypeChanging(string value);
        partial void OnChrElemTypeChanged();
        partial void OnRankChanging(string value);
        partial void OnRankChanged();
        partial void OnChrKingdomCodeChanging(string value);
        partial void OnChrKingdomCodeChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnChangedCombChanging(bool value);
        partial void OnChangedCombChanged();
        partial void OnShadowedChanging(bool value);
        partial void OnShadowedChanged();
        partial void OnUnplacedChanging(bool value);
        partial void OnUnplacedChanged();
        partial void OnUnverifiedChanging(bool value);
        partial void OnUnverifiedChanged();
        partial void OnAvailableNameChanging(bool value);
        partial void OnAvailableNameChanged();
        partial void OnLiteratureNameChanging(bool value);
        partial void OnLiteratureNameChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDistQualChanging(string value);
        partial void OnDistQualChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnImportedWithProjectIDChanging(System.Nullable<int> value);
        partial void OnImportedWithProjectIDChanged();
        partial void OnAvailableNameStatusChanging(string value);
        partial void OnAvailableNameStatusChanged();
        #endregion

        public TBiota() {
            OnCreated();
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "vchrEpithet", Storage = "_Epithet", DbType = "VarChar(200) NOT NULL", CanBeNull = false)]
        public string Epithet {
            get {
                return this._Epithet;
            }
            set {
                if ((this._Epithet != value)) {
                    this.OnEpithetChanging(value);
                    this.SendPropertyChanging();
                    this._Epithet = value;
                    this.SendPropertyChanged("Epithet");
                    this.OnEpithetChanged();
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_FullName", DbType = "VarChar(255)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this.OnFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._FullName = value;
                    this.SendPropertyChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_YearOfPub", DbType = "VarChar(50)")]
        public string YearOfPub {
            get {
                return this._YearOfPub;
            }
            set {
                if ((this._YearOfPub != value)) {
                    this.OnYearOfPubChanging(value);
                    this.SendPropertyChanging();
                    this._YearOfPub = value;
                    this.SendPropertyChanged("YearOfPub");
                    this.OnYearOfPubChanged();
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_Author", DbType = "VarChar(100)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this.OnAuthorChanging(value);
                    this.SendPropertyChanging();
                    this._Author = value;
                    this.SendPropertyChanged("Author");
                    this.OnAuthorChanged();
                }
            }
        }

        [Column(Name = "vchrNameQualifier", Storage = "_NameQualifier", DbType = "VarChar(15)")]
        public string NameQualifier {
            get {
                return this._NameQualifier;
            }
            set {
                if ((this._NameQualifier != value)) {
                    this.OnNameQualifierChanging(value);
                    this.SendPropertyChanging();
                    this._NameQualifier = value;
                    this.SendPropertyChanged("NameQualifier");
                    this.OnNameQualifierChanged();
                }
            }
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5) NOT NULL", CanBeNull = false)]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this.OnChrElemTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrElemType = value;
                    this.SendPropertyChanged("ChrElemType");
                    this.OnChrElemTypeChanged();
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_Rank", DbType = "VarChar(50)")]
        public string Rank {
            get {
                return this._Rank;
            }
            set {
                if ((this._Rank != value)) {
                    this.OnRankChanging(value);
                    this.SendPropertyChanging();
                    this._Rank = value;
                    this.SendPropertyChanged("Rank");
                    this.OnRankChanged();
                }
            }
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this.OnChrKingdomCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrKingdomCode = value;
                    this.SendPropertyChanged("ChrKingdomCode");
                    this.OnChrKingdomCodeChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Name = "bitChangedComb", Storage = "_ChangedComb", DbType = "Bit NOT NULL")]
        public bool ChangedComb {
            get {
                return this._ChangedComb;
            }
            set {
                if ((this._ChangedComb != value)) {
                    this.OnChangedCombChanging(value);
                    this.SendPropertyChanging();
                    this._ChangedComb = value;
                    this.SendPropertyChanged("ChangedComb");
                    this.OnChangedCombChanged();
                }
            }
        }

        [Column(Name = "bitShadowed", Storage = "_Shadowed", DbType = "Bit NOT NULL")]
        public bool Shadowed {
            get {
                return this._Shadowed;
            }
            set {
                if ((this._Shadowed != value)) {
                    this.OnShadowedChanging(value);
                    this.SendPropertyChanging();
                    this._Shadowed = value;
                    this.SendPropertyChanged("Shadowed");
                    this.OnShadowedChanged();
                }
            }
        }

        [Column(Name = "bitUnplaced", Storage = "_Unplaced", DbType = "Bit NOT NULL")]
        public bool Unplaced {
            get {
                return this._Unplaced;
            }
            set {
                if ((this._Unplaced != value)) {
                    this.OnUnplacedChanging(value);
                    this.SendPropertyChanging();
                    this._Unplaced = value;
                    this.SendPropertyChanged("Unplaced");
                    this.OnUnplacedChanged();
                }
            }
        }

        [Column(Name = "bitUnverified", Storage = "_Unverified", DbType = "Bit NOT NULL")]
        public bool Unverified {
            get {
                return this._Unverified;
            }
            set {
                if ((this._Unverified != value)) {
                    this.OnUnverifiedChanging(value);
                    this.SendPropertyChanging();
                    this._Unverified = value;
                    this.SendPropertyChanged("Unverified");
                    this.OnUnverifiedChanged();
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_AvailableName", DbType = "Bit NOT NULL")]
        public bool AvailableName {
            get {
                return this._AvailableName;
            }
            set {
                if ((this._AvailableName != value)) {
                    this.OnAvailableNameChanging(value);
                    this.SendPropertyChanging();
                    this._AvailableName = value;
                    this.SendPropertyChanged("AvailableName");
                    this.OnAvailableNameChanged();
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_LiteratureName", DbType = "Bit NOT NULL")]
        public bool LiteratureName {
            get {
                return this._LiteratureName;
            }
            set {
                if ((this._LiteratureName != value)) {
                    this.OnLiteratureNameChanging(value);
                    this.SendPropertyChanging();
                    this._LiteratureName = value;
                    this.SendPropertyChanged("LiteratureName");
                    this.OnLiteratureNameChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "txtDistQual", Storage = "_DistQual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string DistQual {
            get {
                return this._DistQual;
            }
            set {
                if ((this._DistQual != value)) {
                    this.OnDistQualChanging(value);
                    this.SendPropertyChanging();
                    this._DistQual = value;
                    this.SendPropertyChanged("DistQual");
                    this.OnDistQualChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_ImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> ImportedWithProjectID {
            get {
                return this._ImportedWithProjectID;
            }
            set {
                if ((this._ImportedWithProjectID != value)) {
                    this.OnImportedWithProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._ImportedWithProjectID = value;
                    this.SendPropertyChanged("ImportedWithProjectID");
                    this.OnImportedWithProjectIDChanged();
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_AvailableNameStatus", DbType = "VarChar(255)")]
        public string AvailableNameStatus {
            get {
                return this._AvailableNameStatus;
            }
            set {
                if ((this._AvailableNameStatus != value)) {
                    this.OnAvailableNameStatusChanging(value);
                    this.SendPropertyChanging();
                    this._AvailableNameStatus = value;
                    this.SendPropertyChanged("AvailableNameStatus");
                    this.OnAvailableNameStatusChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiotaDefKingdom")]
    public partial class TBiotaDefKingdom : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ChrKingdomCode;

        private string _KingdomName;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnChrKingdomCodeChanging(string value);
        partial void OnChrKingdomCodeChanged();
        partial void OnKingdomNameChanging(string value);
        partial void OnKingdomNameChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TBiotaDefKingdom() {
            OnCreated();
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this.OnChrKingdomCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrKingdomCode = value;
                    this.SendPropertyChanged("ChrKingdomCode");
                    this.OnChrKingdomCodeChanged();
                }
            }
        }

        [Column(Name = "vchrKingdomName", Storage = "_KingdomName", DbType = "VarChar(50)")]
        public string KingdomName {
            get {
                return this._KingdomName;
            }
            set {
                if ((this._KingdomName != value)) {
                    this.OnKingdomNameChanging(value);
                    this.SendPropertyChanging();
                    this._KingdomName = value;
                    this.SendPropertyChanged("KingdomName");
                    this.OnKingdomNameChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiotaDefRank")]
    public partial class TBiotaDefRank : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ChrCode;

        private string _LongName;

        private string _TextBeforeInFullName;

        private string _TextAfterInFullName;

        private bool _JoinToParentInFullName;

        private string _ChecklistDisplayAs;

        private byte _AvailableNameAllowed;

        private bool _UnplacedAllowed;

        private bool _ChgCombAllowed;

        private bool _LituratueNameAllowed;

        private string _ChrCategory;

        private int _Order;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnChrCodeChanging(string value);
        partial void OnChrCodeChanged();
        partial void OnLongNameChanging(string value);
        partial void OnLongNameChanged();
        partial void OnTextBeforeInFullNameChanging(string value);
        partial void OnTextBeforeInFullNameChanged();
        partial void OnTextAfterInFullNameChanging(string value);
        partial void OnTextAfterInFullNameChanged();
        partial void OnJoinToParentInFullNameChanging(bool value);
        partial void OnJoinToParentInFullNameChanged();
        partial void OnChecklistDisplayAsChanging(string value);
        partial void OnChecklistDisplayAsChanged();
        partial void OnAvailableNameAllowedChanging(byte value);
        partial void OnAvailableNameAllowedChanged();
        partial void OnUnplacedAllowedChanging(bool value);
        partial void OnUnplacedAllowedChanged();
        partial void OnChgCombAllowedChanging(bool value);
        partial void OnChgCombAllowedChanged();
        partial void OnLituratueNameAllowedChanging(bool value);
        partial void OnLituratueNameAllowedChanged();
        partial void OnChrCategoryChanging(string value);
        partial void OnChrCategoryChanged();
        partial void OnOrderChanging(int value);
        partial void OnOrderChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TBiotaDefRank() {
            OnCreated();
        }

        [Column(Name = "chrCode", Storage = "_ChrCode", DbType = "Char(5) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ChrCode {
            get {
                return this._ChrCode;
            }
            set {
                if ((this._ChrCode != value)) {
                    this.OnChrCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrCode = value;
                    this.SendPropertyChanged("ChrCode");
                    this.OnChrCodeChanged();
                }
            }
        }

        [Column(Name = "vchrLongName", Storage = "_LongName", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string LongName {
            get {
                return this._LongName;
            }
            set {
                if ((this._LongName != value)) {
                    this.OnLongNameChanging(value);
                    this.SendPropertyChanging();
                    this._LongName = value;
                    this.SendPropertyChanged("LongName");
                    this.OnLongNameChanged();
                }
            }
        }

        [Column(Name = "vchrTextBeforeInFullName", Storage = "_TextBeforeInFullName", DbType = "VarChar(10)")]
        public string TextBeforeInFullName {
            get {
                return this._TextBeforeInFullName;
            }
            set {
                if ((this._TextBeforeInFullName != value)) {
                    this.OnTextBeforeInFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._TextBeforeInFullName = value;
                    this.SendPropertyChanged("TextBeforeInFullName");
                    this.OnTextBeforeInFullNameChanged();
                }
            }
        }

        [Column(Name = "vchrTextAfterInFullName", Storage = "_TextAfterInFullName", DbType = "VarChar(10)")]
        public string TextAfterInFullName {
            get {
                return this._TextAfterInFullName;
            }
            set {
                if ((this._TextAfterInFullName != value)) {
                    this.OnTextAfterInFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._TextAfterInFullName = value;
                    this.SendPropertyChanged("TextAfterInFullName");
                    this.OnTextAfterInFullNameChanged();
                }
            }
        }

        [Column(Name = "bitJoinToParentInFullName", Storage = "_JoinToParentInFullName", DbType = "Bit NOT NULL")]
        public bool JoinToParentInFullName {
            get {
                return this._JoinToParentInFullName;
            }
            set {
                if ((this._JoinToParentInFullName != value)) {
                    this.OnJoinToParentInFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._JoinToParentInFullName = value;
                    this.SendPropertyChanged("JoinToParentInFullName");
                    this.OnJoinToParentInFullNameChanged();
                }
            }
        }

        [Column(Name = "vchrChecklistDisplayAs", Storage = "_ChecklistDisplayAs", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string ChecklistDisplayAs {
            get {
                return this._ChecklistDisplayAs;
            }
            set {
                if ((this._ChecklistDisplayAs != value)) {
                    this.OnChecklistDisplayAsChanging(value);
                    this.SendPropertyChanging();
                    this._ChecklistDisplayAs = value;
                    this.SendPropertyChanged("ChecklistDisplayAs");
                    this.OnChecklistDisplayAsChanged();
                }
            }
        }

        [Column(Name = "bitAvailableNameAllowed", Storage = "_AvailableNameAllowed", DbType = "TinyInt NOT NULL")]
        public byte AvailableNameAllowed {
            get {
                return this._AvailableNameAllowed;
            }
            set {
                if ((this._AvailableNameAllowed != value)) {
                    this.OnAvailableNameAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._AvailableNameAllowed = value;
                    this.SendPropertyChanged("AvailableNameAllowed");
                    this.OnAvailableNameAllowedChanged();
                }
            }
        }

        [Column(Name = "bitUnplacedAllowed", Storage = "_UnplacedAllowed", DbType = "Bit NOT NULL")]
        public bool UnplacedAllowed {
            get {
                return this._UnplacedAllowed;
            }
            set {
                if ((this._UnplacedAllowed != value)) {
                    this.OnUnplacedAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._UnplacedAllowed = value;
                    this.SendPropertyChanged("UnplacedAllowed");
                    this.OnUnplacedAllowedChanged();
                }
            }
        }

        [Column(Name = "bitChgCombAllowed", Storage = "_ChgCombAllowed", DbType = "Bit NOT NULL")]
        public bool ChgCombAllowed {
            get {
                return this._ChgCombAllowed;
            }
            set {
                if ((this._ChgCombAllowed != value)) {
                    this.OnChgCombAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._ChgCombAllowed = value;
                    this.SendPropertyChanged("ChgCombAllowed");
                    this.OnChgCombAllowedChanged();
                }
            }
        }

        [Column(Name = "bitLituratueNameAllowed", Storage = "_LituratueNameAllowed", DbType = "Bit NOT NULL")]
        public bool LituratueNameAllowed {
            get {
                return this._LituratueNameAllowed;
            }
            set {
                if ((this._LituratueNameAllowed != value)) {
                    this.OnLituratueNameAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._LituratueNameAllowed = value;
                    this.SendPropertyChanged("LituratueNameAllowed");
                    this.OnLituratueNameAllowedChanged();
                }
            }
        }

        [Column(Name = "chrCategory", Storage = "_ChrCategory", DbType = "Char(1)")]
        public string ChrCategory {
            get {
                return this._ChrCategory;
            }
            set {
                if ((this._ChrCategory != value)) {
                    this.OnChrCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._ChrCategory = value;
                    this.SendPropertyChanged("ChrCategory");
                    this.OnChrCategoryChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int NOT NULL")]
        public int Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiotaDefRules")]
    public partial class TBiotaDefRules : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ChrKingdomCode;

        private string _ChrRankCode;

        private string _ValidChildList;

        private string _ValidEndingList;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnChrKingdomCodeChanging(string value);
        partial void OnChrKingdomCodeChanged();
        partial void OnChrRankCodeChanging(string value);
        partial void OnChrRankCodeChanged();
        partial void OnValidChildListChanging(string value);
        partial void OnValidChildListChanged();
        partial void OnValidEndingListChanging(string value);
        partial void OnValidEndingListChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TBiotaDefRules() {
            OnCreated();
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this.OnChrKingdomCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrKingdomCode = value;
                    this.SendPropertyChanged("ChrKingdomCode");
                    this.OnChrKingdomCodeChanged();
                }
            }
        }

        [Column(Name = "chrRankCode", Storage = "_ChrRankCode", DbType = "Char(20) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ChrRankCode {
            get {
                return this._ChrRankCode;
            }
            set {
                if ((this._ChrRankCode != value)) {
                    this.OnChrRankCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrRankCode = value;
                    this.SendPropertyChanged("ChrRankCode");
                    this.OnChrRankCodeChanged();
                }
            }
        }

        [Column(Name = "vchrValidChildList", Storage = "_ValidChildList", DbType = "VarChar(255)")]
        public string ValidChildList {
            get {
                return this._ValidChildList;
            }
            set {
                if ((this._ValidChildList != value)) {
                    this.OnValidChildListChanging(value);
                    this.SendPropertyChanging();
                    this._ValidChildList = value;
                    this.SendPropertyChanged("ValidChildList");
                    this.OnValidChildListChanged();
                }
            }
        }

        [Column(Name = "vchrValidEndingList", Storage = "_ValidEndingList", DbType = "VarChar(255)")]
        public string ValidEndingList {
            get {
                return this._ValidEndingList;
            }
            set {
                if ((this._ValidEndingList != value)) {
                    this.OnValidEndingListChanging(value);
                    this.SendPropertyChanging();
                    this._ValidEndingList = value;
                    this.SendPropertyChanged("ValidEndingList");
                    this.OnValidEndingListChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiotaDistribution")]
    public partial class TBiotaDistribution : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaDistID;

        private int _BiotaID;

        private int _DistributionRegionID;

        private bool _Introduced;

        private bool _Uncertain;

        private string _Qual;

        private System.Nullable<System.Guid> _GUID;

        private bool _ThroughoutRegion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaDistIDChanging(int value);
        partial void OnBiotaDistIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnDistributionRegionIDChanging(int value);
        partial void OnDistributionRegionIDChanged();
        partial void OnIntroducedChanging(bool value);
        partial void OnIntroducedChanged();
        partial void OnUncertainChanging(bool value);
        partial void OnUncertainChanged();
        partial void OnQualChanging(string value);
        partial void OnQualChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnThroughoutRegionChanging(bool value);
        partial void OnThroughoutRegionChanged();
        #endregion

        public TBiotaDistribution() {
            OnCreated();
        }

        [Column(Name = "intBiotaDistID", Storage = "_BiotaDistID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int BiotaDistID {
            get {
                return this._BiotaDistID;
            }
            set {
                if ((this._BiotaDistID != value)) {
                    this.OnBiotaDistIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaDistID = value;
                    this.SendPropertyChanged("BiotaDistID");
                    this.OnBiotaDistIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL")]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intDistributionRegionID", Storage = "_DistributionRegionID", DbType = "Int NOT NULL")]
        public int DistributionRegionID {
            get {
                return this._DistributionRegionID;
            }
            set {
                if ((this._DistributionRegionID != value)) {
                    this.OnDistributionRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._DistributionRegionID = value;
                    this.SendPropertyChanged("DistributionRegionID");
                    this.OnDistributionRegionIDChanged();
                }
            }
        }

        [Column(Name = "bitIntroduced", Storage = "_Introduced", DbType = "Bit NOT NULL")]
        public bool Introduced {
            get {
                return this._Introduced;
            }
            set {
                if ((this._Introduced != value)) {
                    this.OnIntroducedChanging(value);
                    this.SendPropertyChanging();
                    this._Introduced = value;
                    this.SendPropertyChanged("Introduced");
                    this.OnIntroducedChanged();
                }
            }
        }

        [Column(Name = "bitUncertain", Storage = "_Uncertain", DbType = "Bit NOT NULL")]
        public bool Uncertain {
            get {
                return this._Uncertain;
            }
            set {
                if ((this._Uncertain != value)) {
                    this.OnUncertainChanging(value);
                    this.SendPropertyChanging();
                    this._Uncertain = value;
                    this.SendPropertyChanged("Uncertain");
                    this.OnUncertainChanged();
                }
            }
        }

        [Column(Name = "txtQual", Storage = "_Qual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Qual {
            get {
                return this._Qual;
            }
            set {
                if ((this._Qual != value)) {
                    this.OnQualChanging(value);
                    this.SendPropertyChanging();
                    this._Qual = value;
                    this.SendPropertyChanged("Qual");
                    this.OnQualChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "bitThroughoutRegion", Storage = "_ThroughoutRegion", DbType = "Bit NOT NULL")]
        public bool ThroughoutRegion {
            get {
                return this._ThroughoutRegion;
            }
            set {
                if ((this._ThroughoutRegion != value)) {
                    this.OnThroughoutRegionChanging(value);
                    this.SendPropertyChanging();
                    this._ThroughoutRegion = value;
                    this.SendPropertyChanged("ThroughoutRegion");
                    this.OnThroughoutRegionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiotaLocation")]
    public partial class TBiotaLocation : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaLocationID;

        private int _BiotaID;

        private int _BiotaStorageID;

        private string _Notes;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaLocationIDChanging(int value);
        partial void OnBiotaLocationIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnBiotaStorageIDChanging(int value);
        partial void OnBiotaStorageIDChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TBiotaLocation() {
            OnCreated();
        }

        [Column(Name = "intBiotaLocationID", Storage = "_BiotaLocationID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int BiotaLocationID {
            get {
                return this._BiotaLocationID;
            }
            set {
                if ((this._BiotaLocationID != value)) {
                    this.OnBiotaLocationIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaLocationID = value;
                    this.SendPropertyChanged("BiotaLocationID");
                    this.OnBiotaLocationIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL")]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaStorageID", Storage = "_BiotaStorageID", DbType = "Int NOT NULL")]
        public int BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this.OnBiotaStorageIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaStorageID = value;
                    this.SendPropertyChanged("BiotaStorageID");
                    this.OnBiotaStorageIDChanged();
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_Notes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblBiotaStorage")]
    public partial class TBiotaStorage : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaStorageID;

        private string _Name;

        private System.Nullable<int> _ParentID;

        private string _Parentage;

        private string _FullPath;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaStorageIDChanging(int value);
        partial void OnBiotaStorageIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnParentIDChanging(System.Nullable<int> value);
        partial void OnParentIDChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnFullPathChanging(string value);
        partial void OnFullPathChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TBiotaStorage() {
            OnCreated();
        }

        [Column(Name = "intBiotaStorageID", Storage = "_BiotaStorageID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this.OnBiotaStorageIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaStorageID = value;
                    this.SendPropertyChanged("BiotaStorageID");
                    this.OnBiotaStorageIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Name = "txtFullPath", Storage = "_FullPath", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string FullPath {
            get {
                return this._FullPath;
            }
            set {
                if ((this._FullPath != value)) {
                    this.OnFullPathChanging(value);
                    this.SendPropertyChanging();
                    this._FullPath = value;
                    this.SendPropertyChanged("FullPath");
                    this.OnFullPathChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblCharacter")]
    public partial class TCharacter : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CharacterID;

        private string _Name;

        private string _Type;

        private string _GridText;

        private string _Description;

        private System.Nullable<byte> _TintReliability;

        private System.Nullable<int> _ImportedWithProjectID;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _CharacterGroupID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCharacterIDChanging(int value);
        partial void OnCharacterIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnGridTextChanging(string value);
        partial void OnGridTextChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnTintReliabilityChanging(System.Nullable<byte> value);
        partial void OnTintReliabilityChanged();
        partial void OnImportedWithProjectIDChanging(System.Nullable<int> value);
        partial void OnImportedWithProjectIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnCharacterGroupIDChanging(System.Nullable<int> value);
        partial void OnCharacterGroupIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        #endregion

        public TCharacter() {
            OnCreated();
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(2000) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_Type", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [Column(Name = "vchrGridText", Storage = "_GridText", DbType = "VarChar(50)")]
        public string GridText {
            get {
                return this._GridText;
            }
            set {
                if ((this._GridText != value)) {
                    this.OnGridTextChanging(value);
                    this.SendPropertyChanging();
                    this._GridText = value;
                    this.SendPropertyChanged("GridText");
                    this.OnGridTextChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "VarChar(2000)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "tintReliability", Storage = "_TintReliability", DbType = "TinyInt")]
        public System.Nullable<byte> TintReliability {
            get {
                return this._TintReliability;
            }
            set {
                if ((this._TintReliability != value)) {
                    this.OnTintReliabilityChanging(value);
                    this.SendPropertyChanging();
                    this._TintReliability = value;
                    this.SendPropertyChanged("TintReliability");
                    this.OnTintReliabilityChanged();
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_ImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> ImportedWithProjectID {
            get {
                return this._ImportedWithProjectID;
            }
            set {
                if ((this._ImportedWithProjectID != value)) {
                    this.OnImportedWithProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._ImportedWithProjectID = value;
                    this.SendPropertyChanged("ImportedWithProjectID");
                    this.OnImportedWithProjectIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterGroupID", Storage = "_CharacterGroupID", DbType = "Int")]
        public System.Nullable<int> CharacterGroupID {
            get {
                return this._CharacterGroupID;
            }
            set {
                if ((this._CharacterGroupID != value)) {
                    this.OnCharacterGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterGroupID = value;
                    this.SendPropertyChanged("CharacterGroupID");
                    this.OnCharacterGroupIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblCharacterDependancy")]
    public partial class TCharacterDependancy : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CharacterDependancyID;

        private int _CharacterID;

        private int _CharacterStateID;

        private string _Notes;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCharacterDependancyIDChanging(int value);
        partial void OnCharacterDependancyIDChanged();
        partial void OnCharacterIDChanging(int value);
        partial void OnCharacterIDChanged();
        partial void OnCharacterStateIDChanging(int value);
        partial void OnCharacterStateIDChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        #endregion

        public TCharacterDependancy() {
            OnCreated();
        }

        [Column(Name = "intCharacterDependancyID", Storage = "_CharacterDependancyID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CharacterDependancyID {
            get {
                return this._CharacterDependancyID;
            }
            set {
                if ((this._CharacterDependancyID != value)) {
                    this.OnCharacterDependancyIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterDependancyID = value;
                    this.SendPropertyChanged("CharacterDependancyID");
                    this.OnCharacterDependancyIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int NOT NULL")]
        public int CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_CharacterStateID", DbType = "Int NOT NULL")]
        public int CharacterStateID {
            get {
                return this._CharacterStateID;
            }
            set {
                if ((this._CharacterStateID != value)) {
                    this.OnCharacterStateIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterStateID = value;
                    this.SendPropertyChanged("CharacterStateID");
                    this.OnCharacterStateIDChanged();
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_Notes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblCharacterGroup")]
    public partial class TCharacterGroup : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CharacterGroupID;

        private int _ParentID;

        private string _Name;

        private System.Nullable<int> _ImportedWithProjectID;

        private string _Parentage;

        private System.Nullable<System.Guid> _GUID;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCharacterGroupIDChanging(int value);
        partial void OnCharacterGroupIDChanged();
        partial void OnParentIDChanging(int value);
        partial void OnParentIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnImportedWithProjectIDChanging(System.Nullable<int> value);
        partial void OnImportedWithProjectIDChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        #endregion

        public TCharacterGroup() {
            OnCreated();
        }

        [Column(Name = "intCharacterGroupID", Storage = "_CharacterGroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CharacterGroupID {
            get {
                return this._CharacterGroupID;
            }
            set {
                if ((this._CharacterGroupID != value)) {
                    this.OnCharacterGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterGroupID = value;
                    this.SendPropertyChanged("CharacterGroupID");
                    this.OnCharacterGroupIDChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int NOT NULL")]
        public int ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_ImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> ImportedWithProjectID {
            get {
                return this._ImportedWithProjectID;
            }
            set {
                if ((this._ImportedWithProjectID != value)) {
                    this.OnImportedWithProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._ImportedWithProjectID = value;
                    this.SendPropertyChanged("ImportedWithProjectID");
                    this.OnImportedWithProjectIDChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(1000)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblCharacterNumeric")]
    public partial class TCharacterNumeric : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CharacterNumericID;

        private int _CharacterID;

        private string _Name;

        private byte _TintType;

        private System.Nullable<float> _NumMaximum;

        private System.Nullable<float> _NumMinimum;

        private string _Units;

        private System.Nullable<int> _Order;

        private string _Description;

        private bool _Default;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCharacterNumericIDChanging(int value);
        partial void OnCharacterNumericIDChanged();
        partial void OnCharacterIDChanging(int value);
        partial void OnCharacterIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTintTypeChanging(byte value);
        partial void OnTintTypeChanged();
        partial void OnNumMaximumChanging(System.Nullable<float> value);
        partial void OnNumMaximumChanged();
        partial void OnNumMinimumChanging(System.Nullable<float> value);
        partial void OnNumMinimumChanged();
        partial void OnUnitsChanging(string value);
        partial void OnUnitsChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnDefaultChanging(bool value);
        partial void OnDefaultChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        #endregion

        public TCharacterNumeric() {
            OnCreated();
        }

        [Column(Name = "intCharacterNumericID", Storage = "_CharacterNumericID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CharacterNumericID {
            get {
                return this._CharacterNumericID;
            }
            set {
                if ((this._CharacterNumericID != value)) {
                    this.OnCharacterNumericIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterNumericID = value;
                    this.SendPropertyChanged("CharacterNumericID");
                    this.OnCharacterNumericIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int NOT NULL")]
        public int CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "tintType", Storage = "_TintType", DbType = "TinyInt NOT NULL")]
        public byte TintType {
            get {
                return this._TintType;
            }
            set {
                if ((this._TintType != value)) {
                    this.OnTintTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TintType = value;
                    this.SendPropertyChanged("TintType");
                    this.OnTintTypeChanged();
                }
            }
        }

        [Column(Name = "numMaximum", Storage = "_NumMaximum", DbType = "Real")]
        public System.Nullable<float> NumMaximum {
            get {
                return this._NumMaximum;
            }
            set {
                if ((this._NumMaximum != value)) {
                    this.OnNumMaximumChanging(value);
                    this.SendPropertyChanging();
                    this._NumMaximum = value;
                    this.SendPropertyChanged("NumMaximum");
                    this.OnNumMaximumChanged();
                }
            }
        }

        [Column(Name = "numMinimum", Storage = "_NumMinimum", DbType = "Real")]
        public System.Nullable<float> NumMinimum {
            get {
                return this._NumMinimum;
            }
            set {
                if ((this._NumMinimum != value)) {
                    this.OnNumMinimumChanging(value);
                    this.SendPropertyChanging();
                    this._NumMinimum = value;
                    this.SendPropertyChanged("NumMinimum");
                    this.OnNumMinimumChanged();
                }
            }
        }

        [Column(Name = "vchrUnits", Storage = "_Units", DbType = "VarChar(255)")]
        public string Units {
            get {
                return this._Units;
            }
            set {
                if ((this._Units != value)) {
                    this.OnUnitsChanging(value);
                    this.SendPropertyChanging();
                    this._Units = value;
                    this.SendPropertyChanged("Units");
                    this.OnUnitsChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "VarChar(2000)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_Default", DbType = "Bit NOT NULL")]
        public bool Default {
            get {
                return this._Default;
            }
            set {
                if ((this._Default != value)) {
                    this.OnDefaultChanging(value);
                    this.SendPropertyChanging();
                    this._Default = value;
                    this.SendPropertyChanged("Default");
                    this.OnDefaultChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblCharacterState")]
    public partial class TCharacterState : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CharacterStateID;

        private int _CharacterID;

        private string _Name;

        private System.Nullable<int> _Order;

        private bool _Default;

        private System.Nullable<int> _OriginalDeltaNumber;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCharacterStateIDChanging(int value);
        partial void OnCharacterStateIDChanged();
        partial void OnCharacterIDChanging(int value);
        partial void OnCharacterIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnDefaultChanging(bool value);
        partial void OnDefaultChanged();
        partial void OnOriginalDeltaNumberChanging(System.Nullable<int> value);
        partial void OnOriginalDeltaNumberChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        #endregion

        public TCharacterState() {
            OnCreated();
        }

        [Column(Name = "intCharacterStateID", Storage = "_CharacterStateID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CharacterStateID {
            get {
                return this._CharacterStateID;
            }
            set {
                if ((this._CharacterStateID != value)) {
                    this.OnCharacterStateIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterStateID = value;
                    this.SendPropertyChanged("CharacterStateID");
                    this.OnCharacterStateIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int NOT NULL")]
        public int CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(2000) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_Default", DbType = "Bit NOT NULL")]
        public bool Default {
            get {
                return this._Default;
            }
            set {
                if ((this._Default != value)) {
                    this.OnDefaultChanging(value);
                    this.SendPropertyChanging();
                    this._Default = value;
                    this.SendPropertyChanged("Default");
                    this.OnDefaultChanged();
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_OriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> OriginalDeltaNumber {
            get {
                return this._OriginalDeltaNumber;
            }
            set {
                if ((this._OriginalDeltaNumber != value)) {
                    this.OnOriginalDeltaNumberChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalDeltaNumber = value;
                    this.SendPropertyChanged("OriginalDeltaNumber");
                    this.OnOriginalDeltaNumberChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblCommonName")]
    public partial class TCommonName : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CommonNameID;

        private int _BiotaID;

        private string _CommonName;

        private System.Nullable<int> _RefID;

        private string _RefPage;

        private string _Notes;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCommonNameIDChanging(int value);
        partial void OnCommonNameIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnCommonNameChanging(string value);
        partial void OnCommonNameChanged();
        partial void OnRefIDChanging(System.Nullable<int> value);
        partial void OnRefIDChanged();
        partial void OnRefPageChanging(string value);
        partial void OnRefPageChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TCommonName() {
            OnCreated();
        }

        [Column(Name = "intCommonNameID", Storage = "_CommonNameID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CommonNameID {
            get {
                return this._CommonNameID;
            }
            set {
                if ((this._CommonNameID != value)) {
                    this.OnCommonNameIDChanging(value);
                    this.SendPropertyChanging();
                    this._CommonNameID = value;
                    this.SendPropertyChanged("CommonNameID");
                    this.OnCommonNameIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL")]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "vchrCommonName", Storage = "_CommonName", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string CommonName {
            get {
                return this._CommonName;
            }
            set {
                if ((this._CommonName != value)) {
                    this.OnCommonNameChanging(value);
                    this.SendPropertyChanging();
                    this._CommonName = value;
                    this.SendPropertyChanged("CommonName");
                    this.OnCommonNameChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_RefPage", DbType = "VarChar(50)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this.OnRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._RefPage = value;
                    this.SendPropertyChanged("RefPage");
                    this.OnRefPageChanged();
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_Notes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblContact")]
    public partial class TContact {

        private int _ContactID;

        private string _Name;

        private string _Title;

        private string _GivenName;

        private string _PostalAddress;

        private string _StreetAddress;

        private string _Institution;

        private string _JobTitle;

        private string _WorkPh;

        private string _WorkFax;

        private string _HomePh;

        private string _EMail;

        private System.Nullable<System.Guid> _GUID;

        public TContact() {
        }

        [Column(Name = "intContactID", Storage = "_ContactID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int ContactID {
            get {
                return this._ContactID;
            }
            set {
                if ((this._ContactID != value)) {
                    this._ContactID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Name = "vchrTitle", Storage = "_Title", DbType = "VarChar(50)")]
        public string Title {
            get {
                return this._Title;
            }
            set {
                if ((this._Title != value)) {
                    this._Title = value;
                }
            }
        }

        [Column(Name = "vchrGivenName", Storage = "_GivenName", DbType = "VarChar(255)")]
        public string GivenName {
            get {
                return this._GivenName;
            }
            set {
                if ((this._GivenName != value)) {
                    this._GivenName = value;
                }
            }
        }

        [Column(Name = "vchrPostalAddress", Storage = "_PostalAddress", DbType = "VarChar(1000)")]
        public string PostalAddress {
            get {
                return this._PostalAddress;
            }
            set {
                if ((this._PostalAddress != value)) {
                    this._PostalAddress = value;
                }
            }
        }

        [Column(Name = "vchrStreetAddress", Storage = "_StreetAddress", DbType = "VarChar(1000)")]
        public string StreetAddress {
            get {
                return this._StreetAddress;
            }
            set {
                if ((this._StreetAddress != value)) {
                    this._StreetAddress = value;
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_Institution", DbType = "VarChar(255)")]
        public string Institution {
            get {
                return this._Institution;
            }
            set {
                if ((this._Institution != value)) {
                    this._Institution = value;
                }
            }
        }

        [Column(Name = "vchrJobTitle", Storage = "_JobTitle", DbType = "VarChar(255)")]
        public string JobTitle {
            get {
                return this._JobTitle;
            }
            set {
                if ((this._JobTitle != value)) {
                    this._JobTitle = value;
                }
            }
        }

        [Column(Name = "vchrWorkPh", Storage = "_WorkPh", DbType = "VarChar(50)")]
        public string WorkPh {
            get {
                return this._WorkPh;
            }
            set {
                if ((this._WorkPh != value)) {
                    this._WorkPh = value;
                }
            }
        }

        [Column(Name = "vchrWorkFax", Storage = "_WorkFax", DbType = "VarChar(50)")]
        public string WorkFax {
            get {
                return this._WorkFax;
            }
            set {
                if ((this._WorkFax != value)) {
                    this._WorkFax = value;
                }
            }
        }

        [Column(Name = "vchrHomePh", Storage = "_HomePh", DbType = "VarChar(50)")]
        public string HomePh {
            get {
                return this._HomePh;
            }
            set {
                if ((this._HomePh != value)) {
                    this._HomePh = value;
                }
            }
        }

        [Column(Name = "vchrEMail", Storage = "_EMail", DbType = "VarChar(255)")]
        public string EMail {
            get {
                return this._EMail;
            }
            set {
                if ((this._EMail != value)) {
                    this._EMail = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    [Table(Name = "dbo.tblCurationEvent")]
    public partial class TCurationEvent : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CurationEventID;

        private int _MaterialID;

        private string _SubpartName;

        private string _Who;

        private System.Nullable<System.DateTime> _When;

        private string _EventType;

        private string _EventDesc;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCurationEventIDChanging(int value);
        partial void OnCurationEventIDChanged();
        partial void OnMaterialIDChanging(int value);
        partial void OnMaterialIDChanged();
        partial void OnSubpartNameChanging(string value);
        partial void OnSubpartNameChanged();
        partial void OnWhoChanging(string value);
        partial void OnWhoChanged();
        partial void OnWhenChanging(System.Nullable<System.DateTime> value);
        partial void OnWhenChanged();
        partial void OnEventTypeChanging(string value);
        partial void OnEventTypeChanged();
        partial void OnEventDescChanging(string value);
        partial void OnEventDescChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TCurationEvent() {
            OnCreated();
        }

        [Column(Name = "intCurationEventID", Storage = "_CurationEventID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CurationEventID {
            get {
                return this._CurationEventID;
            }
            set {
                if ((this._CurationEventID != value)) {
                    this.OnCurationEventIDChanging(value);
                    this.SendPropertyChanging();
                    this._CurationEventID = value;
                    this.SendPropertyChanged("CurationEventID");
                    this.OnCurationEventIDChanged();
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", DbType = "Int NOT NULL")]
        public int MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        [Column(Name = "vchrSubpartName", Storage = "_SubpartName", DbType = "VarChar(255)")]
        public string SubpartName {
            get {
                return this._SubpartName;
            }
            set {
                if ((this._SubpartName != value)) {
                    this.OnSubpartNameChanging(value);
                    this.SendPropertyChanging();
                    this._SubpartName = value;
                    this.SendPropertyChanged("SubpartName");
                    this.OnSubpartNameChanged();
                }
            }
        }

        [Column(Name = "vchrWho", Storage = "_Who", DbType = "VarChar(50)")]
        public string Who {
            get {
                return this._Who;
            }
            set {
                if ((this._Who != value)) {
                    this.OnWhoChanging(value);
                    this.SendPropertyChanging();
                    this._Who = value;
                    this.SendPropertyChanged("Who");
                    this.OnWhoChanged();
                }
            }
        }

        [Column(Name = "dtWhen", Storage = "_When", DbType = "DateTime")]
        public System.Nullable<System.DateTime> When {
            get {
                return this._When;
            }
            set {
                if ((this._When != value)) {
                    this.OnWhenChanging(value);
                    this.SendPropertyChanging();
                    this._When = value;
                    this.SendPropertyChanged("When");
                    this.OnWhenChanged();
                }
            }
        }

        [Column(Name = "vchrEventType", Storage = "_EventType", DbType = "VarChar(100)")]
        public string EventType {
            get {
                return this._EventType;
            }
            set {
                if ((this._EventType != value)) {
                    this.OnEventTypeChanging(value);
                    this.SendPropertyChanging();
                    this._EventType = value;
                    this.SendPropertyChanged("EventType");
                    this.OnEventTypeChanged();
                }
            }
        }

        [Column(Name = "txtEventDesc", Storage = "_EventDesc", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string EventDesc {
            get {
                return this._EventDesc;
            }
            set {
                if ((this._EventDesc != value)) {
                    this.OnEventDescChanging(value);
                    this.SendPropertyChanging();
                    this._EventDesc = value;
                    this.SendPropertyChanged("EventDesc");
                    this.OnEventDescChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblDarwinCoreV1")]
    public partial class TDarwinCoreV1 : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _RecordID;

        private int _BiotaID;

        private int _MaterialID;

        private string _ScientificName;

        private string _Kingdom;

        private string _Phylum;

        private string _Class;

        private string _Order;

        private string _Family;

        private string _Genus;

        private string _Species;

        private string _Subspecies;

        private string _InstitutionCode;

        private string _CollectionCode;

        private string _CatalogNumber;

        private string _Collector;

        private System.Nullable<int> _Year;

        private System.Nullable<int> _Month;

        private System.Nullable<int> _Day;

        private string _Country;

        private string _State;

        private string _County;

        private string _Locality;

        private System.Nullable<decimal> _DblLongitude;

        private System.Nullable<decimal> _DblLatitude;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRecordIDChanging(int value);
        partial void OnRecordIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnMaterialIDChanging(int value);
        partial void OnMaterialIDChanged();
        partial void OnScientificNameChanging(string value);
        partial void OnScientificNameChanged();
        partial void OnKingdomChanging(string value);
        partial void OnKingdomChanged();
        partial void OnPhylumChanging(string value);
        partial void OnPhylumChanged();
        partial void OnClassChanging(string value);
        partial void OnClassChanged();
        partial void OnOrderChanging(string value);
        partial void OnOrderChanged();
        partial void OnFamilyChanging(string value);
        partial void OnFamilyChanged();
        partial void OnGenusChanging(string value);
        partial void OnGenusChanged();
        partial void OnSpeciesChanging(string value);
        partial void OnSpeciesChanged();
        partial void OnSubspeciesChanging(string value);
        partial void OnSubspeciesChanged();
        partial void OnInstitutionCodeChanging(string value);
        partial void OnInstitutionCodeChanged();
        partial void OnCollectionCodeChanging(string value);
        partial void OnCollectionCodeChanged();
        partial void OnCatalogNumberChanging(string value);
        partial void OnCatalogNumberChanged();
        partial void OnCollectorChanging(string value);
        partial void OnCollectorChanged();
        partial void OnYearChanging(System.Nullable<int> value);
        partial void OnYearChanged();
        partial void OnMonthChanging(System.Nullable<int> value);
        partial void OnMonthChanged();
        partial void OnDayChanging(System.Nullable<int> value);
        partial void OnDayChanged();
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
        partial void OnStateChanging(string value);
        partial void OnStateChanged();
        partial void OnCountyChanging(string value);
        partial void OnCountyChanged();
        partial void OnLocalityChanging(string value);
        partial void OnLocalityChanged();
        partial void OnDblLongitudeChanging(System.Nullable<decimal> value);
        partial void OnDblLongitudeChanged();
        partial void OnDblLatitudeChanging(System.Nullable<decimal> value);
        partial void OnDblLatitudeChanged();
        #endregion

        public TDarwinCoreV1() {
            OnCreated();
        }

        [Column(Name = "intRecordID", Storage = "_RecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int RecordID {
            get {
                return this._RecordID;
            }
            set {
                if ((this._RecordID != value)) {
                    this.OnRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._RecordID = value;
                    this.SendPropertyChanged("RecordID");
                    this.OnRecordIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL")]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", DbType = "Int NOT NULL")]
        public int MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        [Column(Name = "vchrScientificName", Storage = "_ScientificName", DbType = "VarChar(255)")]
        public string ScientificName {
            get {
                return this._ScientificName;
            }
            set {
                if ((this._ScientificName != value)) {
                    this.OnScientificNameChanging(value);
                    this.SendPropertyChanging();
                    this._ScientificName = value;
                    this.SendPropertyChanged("ScientificName");
                    this.OnScientificNameChanged();
                }
            }
        }

        [Column(Name = "vchrKingdom", Storage = "_Kingdom", DbType = "VarChar(50)")]
        public string Kingdom {
            get {
                return this._Kingdom;
            }
            set {
                if ((this._Kingdom != value)) {
                    this.OnKingdomChanging(value);
                    this.SendPropertyChanging();
                    this._Kingdom = value;
                    this.SendPropertyChanged("Kingdom");
                    this.OnKingdomChanged();
                }
            }
        }

        [Column(Name = "vchrPhylum", Storage = "_Phylum", DbType = "VarChar(255)")]
        public string Phylum {
            get {
                return this._Phylum;
            }
            set {
                if ((this._Phylum != value)) {
                    this.OnPhylumChanging(value);
                    this.SendPropertyChanging();
                    this._Phylum = value;
                    this.SendPropertyChanged("Phylum");
                    this.OnPhylumChanged();
                }
            }
        }

        [Column(Name = "vchrClass", Storage = "_Class", DbType = "VarChar(255)")]
        public string Class {
            get {
                return this._Class;
            }
            set {
                if ((this._Class != value)) {
                    this.OnClassChanging(value);
                    this.SendPropertyChanging();
                    this._Class = value;
                    this.SendPropertyChanged("Class");
                    this.OnClassChanged();
                }
            }
        }

        [Column(Name = "vchrOrder", Storage = "_Order", DbType = "VarChar(255)")]
        public string Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "vchrFamily", Storage = "_Family", DbType = "VarChar(255)")]
        public string Family {
            get {
                return this._Family;
            }
            set {
                if ((this._Family != value)) {
                    this.OnFamilyChanging(value);
                    this.SendPropertyChanging();
                    this._Family = value;
                    this.SendPropertyChanged("Family");
                    this.OnFamilyChanged();
                }
            }
        }

        [Column(Name = "vchrGenus", Storage = "_Genus", DbType = "VarChar(255)")]
        public string Genus {
            get {
                return this._Genus;
            }
            set {
                if ((this._Genus != value)) {
                    this.OnGenusChanging(value);
                    this.SendPropertyChanging();
                    this._Genus = value;
                    this.SendPropertyChanged("Genus");
                    this.OnGenusChanged();
                }
            }
        }

        [Column(Name = "vchrSpecies", Storage = "_Species", DbType = "VarChar(255)")]
        public string Species {
            get {
                return this._Species;
            }
            set {
                if ((this._Species != value)) {
                    this.OnSpeciesChanging(value);
                    this.SendPropertyChanging();
                    this._Species = value;
                    this.SendPropertyChanged("Species");
                    this.OnSpeciesChanged();
                }
            }
        }

        [Column(Name = "vchrSubspecies", Storage = "_Subspecies", DbType = "VarChar(255)")]
        public string Subspecies {
            get {
                return this._Subspecies;
            }
            set {
                if ((this._Subspecies != value)) {
                    this.OnSubspeciesChanging(value);
                    this.SendPropertyChanging();
                    this._Subspecies = value;
                    this.SendPropertyChanged("Subspecies");
                    this.OnSubspeciesChanged();
                }
            }
        }

        [Column(Name = "vchrInstitutionCode", Storage = "_InstitutionCode", DbType = "VarChar(50)")]
        public string InstitutionCode {
            get {
                return this._InstitutionCode;
            }
            set {
                if ((this._InstitutionCode != value)) {
                    this.OnInstitutionCodeChanging(value);
                    this.SendPropertyChanging();
                    this._InstitutionCode = value;
                    this.SendPropertyChanged("InstitutionCode");
                    this.OnInstitutionCodeChanged();
                }
            }
        }

        [Column(Name = "vchrCollectionCode", Storage = "_CollectionCode", DbType = "VarChar(50)")]
        public string CollectionCode {
            get {
                return this._CollectionCode;
            }
            set {
                if ((this._CollectionCode != value)) {
                    this.OnCollectionCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CollectionCode = value;
                    this.SendPropertyChanged("CollectionCode");
                    this.OnCollectionCodeChanged();
                }
            }
        }

        [Column(Name = "vchrCatalogNumber", Storage = "_CatalogNumber", DbType = "VarChar(50)")]
        public string CatalogNumber {
            get {
                return this._CatalogNumber;
            }
            set {
                if ((this._CatalogNumber != value)) {
                    this.OnCatalogNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CatalogNumber = value;
                    this.SendPropertyChanged("CatalogNumber");
                    this.OnCatalogNumberChanged();
                }
            }
        }

        [Column(Name = "vchrCollector", Storage = "_Collector", DbType = "VarChar(255)")]
        public string Collector {
            get {
                return this._Collector;
            }
            set {
                if ((this._Collector != value)) {
                    this.OnCollectorChanging(value);
                    this.SendPropertyChanging();
                    this._Collector = value;
                    this.SendPropertyChanged("Collector");
                    this.OnCollectorChanged();
                }
            }
        }

        [Column(Name = "intYear", Storage = "_Year", DbType = "Int")]
        public System.Nullable<int> Year {
            get {
                return this._Year;
            }
            set {
                if ((this._Year != value)) {
                    this.OnYearChanging(value);
                    this.SendPropertyChanging();
                    this._Year = value;
                    this.SendPropertyChanged("Year");
                    this.OnYearChanged();
                }
            }
        }

        [Column(Name = "intMonth", Storage = "_Month", DbType = "Int")]
        public System.Nullable<int> Month {
            get {
                return this._Month;
            }
            set {
                if ((this._Month != value)) {
                    this.OnMonthChanging(value);
                    this.SendPropertyChanging();
                    this._Month = value;
                    this.SendPropertyChanged("Month");
                    this.OnMonthChanged();
                }
            }
        }

        [Column(Name = "intDay", Storage = "_Day", DbType = "Int")]
        public System.Nullable<int> Day {
            get {
                return this._Day;
            }
            set {
                if ((this._Day != value)) {
                    this.OnDayChanging(value);
                    this.SendPropertyChanging();
                    this._Day = value;
                    this.SendPropertyChanged("Day");
                    this.OnDayChanged();
                }
            }
        }

        [Column(Name = "vchrCountry", Storage = "_Country", DbType = "VarChar(255)")]
        public string Country {
            get {
                return this._Country;
            }
            set {
                if ((this._Country != value)) {
                    this.OnCountryChanging(value);
                    this.SendPropertyChanging();
                    this._Country = value;
                    this.SendPropertyChanged("Country");
                    this.OnCountryChanged();
                }
            }
        }

        [Column(Name = "vchrState", Storage = "_State", DbType = "VarChar(255)")]
        public string State {
            get {
                return this._State;
            }
            set {
                if ((this._State != value)) {
                    this.OnStateChanging(value);
                    this.SendPropertyChanging();
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }

        [Column(Name = "vchrCounty", Storage = "_County", DbType = "VarChar(255)")]
        public string County {
            get {
                return this._County;
            }
            set {
                if ((this._County != value)) {
                    this.OnCountyChanging(value);
                    this.SendPropertyChanging();
                    this._County = value;
                    this.SendPropertyChanged("County");
                    this.OnCountyChanged();
                }
            }
        }

        [Column(Name = "vchrLocality", Storage = "_Locality", DbType = "VarChar(512)")]
        public string Locality {
            get {
                return this._Locality;
            }
            set {
                if ((this._Locality != value)) {
                    this.OnLocalityChanging(value);
                    this.SendPropertyChanging();
                    this._Locality = value;
                    this.SendPropertyChanged("Locality");
                    this.OnLocalityChanged();
                }
            }
        }

        [Column(Name = "dblLongitude", Storage = "_DblLongitude", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> DblLongitude {
            get {
                return this._DblLongitude;
            }
            set {
                if ((this._DblLongitude != value)) {
                    this.OnDblLongitudeChanging(value);
                    this.SendPropertyChanging();
                    this._DblLongitude = value;
                    this.SendPropertyChanged("DblLongitude");
                    this.OnDblLongitudeChanged();
                }
            }
        }

        [Column(Name = "dblLatitude", Storage = "_DblLatitude", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> DblLatitude {
            get {
                return this._DblLatitude;
            }
            set {
                if ((this._DblLatitude != value)) {
                    this.OnDblLatitudeChanging(value);
                    this.SendPropertyChanging();
                    this._DblLatitude = value;
                    this.SendPropertyChanged("DblLatitude");
                    this.OnDblLatitudeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblDichotomousKeyItem")]
    public partial class TDichotomousKeyItem : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _DKItemID;

        private int _MorphologyProjectID;

        private int _ParentDKItemID;

        private string _ChrType;

        private System.Nullable<int> _BiotaID;

        private string _Description;

        private System.Nullable<int> _ImageID;

        private System.Nullable<int> _Order;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _HistoryDesc;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnDKItemIDChanging(int value);
        partial void OnDKItemIDChanged();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnParentDKItemIDChanging(int value);
        partial void OnParentDKItemIDChanged();
        partial void OnChrTypeChanging(string value);
        partial void OnChrTypeChanged();
        partial void OnBiotaIDChanging(System.Nullable<int> value);
        partial void OnBiotaIDChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnImageIDChanging(System.Nullable<int> value);
        partial void OnImageIDChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnHistoryDescChanging(string value);
        partial void OnHistoryDescChanged();
        #endregion

        public TDichotomousKeyItem() {
            OnCreated();
        }

        [Column(Name = "intDKItemID", Storage = "_DKItemID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int DKItemID {
            get {
                return this._DKItemID;
            }
            set {
                if ((this._DKItemID != value)) {
                    this.OnDKItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._DKItemID = value;
                    this.SendPropertyChanged("DKItemID");
                    this.OnDKItemIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int NOT NULL")]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "intParentDKItemID", Storage = "_ParentDKItemID", DbType = "Int NOT NULL")]
        public int ParentDKItemID {
            get {
                return this._ParentDKItemID;
            }
            set {
                if ((this._ParentDKItemID != value)) {
                    this.OnParentDKItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentDKItemID = value;
                    this.SendPropertyChanged("ParentDKItemID");
                    this.OnParentDKItemIDChanged();
                }
            }
        }

        [Column(Name = "chrType", Storage = "_ChrType", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string ChrType {
            get {
                return this._ChrType;
            }
            set {
                if ((this._ChrType != value)) {
                    this.OnChrTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrType = value;
                    this.SendPropertyChanged("ChrType");
                    this.OnChrTypeChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int")]
        public System.Nullable<int> BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "VarChar(1000)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "intImageID", Storage = "_ImageID", DbType = "Int")]
        public System.Nullable<int> ImageID {
            get {
                return this._ImageID;
            }
            set {
                if ((this._ImageID != value)) {
                    this.OnImageIDChanging(value);
                    this.SendPropertyChanging();
                    this._ImageID = value;
                    this.SendPropertyChanged("ImageID");
                    this.OnImageIDChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrHistoryDesc", Storage = "_HistoryDesc", DbType = "VarChar(1000)")]
        public string HistoryDesc {
            get {
                return this._HistoryDesc;
            }
            set {
                if ((this._HistoryDesc != value)) {
                    this.OnHistoryDescChanging(value);
                    this.SendPropertyChanging();
                    this._HistoryDesc = value;
                    this.SendPropertyChanged("HistoryDesc");
                    this.OnHistoryDescChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblDistributionRegion")]
    public partial class TDistributionRegion : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _DistributionRegionID;

        private string _Name;

        private System.Nullable<int> _ParentID;

        private string _Parentage;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnDistributionRegionIDChanging(int value);
        partial void OnDistributionRegionIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnParentIDChanging(System.Nullable<int> value);
        partial void OnParentIDChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TDistributionRegion() {
            OnCreated();
        }

        [Column(Name = "intDistributionRegionID", Storage = "_DistributionRegionID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int DistributionRegionID {
            get {
                return this._DistributionRegionID;
            }
            set {
                if ((this._DistributionRegionID != value)) {
                    this.OnDistributionRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._DistributionRegionID = value;
                    this.SendPropertyChanged("DistributionRegionID");
                    this.OnDistributionRegionIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblFavorite")]
    public partial class TFavorite : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _FavoriteID;

        private string _Username;

        private int _Source;

        private System.Nullable<int> _ParentID;

        private System.Nullable<byte> _TintGroup;

        private string _GroupName;

        private System.Nullable<int> _ID1;

        private string _ID2;

        private string _Parentage;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFavoriteIDChanging(int value);
        partial void OnFavoriteIDChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnSourceChanging(int value);
        partial void OnSourceChanged();
        partial void OnParentIDChanging(System.Nullable<int> value);
        partial void OnParentIDChanged();
        partial void OnTintGroupChanging(System.Nullable<byte> value);
        partial void OnTintGroupChanged();
        partial void OnGroupNameChanging(string value);
        partial void OnGroupNameChanged();
        partial void OnID1Changing(System.Nullable<int> value);
        partial void OnID1Changed();
        partial void OnID2Changing(string value);
        partial void OnID2Changed();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TFavorite() {
            OnCreated();
        }

        [Column(Name = "intFavoriteID", Storage = "_FavoriteID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int FavoriteID {
            get {
                return this._FavoriteID;
            }
            set {
                if ((this._FavoriteID != value)) {
                    this.OnFavoriteIDChanging(value);
                    this.SendPropertyChanging();
                    this._FavoriteID = value;
                    this.SendPropertyChanged("FavoriteID");
                    this.OnFavoriteIDChanged();
                }
            }
        }

        [Column(Name = "vchrUsername", Storage = "_Username", DbType = "VarChar(50)")]
        public string Username {
            get {
                return this._Username;
            }
            set {
                if ((this._Username != value)) {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging();
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

        [Column(Name = "intSource", Storage = "_Source", DbType = "Int NOT NULL")]
        public int Source {
            get {
                return this._Source;
            }
            set {
                if ((this._Source != value)) {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "tintGroup", Storage = "_TintGroup", DbType = "TinyInt")]
        public System.Nullable<byte> TintGroup {
            get {
                return this._TintGroup;
            }
            set {
                if ((this._TintGroup != value)) {
                    this.OnTintGroupChanging(value);
                    this.SendPropertyChanging();
                    this._TintGroup = value;
                    this.SendPropertyChanged("TintGroup");
                    this.OnTintGroupChanged();
                }
            }
        }

        [Column(Name = "vchrGroupName", Storage = "_GroupName", DbType = "VarChar(255)")]
        public string GroupName {
            get {
                return this._GroupName;
            }
            set {
                if ((this._GroupName != value)) {
                    this.OnGroupNameChanging(value);
                    this.SendPropertyChanging();
                    this._GroupName = value;
                    this.SendPropertyChanged("GroupName");
                    this.OnGroupNameChanged();
                }
            }
        }

        [Column(Name = "intID1", Storage = "_ID1", DbType = "Int")]
        public System.Nullable<int> ID1 {
            get {
                return this._ID1;
            }
            set {
                if ((this._ID1 != value)) {
                    this.OnID1Changing(value);
                    this.SendPropertyChanging();
                    this._ID1 = value;
                    this.SendPropertyChanged("ID1");
                    this.OnID1Changed();
                }
            }
        }

        [Column(Name = "vchrID2", Storage = "_ID2", DbType = "VarChar(255)")]
        public string ID2 {
            get {
                return this._ID2;
            }
            set {
                if ((this._ID2 != value)) {
                    this.OnID2Changing(value);
                    this.SendPropertyChanging();
                    this._ID2 = value;
                    this.SendPropertyChanged("ID2");
                    this.OnID2Changed();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblGAN")]
    public partial class TGAN : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaID;

        private System.Nullable<int> _RefID;

        private string _RefPage;

        private string _RefQual;

        private System.Nullable<short> _SintDesignation;

        private string _TSFixationMethod;

        private System.Nullable<System.Guid> _GUID;

        private string _TypeSpecies;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnRefIDChanging(System.Nullable<int> value);
        partial void OnRefIDChanged();
        partial void OnRefPageChanging(string value);
        partial void OnRefPageChanged();
        partial void OnRefQualChanging(string value);
        partial void OnRefQualChanged();
        partial void OnSintDesignationChanging(System.Nullable<short> value);
        partial void OnSintDesignationChanged();
        partial void OnTSFixationMethodChanging(string value);
        partial void OnTSFixationMethodChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnTypeSpeciesChanging(string value);
        partial void OnTypeSpeciesChanged();
        #endregion

        public TGAN() {
            OnCreated();
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_RefPage", DbType = "VarChar(50)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this.OnRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._RefPage = value;
                    this.SendPropertyChanged("RefPage");
                    this.OnRefPageChanged();
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_RefQual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string RefQual {
            get {
                return this._RefQual;
            }
            set {
                if ((this._RefQual != value)) {
                    this.OnRefQualChanging(value);
                    this.SendPropertyChanging();
                    this._RefQual = value;
                    this.SendPropertyChanged("RefQual");
                    this.OnRefQualChanged();
                }
            }
        }

        [Column(Name = "sintDesignation", Storage = "_SintDesignation", DbType = "SmallInt")]
        public System.Nullable<short> SintDesignation {
            get {
                return this._SintDesignation;
            }
            set {
                if ((this._SintDesignation != value)) {
                    this.OnSintDesignationChanging(value);
                    this.SendPropertyChanging();
                    this._SintDesignation = value;
                    this.SendPropertyChanged("SintDesignation");
                    this.OnSintDesignationChanged();
                }
            }
        }

        [Column(Name = "vchrTSFixationMethod", Storage = "_TSFixationMethod", DbType = "VarChar(255)")]
        public string TSFixationMethod {
            get {
                return this._TSFixationMethod;
            }
            set {
                if ((this._TSFixationMethod != value)) {
                    this.OnTSFixationMethodChanging(value);
                    this.SendPropertyChanging();
                    this._TSFixationMethod = value;
                    this.SendPropertyChanged("TSFixationMethod");
                    this.OnTSFixationMethodChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrTypeSpecies", Storage = "_TypeSpecies", DbType = "VarChar(500)")]
        public string TypeSpecies {
            get {
                return this._TypeSpecies;
            }
            set {
                if ((this._TypeSpecies != value)) {
                    this.OnTypeSpeciesChanging(value);
                    this.SendPropertyChanging();
                    this._TypeSpecies = value;
                    this.SendPropertyChanged("TypeSpecies");
                    this.OnTypeSpeciesChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblGANIncludedSpecies")]
    public partial class TGANIncludedSpecies : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _GANISID;

        private int _BiotaID;

        private System.Nullable<System.Guid> _GUID;

        private string _IncludedSpecies;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnGANISIDChanging(int value);
        partial void OnGANISIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnIncludedSpeciesChanging(string value);
        partial void OnIncludedSpeciesChanged();
        #endregion

        public TGANIncludedSpecies() {
            OnCreated();
        }

        [Column(Name = "intGANISID", Storage = "_GANISID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int GANISID {
            get {
                return this._GANISID;
            }
            set {
                if ((this._GANISID != value)) {
                    this.OnGANISIDChanging(value);
                    this.SendPropertyChanging();
                    this._GANISID = value;
                    this.SendPropertyChanged("GANISID");
                    this.OnGANISIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL")]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrIncludedSpecies", Storage = "_IncludedSpecies", DbType = "VarChar(255)")]
        public string IncludedSpecies {
            get {
                return this._IncludedSpecies;
            }
            set {
                if ((this._IncludedSpecies != value)) {
                    this.OnIncludedSpeciesChanging(value);
                    this.SendPropertyChanging();
                    this._IncludedSpecies = value;
                    this.SendPropertyChanged("IncludedSpecies");
                    this.OnIncludedSpeciesChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblGroup")]
    public partial class TGroup : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _GroupID;

        private string _Name;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnGroupIDChanging(int value);
        partial void OnGroupIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TGroup() {
            OnCreated();
        }

        [Column(Name = "intGroupID", Storage = "_GroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this.OnGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._GroupID = value;
                    this.SendPropertyChanged("GroupID");
                    this.OnGroupIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblGroupPermission")]
    public partial class TGroupPermission : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _GroupID;

        private int _PermID;

        private int _PermMask1;

        private System.Nullable<int> _PermMask2;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnGroupIDChanging(int value);
        partial void OnGroupIDChanged();
        partial void OnPermIDChanging(int value);
        partial void OnPermIDChanged();
        partial void OnPermMask1Changing(int value);
        partial void OnPermMask1Changed();
        partial void OnPermMask2Changing(System.Nullable<int> value);
        partial void OnPermMask2Changed();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TGroupPermission() {
            OnCreated();
        }

        [Column(Name = "intGroupID", Storage = "_GroupID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this.OnGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._GroupID = value;
                    this.SendPropertyChanged("GroupID");
                    this.OnGroupIDChanged();
                }
            }
        }

        [Column(Name = "intPermID", Storage = "_PermID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int PermID {
            get {
                return this._PermID;
            }
            set {
                if ((this._PermID != value)) {
                    this.OnPermIDChanging(value);
                    this.SendPropertyChanging();
                    this._PermID = value;
                    this.SendPropertyChanged("PermID");
                    this.OnPermIDChanged();
                }
            }
        }

        [Column(Name = "intPermMask1", Storage = "_PermMask1", DbType = "Int NOT NULL")]
        public int PermMask1 {
            get {
                return this._PermMask1;
            }
            set {
                if ((this._PermMask1 != value)) {
                    this.OnPermMask1Changing(value);
                    this.SendPropertyChanging();
                    this._PermMask1 = value;
                    this.SendPropertyChanged("PermMask1");
                    this.OnPermMask1Changed();
                }
            }
        }

        [Column(Name = "intPermMask2", Storage = "_PermMask2", DbType = "Int")]
        public System.Nullable<int> PermMask2 {
            get {
                return this._PermMask2;
            }
            set {
                if ((this._PermMask2 != value)) {
                    this.OnPermMask2Changing(value);
                    this.SendPropertyChanging();
                    this._PermMask2 = value;
                    this.SendPropertyChanged("PermMask2");
                    this.OnPermMask2Changed();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblJournal")]
    public partial class TJournal : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _JournalID;

        private string _AbbrevName;

        private string _AbbrevName2;

        private string _Alias;

        private string _FullName;

        private string _Notes;

        private System.Nullable<System.Guid> _GUID;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnJournalIDChanging(int value);
        partial void OnJournalIDChanged();
        partial void OnAbbrevNameChanging(string value);
        partial void OnAbbrevNameChanged();
        partial void OnAbbrevName2Changing(string value);
        partial void OnAbbrevName2Changed();
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        #endregion

        public TJournal() {
            OnCreated();
        }

        [Column(Name = "intJournalID", Storage = "_JournalID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int JournalID {
            get {
                return this._JournalID;
            }
            set {
                if ((this._JournalID != value)) {
                    this.OnJournalIDChanging(value);
                    this.SendPropertyChanging();
                    this._JournalID = value;
                    this.SendPropertyChanged("JournalID");
                    this.OnJournalIDChanged();
                }
            }
        }

        [Column(Name = "vchrAbbrevName", Storage = "_AbbrevName", DbType = "VarChar(100)")]
        public string AbbrevName {
            get {
                return this._AbbrevName;
            }
            set {
                if ((this._AbbrevName != value)) {
                    this.OnAbbrevNameChanging(value);
                    this.SendPropertyChanging();
                    this._AbbrevName = value;
                    this.SendPropertyChanged("AbbrevName");
                    this.OnAbbrevNameChanged();
                }
            }
        }

        [Column(Name = "vchrAbbrevName2", Storage = "_AbbrevName2", DbType = "VarChar(100)")]
        public string AbbrevName2 {
            get {
                return this._AbbrevName2;
            }
            set {
                if ((this._AbbrevName2 != value)) {
                    this.OnAbbrevName2Changing(value);
                    this.SendPropertyChanging();
                    this._AbbrevName2 = value;
                    this.SendPropertyChanged("AbbrevName2");
                    this.OnAbbrevName2Changed();
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_Alias", DbType = "VarChar(100)")]
        public string Alias {
            get {
                return this._Alias;
            }
            set {
                if ((this._Alias != value)) {
                    this.OnAliasChanging(value);
                    this.SendPropertyChanging();
                    this._Alias = value;
                    this.SendPropertyChanged("Alias");
                    this.OnAliasChanged();
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_FullName", DbType = "VarChar(900)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this.OnFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._FullName = value;
                    this.SendPropertyChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_Notes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblKeyword")]
    public partial class TKeyword : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _KeywordID;

        private int _KeywordTypeID;

        private int _CatID;

        private int _IntraCatID;

        private string _Value;

        private string _ValueQual;

        private System.Nullable<bool> _UseInReport;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnKeywordIDChanging(int value);
        partial void OnKeywordIDChanged();
        partial void OnKeywordTypeIDChanging(int value);
        partial void OnKeywordTypeIDChanged();
        partial void OnCatIDChanging(int value);
        partial void OnCatIDChanged();
        partial void OnIntraCatIDChanging(int value);
        partial void OnIntraCatIDChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnValueQualChanging(string value);
        partial void OnValueQualChanged();
        partial void OnUseInReportChanging(System.Nullable<bool> value);
        partial void OnUseInReportChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TKeyword() {
            OnCreated();
        }

        [Column(Name = "intKeywordID", Storage = "_KeywordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int KeywordID {
            get {
                return this._KeywordID;
            }
            set {
                if ((this._KeywordID != value)) {
                    this.OnKeywordIDChanging(value);
                    this.SendPropertyChanging();
                    this._KeywordID = value;
                    this.SendPropertyChanged("KeywordID");
                    this.OnKeywordIDChanged();
                }
            }
        }

        [Column(Name = "intKeywordTypeID", Storage = "_KeywordTypeID", DbType = "Int NOT NULL")]
        public int KeywordTypeID {
            get {
                return this._KeywordTypeID;
            }
            set {
                if ((this._KeywordTypeID != value)) {
                    this.OnKeywordTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._KeywordTypeID = value;
                    this.SendPropertyChanged("KeywordTypeID");
                    this.OnKeywordTypeIDChanged();
                }
            }
        }

        [Column(Name = "intCatID", Storage = "_CatID", DbType = "Int NOT NULL")]
        public int CatID {
            get {
                return this._CatID;
            }
            set {
                if ((this._CatID != value)) {
                    this.OnCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._CatID = value;
                    this.SendPropertyChanged("CatID");
                    this.OnCatIDChanged();
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntraCatID", DbType = "Int NOT NULL")]
        public int IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this.OnIntraCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._IntraCatID = value;
                    this.SendPropertyChanged("IntraCatID");
                    this.OnIntraCatIDChanged();
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_Value", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [Column(Name = "txtValueQual", Storage = "_ValueQual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string ValueQual {
            get {
                return this._ValueQual;
            }
            set {
                if ((this._ValueQual != value)) {
                    this.OnValueQualChanging(value);
                    this.SendPropertyChanging();
                    this._ValueQual = value;
                    this.SendPropertyChanged("ValueQual");
                    this.OnValueQualChanged();
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_UseInReport", DbType = "Bit")]
        public System.Nullable<bool> UseInReport {
            get {
                return this._UseInReport;
            }
            set {
                if ((this._UseInReport != value)) {
                    this.OnUseInReportChanging(value);
                    this.SendPropertyChanging();
                    this._UseInReport = value;
                    this.SendPropertyChanged("UseInReport");
                    this.OnUseInReportChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblKeywordType")]
    public partial class TKeywordType : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _KeywordTypeID;

        private string _KeywordType;

        private System.Nullable<int> _CategoryID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnKeywordTypeIDChanging(int value);
        partial void OnKeywordTypeIDChanged();
        partial void OnKeywordTypeChanging(string value);
        partial void OnKeywordTypeChanged();
        partial void OnCategoryIDChanging(System.Nullable<int> value);
        partial void OnCategoryIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TKeywordType() {
            OnCreated();
        }

        [Column(Name = "intKeywordTypeID", Storage = "_KeywordTypeID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int KeywordTypeID {
            get {
                return this._KeywordTypeID;
            }
            set {
                if ((this._KeywordTypeID != value)) {
                    this.OnKeywordTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._KeywordTypeID = value;
                    this.SendPropertyChanged("KeywordTypeID");
                    this.OnKeywordTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrKeywordType", Storage = "_KeywordType", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string KeywordType {
            get {
                return this._KeywordType;
            }
            set {
                if ((this._KeywordType != value)) {
                    this.OnKeywordTypeChanging(value);
                    this.SendPropertyChanging();
                    this._KeywordType = value;
                    this.SendPropertyChanged("KeywordType");
                    this.OnKeywordTypeChanged();
                }
            }
        }

        [Column(Name = "intCategoryID", Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblLabelSet")]
    public partial class TLabelSet : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _LabelSetID;

        private string _Username;

        private string _LabelSetName;

        private System.Nullable<System.Guid> _GUID;

        private string _DelimitedFields;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLabelSetIDChanging(int value);
        partial void OnLabelSetIDChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnLabelSetNameChanging(string value);
        partial void OnLabelSetNameChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDelimitedFieldsChanging(string value);
        partial void OnDelimitedFieldsChanged();
        #endregion

        public TLabelSet() {
            OnCreated();
        }

        [Column(Name = "intLabelSetID", Storage = "_LabelSetID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int LabelSetID {
            get {
                return this._LabelSetID;
            }
            set {
                if ((this._LabelSetID != value)) {
                    this.OnLabelSetIDChanging(value);
                    this.SendPropertyChanging();
                    this._LabelSetID = value;
                    this.SendPropertyChanged("LabelSetID");
                    this.OnLabelSetIDChanged();
                }
            }
        }

        [Column(Name = "vchrUsername", Storage = "_Username", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Username {
            get {
                return this._Username;
            }
            set {
                if ((this._Username != value)) {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging();
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

        [Column(Name = "vchrLabelSetName", Storage = "_LabelSetName", DbType = "VarChar(200) NOT NULL", CanBeNull = false)]
        public string LabelSetName {
            get {
                return this._LabelSetName;
            }
            set {
                if ((this._LabelSetName != value)) {
                    this.OnLabelSetNameChanging(value);
                    this.SendPropertyChanging();
                    this._LabelSetName = value;
                    this.SendPropertyChanged("LabelSetName");
                    this.OnLabelSetNameChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "txtDelimitedFields", Storage = "_DelimitedFields", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string DelimitedFields {
            get {
                return this._DelimitedFields;
            }
            set {
                if ((this._DelimitedFields != value)) {
                    this.OnDelimitedFieldsChanging(value);
                    this.SendPropertyChanging();
                    this._DelimitedFields = value;
                    this.SendPropertyChanged("DelimitedFields");
                    this.OnDelimitedFieldsChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblLabelSetItem")]
    public partial class TLabelSetItem : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _LabelItemID;

        private int _LabelSetID;

        private int _ItemID;

        private string _ItemType;

        private System.Nullable<int> _PrintOrder;

        private System.Nullable<System.Guid> _GUID;

        private int _NumCopies;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLabelItemIDChanging(int value);
        partial void OnLabelItemIDChanged();
        partial void OnLabelSetIDChanging(int value);
        partial void OnLabelSetIDChanged();
        partial void OnItemIDChanging(int value);
        partial void OnItemIDChanged();
        partial void OnItemTypeChanging(string value);
        partial void OnItemTypeChanged();
        partial void OnPrintOrderChanging(System.Nullable<int> value);
        partial void OnPrintOrderChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnNumCopiesChanging(int value);
        partial void OnNumCopiesChanged();
        #endregion

        public TLabelSetItem() {
            OnCreated();
        }

        [Column(Name = "intLabelItemID", Storage = "_LabelItemID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int LabelItemID {
            get {
                return this._LabelItemID;
            }
            set {
                if ((this._LabelItemID != value)) {
                    this.OnLabelItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._LabelItemID = value;
                    this.SendPropertyChanged("LabelItemID");
                    this.OnLabelItemIDChanged();
                }
            }
        }

        [Column(Name = "intLabelSetID", Storage = "_LabelSetID", DbType = "Int NOT NULL")]
        public int LabelSetID {
            get {
                return this._LabelSetID;
            }
            set {
                if ((this._LabelSetID != value)) {
                    this.OnLabelSetIDChanging(value);
                    this.SendPropertyChanging();
                    this._LabelSetID = value;
                    this.SendPropertyChanged("LabelSetID");
                    this.OnLabelSetIDChanged();
                }
            }
        }

        [Column(Name = "intItemID", Storage = "_ItemID", DbType = "Int NOT NULL")]
        public int ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this.OnItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._ItemID = value;
                    this.SendPropertyChanged("ItemID");
                    this.OnItemIDChanged();
                }
            }
        }

        [Column(Name = "vchrItemType", Storage = "_ItemType", DbType = "VarChar(15)")]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this.OnItemTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ItemType = value;
                    this.SendPropertyChanged("ItemType");
                    this.OnItemTypeChanged();
                }
            }
        }

        [Column(Name = "intPrintOrder", Storage = "_PrintOrder", DbType = "Int")]
        public System.Nullable<int> PrintOrder {
            get {
                return this._PrintOrder;
            }
            set {
                if ((this._PrintOrder != value)) {
                    this.OnPrintOrderChanging(value);
                    this.SendPropertyChanging();
                    this._PrintOrder = value;
                    this.SendPropertyChanged("PrintOrder");
                    this.OnPrintOrderChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intNumCopies", Storage = "_NumCopies", DbType = "Int NOT NULL")]
        public int NumCopies {
            get {
                return this._NumCopies;
            }
            set {
                if ((this._NumCopies != value)) {
                    this.OnNumCopiesChanging(value);
                    this.SendPropertyChanging();
                    this._NumCopies = value;
                    this.SendPropertyChanged("NumCopies");
                    this.OnNumCopiesChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblLoan")]
    public partial class TLoan : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _LoanID;

        private string _LoanNumber;

        private System.Nullable<int> _RequestorID;

        private System.Nullable<int> _ReceiverID;

        private System.Nullable<int> _OriginatorID;

        private System.Nullable<System.DateTime> _DateInitiated;

        private System.Nullable<System.DateTime> _DateDue;

        private string _MethodOfTransfer;

        private string _PermitNumber;

        private string _TypeOfReturn;

        private string _Restrictions;

        private System.Nullable<System.DateTime> _DateClosed;

        private bool _LoanClosed;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoanIDChanging(int value);
        partial void OnLoanIDChanged();
        partial void OnLoanNumberChanging(string value);
        partial void OnLoanNumberChanged();
        partial void OnRequestorIDChanging(System.Nullable<int> value);
        partial void OnRequestorIDChanged();
        partial void OnReceiverIDChanging(System.Nullable<int> value);
        partial void OnReceiverIDChanged();
        partial void OnOriginatorIDChanging(System.Nullable<int> value);
        partial void OnOriginatorIDChanged();
        partial void OnDateInitiatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateInitiatedChanged();
        partial void OnDateDueChanging(System.Nullable<System.DateTime> value);
        partial void OnDateDueChanged();
        partial void OnMethodOfTransferChanging(string value);
        partial void OnMethodOfTransferChanged();
        partial void OnPermitNumberChanging(string value);
        partial void OnPermitNumberChanged();
        partial void OnTypeOfReturnChanging(string value);
        partial void OnTypeOfReturnChanged();
        partial void OnRestrictionsChanging(string value);
        partial void OnRestrictionsChanged();
        partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateClosedChanged();
        partial void OnLoanClosedChanging(bool value);
        partial void OnLoanClosedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TLoan() {
            OnCreated();
        }

        [Column(Name = "intLoanID", Storage = "_LoanID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int LoanID {
            get {
                return this._LoanID;
            }
            set {
                if ((this._LoanID != value)) {
                    this.OnLoanIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanID = value;
                    this.SendPropertyChanged("LoanID");
                    this.OnLoanIDChanged();
                }
            }
        }

        [Column(Name = "vchrLoanNumber", Storage = "_LoanNumber", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string LoanNumber {
            get {
                return this._LoanNumber;
            }
            set {
                if ((this._LoanNumber != value)) {
                    this.OnLoanNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LoanNumber = value;
                    this.SendPropertyChanged("LoanNumber");
                    this.OnLoanNumberChanged();
                }
            }
        }

        [Column(Name = "intRequestorID", Storage = "_RequestorID", DbType = "Int")]
        public System.Nullable<int> RequestorID {
            get {
                return this._RequestorID;
            }
            set {
                if ((this._RequestorID != value)) {
                    this.OnRequestorIDChanging(value);
                    this.SendPropertyChanging();
                    this._RequestorID = value;
                    this.SendPropertyChanged("RequestorID");
                    this.OnRequestorIDChanged();
                }
            }
        }

        [Column(Name = "intReceiverID", Storage = "_ReceiverID", DbType = "Int")]
        public System.Nullable<int> ReceiverID {
            get {
                return this._ReceiverID;
            }
            set {
                if ((this._ReceiverID != value)) {
                    this.OnReceiverIDChanging(value);
                    this.SendPropertyChanging();
                    this._ReceiverID = value;
                    this.SendPropertyChanged("ReceiverID");
                    this.OnReceiverIDChanged();
                }
            }
        }

        [Column(Name = "intOriginatorID", Storage = "_OriginatorID", DbType = "Int")]
        public System.Nullable<int> OriginatorID {
            get {
                return this._OriginatorID;
            }
            set {
                if ((this._OriginatorID != value)) {
                    this.OnOriginatorIDChanging(value);
                    this.SendPropertyChanging();
                    this._OriginatorID = value;
                    this.SendPropertyChanged("OriginatorID");
                    this.OnOriginatorIDChanged();
                }
            }
        }

        [Column(Name = "dtDateInitiated", Storage = "_DateInitiated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateInitiated {
            get {
                return this._DateInitiated;
            }
            set {
                if ((this._DateInitiated != value)) {
                    this.OnDateInitiatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateInitiated = value;
                    this.SendPropertyChanged("DateInitiated");
                    this.OnDateInitiatedChanged();
                }
            }
        }

        [Column(Name = "dtDateDue", Storage = "_DateDue", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateDue {
            get {
                return this._DateDue;
            }
            set {
                if ((this._DateDue != value)) {
                    this.OnDateDueChanging(value);
                    this.SendPropertyChanging();
                    this._DateDue = value;
                    this.SendPropertyChanged("DateDue");
                    this.OnDateDueChanged();
                }
            }
        }

        [Column(Name = "vchrMethodOfTransfer", Storage = "_MethodOfTransfer", DbType = "VarChar(255)")]
        public string MethodOfTransfer {
            get {
                return this._MethodOfTransfer;
            }
            set {
                if ((this._MethodOfTransfer != value)) {
                    this.OnMethodOfTransferChanging(value);
                    this.SendPropertyChanging();
                    this._MethodOfTransfer = value;
                    this.SendPropertyChanged("MethodOfTransfer");
                    this.OnMethodOfTransferChanged();
                }
            }
        }

        [Column(Name = "vchrPermitNumber", Storage = "_PermitNumber", DbType = "VarChar(50)")]
        public string PermitNumber {
            get {
                return this._PermitNumber;
            }
            set {
                if ((this._PermitNumber != value)) {
                    this.OnPermitNumberChanging(value);
                    this.SendPropertyChanging();
                    this._PermitNumber = value;
                    this.SendPropertyChanged("PermitNumber");
                    this.OnPermitNumberChanged();
                }
            }
        }

        [Column(Name = "vchrTypeOfReturn", Storage = "_TypeOfReturn", DbType = "VarChar(50)")]
        public string TypeOfReturn {
            get {
                return this._TypeOfReturn;
            }
            set {
                if ((this._TypeOfReturn != value)) {
                    this.OnTypeOfReturnChanging(value);
                    this.SendPropertyChanging();
                    this._TypeOfReturn = value;
                    this.SendPropertyChanged("TypeOfReturn");
                    this.OnTypeOfReturnChanged();
                }
            }
        }

        [Column(Name = "vchrRestrictions", Storage = "_Restrictions", DbType = "VarChar(255)")]
        public string Restrictions {
            get {
                return this._Restrictions;
            }
            set {
                if ((this._Restrictions != value)) {
                    this.OnRestrictionsChanging(value);
                    this.SendPropertyChanging();
                    this._Restrictions = value;
                    this.SendPropertyChanged("Restrictions");
                    this.OnRestrictionsChanged();
                }
            }
        }

        [Column(Name = "dtDateClosed", Storage = "_DateClosed", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateClosed {
            get {
                return this._DateClosed;
            }
            set {
                if ((this._DateClosed != value)) {
                    this.OnDateClosedChanging(value);
                    this.SendPropertyChanging();
                    this._DateClosed = value;
                    this.SendPropertyChanged("DateClosed");
                    this.OnDateClosedChanged();
                }
            }
        }

        [Column(Name = "bitLoanClosed", Storage = "_LoanClosed", DbType = "Bit NOT NULL")]
        public bool LoanClosed {
            get {
                return this._LoanClosed;
            }
            set {
                if ((this._LoanClosed != value)) {
                    this.OnLoanClosedChanging(value);
                    this.SendPropertyChanging();
                    this._LoanClosed = value;
                    this.SendPropertyChanged("LoanClosed");
                    this.OnLoanClosedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblLoanCorrespondence")]
    public partial class TLoanCorrespondence : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _LoanCorrespondenceID;

        private int _LoanID;

        private string _Type;

        private System.Nullable<System.DateTime> _Date;

        private System.Nullable<int> _SenderID;

        private System.Nullable<int> _RecipientID;

        private string _Description;

        private string _RefNo;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoanCorrespondenceIDChanging(int value);
        partial void OnLoanCorrespondenceIDChanged();
        partial void OnLoanIDChanging(int value);
        partial void OnLoanIDChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnDateChanging(System.Nullable<System.DateTime> value);
        partial void OnDateChanged();
        partial void OnSenderIDChanging(System.Nullable<int> value);
        partial void OnSenderIDChanged();
        partial void OnRecipientIDChanging(System.Nullable<int> value);
        partial void OnRecipientIDChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnRefNoChanging(string value);
        partial void OnRefNoChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TLoanCorrespondence() {
            OnCreated();
        }

        [Column(Name = "intLoanCorrespondenceID", Storage = "_LoanCorrespondenceID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int LoanCorrespondenceID {
            get {
                return this._LoanCorrespondenceID;
            }
            set {
                if ((this._LoanCorrespondenceID != value)) {
                    this.OnLoanCorrespondenceIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanCorrespondenceID = value;
                    this.SendPropertyChanged("LoanCorrespondenceID");
                    this.OnLoanCorrespondenceIDChanged();
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_LoanID", DbType = "Int NOT NULL")]
        public int LoanID {
            get {
                return this._LoanID;
            }
            set {
                if ((this._LoanID != value)) {
                    this.OnLoanIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanID = value;
                    this.SendPropertyChanged("LoanID");
                    this.OnLoanIDChanged();
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_Type", DbType = "VarChar(50)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [Column(Name = "dtDate", Storage = "_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Date {
            get {
                return this._Date;
            }
            set {
                if ((this._Date != value)) {
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [Column(Name = "intSenderID", Storage = "_SenderID", DbType = "Int")]
        public System.Nullable<int> SenderID {
            get {
                return this._SenderID;
            }
            set {
                if ((this._SenderID != value)) {
                    this.OnSenderIDChanging(value);
                    this.SendPropertyChanging();
                    this._SenderID = value;
                    this.SendPropertyChanged("SenderID");
                    this.OnSenderIDChanged();
                }
            }
        }

        [Column(Name = "intRecipientID", Storage = "_RecipientID", DbType = "Int")]
        public System.Nullable<int> RecipientID {
            get {
                return this._RecipientID;
            }
            set {
                if ((this._RecipientID != value)) {
                    this.OnRecipientIDChanging(value);
                    this.SendPropertyChanging();
                    this._RecipientID = value;
                    this.SendPropertyChanged("RecipientID");
                    this.OnRecipientIDChanged();
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_Description", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "vchrRefNo", Storage = "_RefNo", DbType = "VarChar(50)")]
        public string RefNo {
            get {
                return this._RefNo;
            }
            set {
                if ((this._RefNo != value)) {
                    this.OnRefNoChanging(value);
                    this.SendPropertyChanging();
                    this._RefNo = value;
                    this.SendPropertyChanged("RefNo");
                    this.OnRefNoChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblLoanMaterial")]
    public partial class TLoanMaterial : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _LoanMaterialID;

        private int _LoanID;

        private int _MaterialID;

        private string _NumSpecimens;

        private string _TaxonName;

        private string _MaterialDescription;

        private System.Nullable<System.DateTime> _DateAdded;

        private System.Nullable<System.DateTime> _DateReturned;

        private bool _Returned;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoanMaterialIDChanging(int value);
        partial void OnLoanMaterialIDChanged();
        partial void OnLoanIDChanging(int value);
        partial void OnLoanIDChanged();
        partial void OnMaterialIDChanging(int value);
        partial void OnMaterialIDChanged();
        partial void OnNumSpecimensChanging(string value);
        partial void OnNumSpecimensChanged();
        partial void OnTaxonNameChanging(string value);
        partial void OnTaxonNameChanged();
        partial void OnMaterialDescriptionChanging(string value);
        partial void OnMaterialDescriptionChanged();
        partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateAddedChanged();
        partial void OnDateReturnedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateReturnedChanged();
        partial void OnReturnedChanging(bool value);
        partial void OnReturnedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TLoanMaterial() {
            OnCreated();
        }

        [Column(Name = "intLoanMaterialID", Storage = "_LoanMaterialID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int LoanMaterialID {
            get {
                return this._LoanMaterialID;
            }
            set {
                if ((this._LoanMaterialID != value)) {
                    this.OnLoanMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanMaterialID = value;
                    this.SendPropertyChanged("LoanMaterialID");
                    this.OnLoanMaterialIDChanged();
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_LoanID", DbType = "Int NOT NULL")]
        public int LoanID {
            get {
                return this._LoanID;
            }
            set {
                if ((this._LoanID != value)) {
                    this.OnLoanIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanID = value;
                    this.SendPropertyChanged("LoanID");
                    this.OnLoanIDChanged();
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", DbType = "Int NOT NULL")]
        public int MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        [Column(Name = "vchrNumSpecimens", Storage = "_NumSpecimens", DbType = "VarChar(50)")]
        public string NumSpecimens {
            get {
                return this._NumSpecimens;
            }
            set {
                if ((this._NumSpecimens != value)) {
                    this.OnNumSpecimensChanging(value);
                    this.SendPropertyChanging();
                    this._NumSpecimens = value;
                    this.SendPropertyChanged("NumSpecimens");
                    this.OnNumSpecimensChanged();
                }
            }
        }

        [Column(Name = "vchrTaxonName", Storage = "_TaxonName", DbType = "VarChar(100)")]
        public string TaxonName {
            get {
                return this._TaxonName;
            }
            set {
                if ((this._TaxonName != value)) {
                    this.OnTaxonNameChanging(value);
                    this.SendPropertyChanging();
                    this._TaxonName = value;
                    this.SendPropertyChanged("TaxonName");
                    this.OnTaxonNameChanged();
                }
            }
        }

        [Column(Name = "vchrMaterialDescription", Storage = "_MaterialDescription", DbType = "VarChar(255)")]
        public string MaterialDescription {
            get {
                return this._MaterialDescription;
            }
            set {
                if ((this._MaterialDescription != value)) {
                    this.OnMaterialDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialDescription = value;
                    this.SendPropertyChanged("MaterialDescription");
                    this.OnMaterialDescriptionChanged();
                }
            }
        }

        [Column(Name = "dtDateAdded", Storage = "_DateAdded", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateAdded {
            get {
                return this._DateAdded;
            }
            set {
                if ((this._DateAdded != value)) {
                    this.OnDateAddedChanging(value);
                    this.SendPropertyChanging();
                    this._DateAdded = value;
                    this.SendPropertyChanged("DateAdded");
                    this.OnDateAddedChanged();
                }
            }
        }

        [Column(Name = "dtDateReturned", Storage = "_DateReturned", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateReturned {
            get {
                return this._DateReturned;
            }
            set {
                if ((this._DateReturned != value)) {
                    this.OnDateReturnedChanging(value);
                    this.SendPropertyChanging();
                    this._DateReturned = value;
                    this.SendPropertyChanged("DateReturned");
                    this.OnDateReturnedChanged();
                }
            }
        }

        [Column(Name = "bitReturned", Storage = "_Returned", DbType = "Bit NOT NULL")]
        public bool Returned {
            get {
                return this._Returned;
            }
            set {
                if ((this._Returned != value)) {
                    this.OnReturnedChanging(value);
                    this.SendPropertyChanging();
                    this._Returned = value;
                    this.SendPropertyChanged("Returned");
                    this.OnReturnedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblLoanReminder")]
    public partial class TLoanReminder : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _LoanReminderID;

        private int _LoanID;

        private System.Nullable<System.DateTime> _Date;

        private bool _Closed;

        private string _Description;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoanReminderIDChanging(int value);
        partial void OnLoanReminderIDChanged();
        partial void OnLoanIDChanging(int value);
        partial void OnLoanIDChanged();
        partial void OnDateChanging(System.Nullable<System.DateTime> value);
        partial void OnDateChanged();
        partial void OnClosedChanging(bool value);
        partial void OnClosedChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TLoanReminder() {
            OnCreated();
        }

        [Column(Name = "intLoanReminderID", Storage = "_LoanReminderID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int LoanReminderID {
            get {
                return this._LoanReminderID;
            }
            set {
                if ((this._LoanReminderID != value)) {
                    this.OnLoanReminderIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanReminderID = value;
                    this.SendPropertyChanged("LoanReminderID");
                    this.OnLoanReminderIDChanged();
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_LoanID", DbType = "Int NOT NULL")]
        public int LoanID {
            get {
                return this._LoanID;
            }
            set {
                if ((this._LoanID != value)) {
                    this.OnLoanIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoanID = value;
                    this.SendPropertyChanged("LoanID");
                    this.OnLoanIDChanged();
                }
            }
        }

        [Column(Name = "dtDate", Storage = "_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Date {
            get {
                return this._Date;
            }
            set {
                if ((this._Date != value)) {
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [Column(Name = "bitClosed", Storage = "_Closed", DbType = "Bit NOT NULL")]
        public bool Closed {
            get {
                return this._Closed;
            }
            set {
                if ((this._Closed != value)) {
                    this.OnClosedChanging(value);
                    this.SendPropertyChanging();
                    this._Closed = value;
                    this.SendPropertyChanged("Closed");
                    this.OnClosedChanged();
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_Description", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMaterial")]
    public partial class TMaterial : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaterialID;

        private byte _TintTemplate;

        private string _MaterialName;

        private int _SiteVisitID;

        private string _AccessionNo;

        private string _RegNo;

        private string _CollectorNo;

        private System.Nullable<int> _BiotaID;

        private string _IDBy;

        private System.Nullable<System.DateTime> _IDDate;

        private System.Nullable<int> _IDRefID;

        private string _IDMethod;

        private string _IDAccuracy;

        private string _IDNameQual;

        private string _IDNotes;

        private string _Institution;

        private string _CollectionMethod;

        private string _Abundance;

        private string _MacroHabitat;

        private string _MicroHabitat;

        private string _Source;

        private System.Nullable<int> _AssociateOf;

        private string _SpecialLabel;

        private string _OriginalLabel;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<int> _TrapID;

        private string _IDRefPage;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaterialIDChanging(int value);
        partial void OnMaterialIDChanged();
        partial void OnTintTemplateChanging(byte value);
        partial void OnTintTemplateChanged();
        partial void OnMaterialNameChanging(string value);
        partial void OnMaterialNameChanged();
        partial void OnSiteVisitIDChanging(int value);
        partial void OnSiteVisitIDChanged();
        partial void OnAccessionNoChanging(string value);
        partial void OnAccessionNoChanged();
        partial void OnRegNoChanging(string value);
        partial void OnRegNoChanged();
        partial void OnCollectorNoChanging(string value);
        partial void OnCollectorNoChanged();
        partial void OnBiotaIDChanging(System.Nullable<int> value);
        partial void OnBiotaIDChanged();
        partial void OnIDByChanging(string value);
        partial void OnIDByChanged();
        partial void OnIDDateChanging(System.Nullable<System.DateTime> value);
        partial void OnIDDateChanged();
        partial void OnIDRefIDChanging(System.Nullable<int> value);
        partial void OnIDRefIDChanged();
        partial void OnIDMethodChanging(string value);
        partial void OnIDMethodChanged();
        partial void OnIDAccuracyChanging(string value);
        partial void OnIDAccuracyChanged();
        partial void OnIDNameQualChanging(string value);
        partial void OnIDNameQualChanged();
        partial void OnIDNotesChanging(string value);
        partial void OnIDNotesChanged();
        partial void OnInstitutionChanging(string value);
        partial void OnInstitutionChanged();
        partial void OnCollectionMethodChanging(string value);
        partial void OnCollectionMethodChanged();
        partial void OnAbundanceChanging(string value);
        partial void OnAbundanceChanged();
        partial void OnMacroHabitatChanging(string value);
        partial void OnMacroHabitatChanged();
        partial void OnMicroHabitatChanging(string value);
        partial void OnMicroHabitatChanged();
        partial void OnSourceChanging(string value);
        partial void OnSourceChanged();
        partial void OnAssociateOfChanging(System.Nullable<int> value);
        partial void OnAssociateOfChanged();
        partial void OnSpecialLabelChanging(string value);
        partial void OnSpecialLabelChanged();
        partial void OnOriginalLabelChanging(string value);
        partial void OnOriginalLabelChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnTrapIDChanging(System.Nullable<int> value);
        partial void OnTrapIDChanged();
        partial void OnIDRefPageChanging(string value);
        partial void OnIDRefPageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TMaterial() {
            OnCreated();
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt NOT NULL")]
        public byte TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this.OnTintTemplateChanging(value);
                    this.SendPropertyChanging();
                    this._TintTemplate = value;
                    this.SendPropertyChanged("TintTemplate");
                    this.OnTintTemplateChanged();
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_MaterialName", DbType = "VarChar(255)")]
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                if ((this._MaterialName != value)) {
                    this.OnMaterialNameChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialName = value;
                    this.SendPropertyChanged("MaterialName");
                    this.OnMaterialNameChanged();
                }
            }
        }

        [Column(Name = "intSiteVisitID", Storage = "_SiteVisitID", DbType = "Int NOT NULL")]
        public int SiteVisitID {
            get {
                return this._SiteVisitID;
            }
            set {
                if ((this._SiteVisitID != value)) {
                    this.OnSiteVisitIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteVisitID = value;
                    this.SendPropertyChanged("SiteVisitID");
                    this.OnSiteVisitIDChanged();
                }
            }
        }

        [Column(Name = "vchrAccessionNo", Storage = "_AccessionNo", DbType = "VarChar(50)")]
        public string AccessionNo {
            get {
                return this._AccessionNo;
            }
            set {
                if ((this._AccessionNo != value)) {
                    this.OnAccessionNoChanging(value);
                    this.SendPropertyChanging();
                    this._AccessionNo = value;
                    this.SendPropertyChanged("AccessionNo");
                    this.OnAccessionNoChanged();
                }
            }
        }

        [Column(Name = "vchrRegNo", Storage = "_RegNo", DbType = "VarChar(50)")]
        public string RegNo {
            get {
                return this._RegNo;
            }
            set {
                if ((this._RegNo != value)) {
                    this.OnRegNoChanging(value);
                    this.SendPropertyChanging();
                    this._RegNo = value;
                    this.SendPropertyChanged("RegNo");
                    this.OnRegNoChanged();
                }
            }
        }

        [Column(Name = "vchrCollectorNo", Storage = "_CollectorNo", DbType = "VarChar(50)")]
        public string CollectorNo {
            get {
                return this._CollectorNo;
            }
            set {
                if ((this._CollectorNo != value)) {
                    this.OnCollectorNoChanging(value);
                    this.SendPropertyChanging();
                    this._CollectorNo = value;
                    this.SendPropertyChanged("CollectorNo");
                    this.OnCollectorNoChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int")]
        public System.Nullable<int> BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "vchrIDBy", Storage = "_IDBy", DbType = "VarChar(50)")]
        public string IDBy {
            get {
                return this._IDBy;
            }
            set {
                if ((this._IDBy != value)) {
                    this.OnIDByChanging(value);
                    this.SendPropertyChanging();
                    this._IDBy = value;
                    this.SendPropertyChanged("IDBy");
                    this.OnIDByChanged();
                }
            }
        }

        [Column(Name = "dtIDDate", Storage = "_IDDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> IDDate {
            get {
                return this._IDDate;
            }
            set {
                if ((this._IDDate != value)) {
                    this.OnIDDateChanging(value);
                    this.SendPropertyChanging();
                    this._IDDate = value;
                    this.SendPropertyChanged("IDDate");
                    this.OnIDDateChanged();
                }
            }
        }

        [Column(Name = "intIDRefID", Storage = "_IDRefID", DbType = "Int")]
        public System.Nullable<int> IDRefID {
            get {
                return this._IDRefID;
            }
            set {
                if ((this._IDRefID != value)) {
                    this.OnIDRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._IDRefID = value;
                    this.SendPropertyChanged("IDRefID");
                    this.OnIDRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrIDMethod", Storage = "_IDMethod", DbType = "VarChar(255)")]
        public string IDMethod {
            get {
                return this._IDMethod;
            }
            set {
                if ((this._IDMethod != value)) {
                    this.OnIDMethodChanging(value);
                    this.SendPropertyChanging();
                    this._IDMethod = value;
                    this.SendPropertyChanged("IDMethod");
                    this.OnIDMethodChanged();
                }
            }
        }

        [Column(Name = "vchrIDAccuracy", Storage = "_IDAccuracy", DbType = "VarChar(50)")]
        public string IDAccuracy {
            get {
                return this._IDAccuracy;
            }
            set {
                if ((this._IDAccuracy != value)) {
                    this.OnIDAccuracyChanging(value);
                    this.SendPropertyChanging();
                    this._IDAccuracy = value;
                    this.SendPropertyChanged("IDAccuracy");
                    this.OnIDAccuracyChanged();
                }
            }
        }

        [Column(Name = "vchrIDNameQual", Storage = "_IDNameQual", DbType = "VarChar(255)")]
        public string IDNameQual {
            get {
                return this._IDNameQual;
            }
            set {
                if ((this._IDNameQual != value)) {
                    this.OnIDNameQualChanging(value);
                    this.SendPropertyChanging();
                    this._IDNameQual = value;
                    this.SendPropertyChanged("IDNameQual");
                    this.OnIDNameQualChanged();
                }
            }
        }

        [Column(Name = "vchrIDNotes", Storage = "_IDNotes", DbType = "VarChar(255)")]
        public string IDNotes {
            get {
                return this._IDNotes;
            }
            set {
                if ((this._IDNotes != value)) {
                    this.OnIDNotesChanging(value);
                    this.SendPropertyChanging();
                    this._IDNotes = value;
                    this.SendPropertyChanged("IDNotes");
                    this.OnIDNotesChanged();
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_Institution", DbType = "VarChar(100)")]
        public string Institution {
            get {
                return this._Institution;
            }
            set {
                if ((this._Institution != value)) {
                    this.OnInstitutionChanging(value);
                    this.SendPropertyChanging();
                    this._Institution = value;
                    this.SendPropertyChanged("Institution");
                    this.OnInstitutionChanged();
                }
            }
        }

        [Column(Name = "vchrCollectionMethod", Storage = "_CollectionMethod", DbType = "VarChar(50)")]
        public string CollectionMethod {
            get {
                return this._CollectionMethod;
            }
            set {
                if ((this._CollectionMethod != value)) {
                    this.OnCollectionMethodChanging(value);
                    this.SendPropertyChanging();
                    this._CollectionMethod = value;
                    this.SendPropertyChanged("CollectionMethod");
                    this.OnCollectionMethodChanged();
                }
            }
        }

        [Column(Name = "vchrAbundance", Storage = "_Abundance", DbType = "VarChar(255)")]
        public string Abundance {
            get {
                return this._Abundance;
            }
            set {
                if ((this._Abundance != value)) {
                    this.OnAbundanceChanging(value);
                    this.SendPropertyChanging();
                    this._Abundance = value;
                    this.SendPropertyChanged("Abundance");
                    this.OnAbundanceChanged();
                }
            }
        }

        [Column(Name = "vchrMacroHabitat", Storage = "_MacroHabitat", DbType = "VarChar(255)")]
        public string MacroHabitat {
            get {
                return this._MacroHabitat;
            }
            set {
                if ((this._MacroHabitat != value)) {
                    this.OnMacroHabitatChanging(value);
                    this.SendPropertyChanging();
                    this._MacroHabitat = value;
                    this.SendPropertyChanged("MacroHabitat");
                    this.OnMacroHabitatChanged();
                }
            }
        }

        [Column(Name = "vchrMicroHabitat", Storage = "_MicroHabitat", DbType = "VarChar(255)")]
        public string MicroHabitat {
            get {
                return this._MicroHabitat;
            }
            set {
                if ((this._MicroHabitat != value)) {
                    this.OnMicroHabitatChanging(value);
                    this.SendPropertyChanging();
                    this._MicroHabitat = value;
                    this.SendPropertyChanged("MicroHabitat");
                    this.OnMicroHabitatChanged();
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_Source", DbType = "VarChar(50)")]
        public string Source {
            get {
                return this._Source;
            }
            set {
                if ((this._Source != value)) {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [Column(Name = "intAssociateOf", Storage = "_AssociateOf", DbType = "Int")]
        public System.Nullable<int> AssociateOf {
            get {
                return this._AssociateOf;
            }
            set {
                if ((this._AssociateOf != value)) {
                    this.OnAssociateOfChanging(value);
                    this.SendPropertyChanging();
                    this._AssociateOf = value;
                    this.SendPropertyChanged("AssociateOf");
                    this.OnAssociateOfChanged();
                }
            }
        }

        [Column(Name = "vchrSpecialLabel", Storage = "_SpecialLabel", DbType = "VarChar(500)")]
        public string SpecialLabel {
            get {
                return this._SpecialLabel;
            }
            set {
                if ((this._SpecialLabel != value)) {
                    this.OnSpecialLabelChanging(value);
                    this.SendPropertyChanging();
                    this._SpecialLabel = value;
                    this.SendPropertyChanged("SpecialLabel");
                    this.OnSpecialLabelChanged();
                }
            }
        }

        [Column(Name = "vchrOriginalLabel", Storage = "_OriginalLabel", DbType = "VarChar(500)")]
        public string OriginalLabel {
            get {
                return this._OriginalLabel;
            }
            set {
                if ((this._OriginalLabel != value)) {
                    this.OnOriginalLabelChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalLabel = value;
                    this.SendPropertyChanged("OriginalLabel");
                    this.OnOriginalLabelChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "intTrapID", Storage = "_TrapID", DbType = "Int")]
        public System.Nullable<int> TrapID {
            get {
                return this._TrapID;
            }
            set {
                if ((this._TrapID != value)) {
                    this.OnTrapIDChanging(value);
                    this.SendPropertyChanging();
                    this._TrapID = value;
                    this.SendPropertyChanged("TrapID");
                    this.OnTrapIDChanged();
                }
            }
        }

        [Column(Name = "vchrIDRefPage", Storage = "_IDRefPage", DbType = "VarChar(100)")]
        public string IDRefPage {
            get {
                return this._IDRefPage;
            }
            set {
                if ((this._IDRefPage != value)) {
                    this.OnIDRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._IDRefPage = value;
                    this.SendPropertyChanged("IDRefPage");
                    this.OnIDRefPageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMaterialIdentification")]
    public partial class TMaterialIdentification : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaterialIdentID;

        private int _MaterialID;

        private string _Taxa;

        private string _IDBy;

        private System.Nullable<System.DateTime> _IDDate;

        private System.Nullable<int> _IDRefID;

        private string _IDMethod;

        private string _IDAccuracy;

        private string _NameQual;

        private string _IDNotes;

        private string _IDRefPage;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _BasedOnID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaterialIdentIDChanging(int value);
        partial void OnMaterialIdentIDChanged();
        partial void OnMaterialIDChanging(int value);
        partial void OnMaterialIDChanged();
        partial void OnTaxaChanging(string value);
        partial void OnTaxaChanged();
        partial void OnIDByChanging(string value);
        partial void OnIDByChanged();
        partial void OnIDDateChanging(System.Nullable<System.DateTime> value);
        partial void OnIDDateChanged();
        partial void OnIDRefIDChanging(System.Nullable<int> value);
        partial void OnIDRefIDChanged();
        partial void OnIDMethodChanging(string value);
        partial void OnIDMethodChanged();
        partial void OnIDAccuracyChanging(string value);
        partial void OnIDAccuracyChanged();
        partial void OnNameQualChanging(string value);
        partial void OnNameQualChanged();
        partial void OnIDNotesChanging(string value);
        partial void OnIDNotesChanged();
        partial void OnIDRefPageChanging(string value);
        partial void OnIDRefPageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnBasedOnIDChanging(System.Nullable<int> value);
        partial void OnBasedOnIDChanged();
        #endregion

        public TMaterialIdentification() {
            OnCreated();
        }

        [Column(Name = "intMaterialIdentID", Storage = "_MaterialIdentID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaterialIdentID {
            get {
                return this._MaterialIdentID;
            }
            set {
                if ((this._MaterialIdentID != value)) {
                    this.OnMaterialIdentIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialIdentID = value;
                    this.SendPropertyChanged("MaterialIdentID");
                    this.OnMaterialIdentIDChanged();
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", DbType = "Int NOT NULL")]
        public int MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        [Column(Name = "vchrTaxa", Storage = "_Taxa", DbType = "VarChar(255)")]
        public string Taxa {
            get {
                return this._Taxa;
            }
            set {
                if ((this._Taxa != value)) {
                    this.OnTaxaChanging(value);
                    this.SendPropertyChanging();
                    this._Taxa = value;
                    this.SendPropertyChanged("Taxa");
                    this.OnTaxaChanged();
                }
            }
        }

        [Column(Name = "vchrIDBy", Storage = "_IDBy", DbType = "VarChar(50)")]
        public string IDBy {
            get {
                return this._IDBy;
            }
            set {
                if ((this._IDBy != value)) {
                    this.OnIDByChanging(value);
                    this.SendPropertyChanging();
                    this._IDBy = value;
                    this.SendPropertyChanged("IDBy");
                    this.OnIDByChanged();
                }
            }
        }

        [Column(Name = "dtIDDate", Storage = "_IDDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> IDDate {
            get {
                return this._IDDate;
            }
            set {
                if ((this._IDDate != value)) {
                    this.OnIDDateChanging(value);
                    this.SendPropertyChanging();
                    this._IDDate = value;
                    this.SendPropertyChanged("IDDate");
                    this.OnIDDateChanged();
                }
            }
        }

        [Column(Name = "intIDRefID", Storage = "_IDRefID", DbType = "Int")]
        public System.Nullable<int> IDRefID {
            get {
                return this._IDRefID;
            }
            set {
                if ((this._IDRefID != value)) {
                    this.OnIDRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._IDRefID = value;
                    this.SendPropertyChanged("IDRefID");
                    this.OnIDRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrIDMethod", Storage = "_IDMethod", DbType = "VarChar(255)")]
        public string IDMethod {
            get {
                return this._IDMethod;
            }
            set {
                if ((this._IDMethod != value)) {
                    this.OnIDMethodChanging(value);
                    this.SendPropertyChanging();
                    this._IDMethod = value;
                    this.SendPropertyChanged("IDMethod");
                    this.OnIDMethodChanged();
                }
            }
        }

        [Column(Name = "vchrIDAccuracy", Storage = "_IDAccuracy", DbType = "VarChar(50)")]
        public string IDAccuracy {
            get {
                return this._IDAccuracy;
            }
            set {
                if ((this._IDAccuracy != value)) {
                    this.OnIDAccuracyChanging(value);
                    this.SendPropertyChanging();
                    this._IDAccuracy = value;
                    this.SendPropertyChanged("IDAccuracy");
                    this.OnIDAccuracyChanged();
                }
            }
        }

        [Column(Name = "vchrNameQual", Storage = "_NameQual", DbType = "VarChar(255)")]
        public string NameQual {
            get {
                return this._NameQual;
            }
            set {
                if ((this._NameQual != value)) {
                    this.OnNameQualChanging(value);
                    this.SendPropertyChanging();
                    this._NameQual = value;
                    this.SendPropertyChanged("NameQual");
                    this.OnNameQualChanged();
                }
            }
        }

        [Column(Name = "txtIDNotes", Storage = "_IDNotes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string IDNotes {
            get {
                return this._IDNotes;
            }
            set {
                if ((this._IDNotes != value)) {
                    this.OnIDNotesChanging(value);
                    this.SendPropertyChanging();
                    this._IDNotes = value;
                    this.SendPropertyChanged("IDNotes");
                    this.OnIDNotesChanged();
                }
            }
        }

        [Column(Name = "vchrIDRefPage", Storage = "_IDRefPage", DbType = "VarChar(100)")]
        public string IDRefPage {
            get {
                return this._IDRefPage;
            }
            set {
                if ((this._IDRefPage != value)) {
                    this.OnIDRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._IDRefPage = value;
                    this.SendPropertyChanged("IDRefPage");
                    this.OnIDRefPageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intBasedOnID", Storage = "_BasedOnID", DbType = "Int")]
        public System.Nullable<int> BasedOnID {
            get {
                return this._BasedOnID;
            }
            set {
                if ((this._BasedOnID != value)) {
                    this.OnBasedOnIDChanging(value);
                    this.SendPropertyChanging();
                    this._BasedOnID = value;
                    this.SendPropertyChanged("BasedOnID");
                    this.OnBasedOnIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMaterialPart")]
    public partial class TMaterialPart : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MaterialPartID;

        private int _MaterialID;

        private string _PartName;

        private string _SampleType;

        private System.Nullable<int> _NoSpecimens;

        private string _NoSpecimensQual;

        private string _Lifestage;

        private string _Gender;

        private string _RegNo;

        private string _Condition;

        private string _StorageSite;

        private string _StorageMethod;

        private string _CurationStatus;

        private string _NoOfUnits;

        private string _Notes;

        private System.Nullable<byte> _TintOnLoan;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _BasedOnID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMaterialPartIDChanging(int value);
        partial void OnMaterialPartIDChanged();
        partial void OnMaterialIDChanging(int value);
        partial void OnMaterialIDChanged();
        partial void OnPartNameChanging(string value);
        partial void OnPartNameChanged();
        partial void OnSampleTypeChanging(string value);
        partial void OnSampleTypeChanged();
        partial void OnNoSpecimensChanging(System.Nullable<int> value);
        partial void OnNoSpecimensChanged();
        partial void OnNoSpecimensQualChanging(string value);
        partial void OnNoSpecimensQualChanged();
        partial void OnLifestageChanging(string value);
        partial void OnLifestageChanged();
        partial void OnGenderChanging(string value);
        partial void OnGenderChanged();
        partial void OnRegNoChanging(string value);
        partial void OnRegNoChanged();
        partial void OnConditionChanging(string value);
        partial void OnConditionChanged();
        partial void OnStorageSiteChanging(string value);
        partial void OnStorageSiteChanged();
        partial void OnStorageMethodChanging(string value);
        partial void OnStorageMethodChanged();
        partial void OnCurationStatusChanging(string value);
        partial void OnCurationStatusChanged();
        partial void OnNoOfUnitsChanging(string value);
        partial void OnNoOfUnitsChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnTintOnLoanChanging(System.Nullable<byte> value);
        partial void OnTintOnLoanChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnBasedOnIDChanging(System.Nullable<int> value);
        partial void OnBasedOnIDChanged();
        #endregion

        public TMaterialPart() {
            OnCreated();
        }

        [Column(Name = "intMaterialPartID", Storage = "_MaterialPartID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MaterialPartID {
            get {
                return this._MaterialPartID;
            }
            set {
                if ((this._MaterialPartID != value)) {
                    this.OnMaterialPartIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialPartID = value;
                    this.SendPropertyChanged("MaterialPartID");
                    this.OnMaterialPartIDChanged();
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", DbType = "Int NOT NULL")]
        public int MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        [Column(Name = "vchrPartName", Storage = "_PartName", DbType = "VarChar(255)")]
        public string PartName {
            get {
                return this._PartName;
            }
            set {
                if ((this._PartName != value)) {
                    this.OnPartNameChanging(value);
                    this.SendPropertyChanging();
                    this._PartName = value;
                    this.SendPropertyChanged("PartName");
                    this.OnPartNameChanged();
                }
            }
        }

        [Column(Name = "vchrSampleType", Storage = "_SampleType", DbType = "VarChar(50)")]
        public string SampleType {
            get {
                return this._SampleType;
            }
            set {
                if ((this._SampleType != value)) {
                    this.OnSampleTypeChanging(value);
                    this.SendPropertyChanging();
                    this._SampleType = value;
                    this.SendPropertyChanged("SampleType");
                    this.OnSampleTypeChanged();
                }
            }
        }

        [Column(Name = "intNoSpecimens", Storage = "_NoSpecimens", DbType = "Int")]
        public System.Nullable<int> NoSpecimens {
            get {
                return this._NoSpecimens;
            }
            set {
                if ((this._NoSpecimens != value)) {
                    this.OnNoSpecimensChanging(value);
                    this.SendPropertyChanging();
                    this._NoSpecimens = value;
                    this.SendPropertyChanged("NoSpecimens");
                    this.OnNoSpecimensChanged();
                }
            }
        }

        [Column(Name = "vchrNoSpecimensQual", Storage = "_NoSpecimensQual", DbType = "VarChar(50)")]
        public string NoSpecimensQual {
            get {
                return this._NoSpecimensQual;
            }
            set {
                if ((this._NoSpecimensQual != value)) {
                    this.OnNoSpecimensQualChanging(value);
                    this.SendPropertyChanging();
                    this._NoSpecimensQual = value;
                    this.SendPropertyChanged("NoSpecimensQual");
                    this.OnNoSpecimensQualChanged();
                }
            }
        }

        [Column(Name = "vchrLifestage", Storage = "_Lifestage", DbType = "VarChar(50)")]
        public string Lifestage {
            get {
                return this._Lifestage;
            }
            set {
                if ((this._Lifestage != value)) {
                    this.OnLifestageChanging(value);
                    this.SendPropertyChanging();
                    this._Lifestage = value;
                    this.SendPropertyChanged("Lifestage");
                    this.OnLifestageChanged();
                }
            }
        }

        [Column(Name = "vchrGender", Storage = "_Gender", DbType = "VarChar(50)")]
        public string Gender {
            get {
                return this._Gender;
            }
            set {
                if ((this._Gender != value)) {
                    this.OnGenderChanging(value);
                    this.SendPropertyChanging();
                    this._Gender = value;
                    this.SendPropertyChanged("Gender");
                    this.OnGenderChanged();
                }
            }
        }

        [Column(Name = "vchrRegNo", Storage = "_RegNo", DbType = "VarChar(50)")]
        public string RegNo {
            get {
                return this._RegNo;
            }
            set {
                if ((this._RegNo != value)) {
                    this.OnRegNoChanging(value);
                    this.SendPropertyChanging();
                    this._RegNo = value;
                    this.SendPropertyChanged("RegNo");
                    this.OnRegNoChanged();
                }
            }
        }

        [Column(Name = "vchrCondition", Storage = "_Condition", DbType = "VarChar(100)")]
        public string Condition {
            get {
                return this._Condition;
            }
            set {
                if ((this._Condition != value)) {
                    this.OnConditionChanging(value);
                    this.SendPropertyChanging();
                    this._Condition = value;
                    this.SendPropertyChanged("Condition");
                    this.OnConditionChanged();
                }
            }
        }

        [Column(Name = "vchrStorageSite", Storage = "_StorageSite", DbType = "VarChar(100)")]
        public string StorageSite {
            get {
                return this._StorageSite;
            }
            set {
                if ((this._StorageSite != value)) {
                    this.OnStorageSiteChanging(value);
                    this.SendPropertyChanging();
                    this._StorageSite = value;
                    this.SendPropertyChanged("StorageSite");
                    this.OnStorageSiteChanged();
                }
            }
        }

        [Column(Name = "vchrStorageMethod", Storage = "_StorageMethod", DbType = "VarChar(100)")]
        public string StorageMethod {
            get {
                return this._StorageMethod;
            }
            set {
                if ((this._StorageMethod != value)) {
                    this.OnStorageMethodChanging(value);
                    this.SendPropertyChanging();
                    this._StorageMethod = value;
                    this.SendPropertyChanged("StorageMethod");
                    this.OnStorageMethodChanged();
                }
            }
        }

        [Column(Name = "vchrCurationStatus", Storage = "_CurationStatus", DbType = "VarChar(100)")]
        public string CurationStatus {
            get {
                return this._CurationStatus;
            }
            set {
                if ((this._CurationStatus != value)) {
                    this.OnCurationStatusChanging(value);
                    this.SendPropertyChanging();
                    this._CurationStatus = value;
                    this.SendPropertyChanged("CurationStatus");
                    this.OnCurationStatusChanged();
                }
            }
        }

        [Column(Name = "vchrNoOfUnits", Storage = "_NoOfUnits", DbType = "VarChar(100)")]
        public string NoOfUnits {
            get {
                return this._NoOfUnits;
            }
            set {
                if ((this._NoOfUnits != value)) {
                    this.OnNoOfUnitsChanging(value);
                    this.SendPropertyChanging();
                    this._NoOfUnits = value;
                    this.SendPropertyChanged("NoOfUnits");
                    this.OnNoOfUnitsChanged();
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_Notes", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        [Column(Name = "tintOnLoan", Storage = "_TintOnLoan", DbType = "TinyInt")]
        public System.Nullable<byte> TintOnLoan {
            get {
                return this._TintOnLoan;
            }
            set {
                if ((this._TintOnLoan != value)) {
                    this.OnTintOnLoanChanging(value);
                    this.SendPropertyChanging();
                    this._TintOnLoan = value;
                    this.SendPropertyChanged("TintOnLoan");
                    this.OnTintOnLoanChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intBasedOnID", Storage = "_BasedOnID", DbType = "Int")]
        public System.Nullable<int> BasedOnID {
            get {
                return this._BasedOnID;
            }
            set {
                if ((this._BasedOnID != value)) {
                    this.OnBasedOnIDChanging(value);
                    this.SendPropertyChanging();
                    this._BasedOnID = value;
                    this.SendPropertyChanged("BasedOnID");
                    this.OnBasedOnIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyCell")]
    public partial class TMorphologyCell : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyCellID;

        private int _CharacterID;

        private int _MorphologyViewID;

        private int _MorphologyEntityID;

        private string _Value;

        private System.Nullable<int> _Flags;

        private System.Nullable<int> _InsertedWithProjectID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyCellIDChanging(int value);
        partial void OnMorphologyCellIDChanged();
        partial void OnCharacterIDChanging(int value);
        partial void OnCharacterIDChanged();
        partial void OnMorphologyViewIDChanging(int value);
        partial void OnMorphologyViewIDChanged();
        partial void OnMorphologyEntityIDChanging(int value);
        partial void OnMorphologyEntityIDChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnFlagsChanging(System.Nullable<int> value);
        partial void OnFlagsChanged();
        partial void OnInsertedWithProjectIDChanging(System.Nullable<int> value);
        partial void OnInsertedWithProjectIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TMorphologyCell() {
            OnCreated();
        }

        [Column(Name = "intMorphologyCellID", Storage = "_MorphologyCellID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyCellID {
            get {
                return this._MorphologyCellID;
            }
            set {
                if ((this._MorphologyCellID != value)) {
                    this.OnMorphologyCellIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyCellID = value;
                    this.SendPropertyChanged("MorphologyCellID");
                    this.OnMorphologyCellIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int NOT NULL")]
        public int CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_MorphologyViewID", DbType = "Int NOT NULL")]
        public int MorphologyViewID {
            get {
                return this._MorphologyViewID;
            }
            set {
                if ((this._MorphologyViewID != value)) {
                    this.OnMorphologyViewIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewID = value;
                    this.SendPropertyChanged("MorphologyViewID");
                    this.OnMorphologyViewIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_MorphologyEntityID", DbType = "Int NOT NULL")]
        public int MorphologyEntityID {
            get {
                return this._MorphologyEntityID;
            }
            set {
                if ((this._MorphologyEntityID != value)) {
                    this.OnMorphologyEntityIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyEntityID = value;
                    this.SendPropertyChanged("MorphologyEntityID");
                    this.OnMorphologyEntityIDChanged();
                }
            }
        }

        [Column(Name = "txtValue", Storage = "_Value", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [Column(Name = "intFlags", Storage = "_Flags", DbType = "Int")]
        public System.Nullable<int> Flags {
            get {
                return this._Flags;
            }
            set {
                if ((this._Flags != value)) {
                    this.OnFlagsChanging(value);
                    this.SendPropertyChanging();
                    this._Flags = value;
                    this.SendPropertyChanged("Flags");
                    this.OnFlagsChanged();
                }
            }
        }

        [Column(Name = "intInsertedWithProjectID", Storage = "_InsertedWithProjectID", DbType = "Int")]
        public System.Nullable<int> InsertedWithProjectID {
            get {
                return this._InsertedWithProjectID;
            }
            set {
                if ((this._InsertedWithProjectID != value)) {
                    this.OnInsertedWithProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._InsertedWithProjectID = value;
                    this.SendPropertyChanged("InsertedWithProjectID");
                    this.OnInsertedWithProjectIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyCellNumeric")]
    public partial class TMorphologyCellNumeric {

        private int _MorphologyCellID;

        private int _CharacterNumericID;

        private decimal _NumStartRange;

        private decimal _NumEndRange;

        public TMorphologyCellNumeric() {
        }

        [Column(Name = "intMorphologyCellID", Storage = "_MorphologyCellID", DbType = "Int NOT NULL")]
        public int MorphologyCellID {
            get {
                return this._MorphologyCellID;
            }
            set {
                if ((this._MorphologyCellID != value)) {
                    this._MorphologyCellID = value;
                }
            }
        }

        [Column(Name = "intCharacterNumericID", Storage = "_CharacterNumericID", DbType = "Int NOT NULL")]
        public int CharacterNumericID {
            get {
                return this._CharacterNumericID;
            }
            set {
                if ((this._CharacterNumericID != value)) {
                    this._CharacterNumericID = value;
                }
            }
        }

        [Column(Name = "numStartRange", Storage = "_NumStartRange", DbType = "Decimal(18,0) NOT NULL")]
        public decimal NumStartRange {
            get {
                return this._NumStartRange;
            }
            set {
                if ((this._NumStartRange != value)) {
                    this._NumStartRange = value;
                }
            }
        }

        [Column(Name = "numEndRange", Storage = "_NumEndRange", DbType = "Decimal(18,0) NOT NULL")]
        public decimal NumEndRange {
            get {
                return this._NumEndRange;
            }
            set {
                if ((this._NumEndRange != value)) {
                    this._NumEndRange = value;
                }
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyCellState")]
    public partial class TMorphologyCellState : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyCellID;

        private int _CharacterStateID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyCellIDChanging(int value);
        partial void OnMorphologyCellIDChanged();
        partial void OnCharacterStateIDChanging(int value);
        partial void OnCharacterStateIDChanged();
        #endregion

        public TMorphologyCellState() {
            OnCreated();
        }

        [Column(Name = "intMorphologyCellID", Storage = "_MorphologyCellID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int MorphologyCellID {
            get {
                return this._MorphologyCellID;
            }
            set {
                if ((this._MorphologyCellID != value)) {
                    this.OnMorphologyCellIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyCellID = value;
                    this.SendPropertyChanged("MorphologyCellID");
                    this.OnMorphologyCellIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_CharacterStateID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int CharacterStateID {
            get {
                return this._CharacterStateID;
            }
            set {
                if ((this._CharacterStateID != value)) {
                    this.OnCharacterStateIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterStateID = value;
                    this.SendPropertyChanged("CharacterStateID");
                    this.OnCharacterStateIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyEntity")]
    public partial class TMorphologyEntity : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyEntityID;

        private byte _TintEntityType;

        private int _EntityID;

        private System.Nullable<int> _ImportedWithProjectID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyEntityIDChanging(int value);
        partial void OnMorphologyEntityIDChanged();
        partial void OnTintEntityTypeChanging(byte value);
        partial void OnTintEntityTypeChanged();
        partial void OnEntityIDChanging(int value);
        partial void OnEntityIDChanged();
        partial void OnImportedWithProjectIDChanging(System.Nullable<int> value);
        partial void OnImportedWithProjectIDChanged();
        #endregion

        public TMorphologyEntity() {
            OnCreated();
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_MorphologyEntityID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyEntityID {
            get {
                return this._MorphologyEntityID;
            }
            set {
                if ((this._MorphologyEntityID != value)) {
                    this.OnMorphologyEntityIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyEntityID = value;
                    this.SendPropertyChanged("MorphologyEntityID");
                    this.OnMorphologyEntityIDChanged();
                }
            }
        }

        [Column(Name = "tintEntityType", Storage = "_TintEntityType", DbType = "TinyInt NOT NULL")]
        public byte TintEntityType {
            get {
                return this._TintEntityType;
            }
            set {
                if ((this._TintEntityType != value)) {
                    this.OnTintEntityTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TintEntityType = value;
                    this.SendPropertyChanged("TintEntityType");
                    this.OnTintEntityTypeChanged();
                }
            }
        }

        [Column(Name = "intEntityID", Storage = "_EntityID", DbType = "Int NOT NULL")]
        public int EntityID {
            get {
                return this._EntityID;
            }
            set {
                if ((this._EntityID != value)) {
                    this.OnEntityIDChanging(value);
                    this.SendPropertyChanging();
                    this._EntityID = value;
                    this.SendPropertyChanged("EntityID");
                    this.OnEntityIDChanged();
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_ImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> ImportedWithProjectID {
            get {
                return this._ImportedWithProjectID;
            }
            set {
                if ((this._ImportedWithProjectID != value)) {
                    this.OnImportedWithProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._ImportedWithProjectID = value;
                    this.SendPropertyChanged("ImportedWithProjectID");
                    this.OnImportedWithProjectIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProject")]
    public partial class TMorphologyProject : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectID;

        private string _Name;

        private string _Description;

        private System.Nullable<int> _MorphologyProjectGroupID;

        private bool _CreatedByImport;

        private System.Nullable<short> _SintImportSourceType;

        private string _DatetimeImported;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _ChrProjectType;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnMorphologyProjectGroupIDChanging(System.Nullable<int> value);
        partial void OnMorphologyProjectGroupIDChanged();
        partial void OnCreatedByImportChanging(bool value);
        partial void OnCreatedByImportChanged();
        partial void OnSintImportSourceTypeChanging(System.Nullable<short> value);
        partial void OnSintImportSourceTypeChanged();
        partial void OnDatetimeImportedChanging(string value);
        partial void OnDatetimeImportedChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnChrProjectTypeChanging(string value);
        partial void OnChrProjectTypeChanged();
        #endregion

        public TMorphologyProject() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_Description", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectGroupID", Storage = "_MorphologyProjectGroupID", DbType = "Int")]
        public System.Nullable<int> MorphologyProjectGroupID {
            get {
                return this._MorphologyProjectGroupID;
            }
            set {
                if ((this._MorphologyProjectGroupID != value)) {
                    this.OnMorphologyProjectGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectGroupID = value;
                    this.SendPropertyChanged("MorphologyProjectGroupID");
                    this.OnMorphologyProjectGroupIDChanged();
                }
            }
        }

        [Column(Name = "bitCreatedByImport", Storage = "_CreatedByImport", DbType = "Bit NOT NULL")]
        public bool CreatedByImport {
            get {
                return this._CreatedByImport;
            }
            set {
                if ((this._CreatedByImport != value)) {
                    this.OnCreatedByImportChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedByImport = value;
                    this.SendPropertyChanged("CreatedByImport");
                    this.OnCreatedByImportChanged();
                }
            }
        }

        [Column(Name = "sintImportSourceType", Storage = "_SintImportSourceType", DbType = "SmallInt")]
        public System.Nullable<short> SintImportSourceType {
            get {
                return this._SintImportSourceType;
            }
            set {
                if ((this._SintImportSourceType != value)) {
                    this.OnSintImportSourceTypeChanging(value);
                    this.SendPropertyChanging();
                    this._SintImportSourceType = value;
                    this.SendPropertyChanged("SintImportSourceType");
                    this.OnSintImportSourceTypeChanged();
                }
            }
        }

        [Column(Name = "vchrDatetimeImported", Storage = "_DatetimeImported", DbType = "VarChar(50)")]
        public string DatetimeImported {
            get {
                return this._DatetimeImported;
            }
            set {
                if ((this._DatetimeImported != value)) {
                    this.OnDatetimeImportedChanging(value);
                    this.SendPropertyChanging();
                    this._DatetimeImported = value;
                    this.SendPropertyChanged("DatetimeImported");
                    this.OnDatetimeImportedChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "chrProjectType", Storage = "_ChrProjectType", DbType = "Char(1)")]
        public string ChrProjectType {
            get {
                return this._ChrProjectType;
            }
            set {
                if ((this._ChrProjectType != value)) {
                    this.OnChrProjectTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrProjectType = value;
                    this.SendPropertyChanged("ChrProjectType");
                    this.OnChrProjectTypeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProjectCharacter")]
    public partial class TMorphologyProjectCharacter : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectCharacterID;

        private int _MorphologyProjectID;

        private int _CharacterID;

        private System.Nullable<int> _OriginalDeltaNumber;

        private System.Nullable<int> _Order;

        private bool _Mandatory;

        private bool _Hidden;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectCharacterIDChanging(int value);
        partial void OnMorphologyProjectCharacterIDChanged();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnCharacterIDChanging(int value);
        partial void OnCharacterIDChanged();
        partial void OnOriginalDeltaNumberChanging(System.Nullable<int> value);
        partial void OnOriginalDeltaNumberChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnMandatoryChanging(bool value);
        partial void OnMandatoryChanged();
        partial void OnHiddenChanging(bool value);
        partial void OnHiddenChanged();
        #endregion

        public TMorphologyProjectCharacter() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectCharacterID", Storage = "_MorphologyProjectCharacterID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectCharacterID {
            get {
                return this._MorphologyProjectCharacterID;
            }
            set {
                if ((this._MorphologyProjectCharacterID != value)) {
                    this.OnMorphologyProjectCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectCharacterID = value;
                    this.SendPropertyChanged("MorphologyProjectCharacterID");
                    this.OnMorphologyProjectCharacterIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int NOT NULL")]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int NOT NULL")]
        public int CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_OriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> OriginalDeltaNumber {
            get {
                return this._OriginalDeltaNumber;
            }
            set {
                if ((this._OriginalDeltaNumber != value)) {
                    this.OnOriginalDeltaNumberChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalDeltaNumber = value;
                    this.SendPropertyChanged("OriginalDeltaNumber");
                    this.OnOriginalDeltaNumberChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "bitMandatory", Storage = "_Mandatory", DbType = "Bit NOT NULL")]
        public bool Mandatory {
            get {
                return this._Mandatory;
            }
            set {
                if ((this._Mandatory != value)) {
                    this.OnMandatoryChanging(value);
                    this.SendPropertyChanging();
                    this._Mandatory = value;
                    this.SendPropertyChanged("Mandatory");
                    this.OnMandatoryChanged();
                }
            }
        }

        [Column(Name = "bitHidden", Storage = "_Hidden", DbType = "Bit NOT NULL")]
        public bool Hidden {
            get {
                return this._Hidden;
            }
            set {
                if ((this._Hidden != value)) {
                    this.OnHiddenChanging(value);
                    this.SendPropertyChanging();
                    this._Hidden = value;
                    this.SendPropertyChanged("Hidden");
                    this.OnHiddenChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProjectCharGroup")]
    public partial class TMorphologyProjectCharGroup : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectCharGroupID;

        private int _MorphologyProjectID;

        private int _ParentID;

        private string _ItemType;

        private string _Name;

        private System.Nullable<int> _CharacterID;

        private System.Nullable<int> _Order;

        private string _Parentage;

        private System.Nullable<System.Guid> _GUID;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectCharGroupIDChanging(int value);
        partial void OnMorphologyProjectCharGroupIDChanged();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnParentIDChanging(int value);
        partial void OnParentIDChanged();
        partial void OnItemTypeChanging(string value);
        partial void OnItemTypeChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnCharacterIDChanging(System.Nullable<int> value);
        partial void OnCharacterIDChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        #endregion

        public TMorphologyProjectCharGroup() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectCharGroupID", Storage = "_MorphologyProjectCharGroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectCharGroupID {
            get {
                return this._MorphologyProjectCharGroupID;
            }
            set {
                if ((this._MorphologyProjectCharGroupID != value)) {
                    this.OnMorphologyProjectCharGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectCharGroupID = value;
                    this.SendPropertyChanged("MorphologyProjectCharGroupID");
                    this.OnMorphologyProjectCharGroupIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int NOT NULL")]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int NOT NULL")]
        public int ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Storage = "_ItemType", DbType = "Char(2) NOT NULL", CanBeNull = false)]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this.OnItemTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ItemType = value;
                    this.SendPropertyChanged("ItemType");
                    this.OnItemTypeChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int")]
        public System.Nullable<int> CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(1000)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProjectEntity")]
    public partial class TMorphologyProjectEntity : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectEntityID;

        private int _MorphologyProjectID;

        private System.Nullable<int> _MorphologyEntityID;

        private int _Order;

        private bool _Hidden;

        private System.Nullable<System.Guid> _GUID;

        private string _WhoInserted;

        private System.Nullable<System.DateTime> _DatetimeInserted;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateTimeLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectEntityIDChanging(int value);
        partial void OnMorphologyProjectEntityIDChanged();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnMorphologyEntityIDChanging(System.Nullable<int> value);
        partial void OnMorphologyEntityIDChanged();
        partial void OnOrderChanging(int value);
        partial void OnOrderChanged();
        partial void OnHiddenChanging(bool value);
        partial void OnHiddenChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnWhoInsertedChanging(string value);
        partial void OnWhoInsertedChanged();
        partial void OnDatetimeInsertedChanging(System.Nullable<System.DateTime> value);
        partial void OnDatetimeInsertedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateTimeLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateTimeLastUpdatedChanged();
        #endregion

        public TMorphologyProjectEntity() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectEntityID", Storage = "_MorphologyProjectEntityID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectEntityID {
            get {
                return this._MorphologyProjectEntityID;
            }
            set {
                if ((this._MorphologyProjectEntityID != value)) {
                    this.OnMorphologyProjectEntityIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectEntityID = value;
                    this.SendPropertyChanged("MorphologyProjectEntityID");
                    this.OnMorphologyProjectEntityIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int NOT NULL")]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_MorphologyEntityID", DbType = "Int")]
        public System.Nullable<int> MorphologyEntityID {
            get {
                return this._MorphologyEntityID;
            }
            set {
                if ((this._MorphologyEntityID != value)) {
                    this.OnMorphologyEntityIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyEntityID = value;
                    this.SendPropertyChanged("MorphologyEntityID");
                    this.OnMorphologyEntityIDChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int NOT NULL")]
        public int Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "bitHidden", Storage = "_Hidden", DbType = "Bit NOT NULL")]
        public bool Hidden {
            get {
                return this._Hidden;
            }
            set {
                if ((this._Hidden != value)) {
                    this.OnHiddenChanging(value);
                    this.SendPropertyChanging();
                    this._Hidden = value;
                    this.SendPropertyChanged("Hidden");
                    this.OnHiddenChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrWhoInserted", Storage = "_WhoInserted", DbType = "VarChar(50)")]
        public string WhoInserted {
            get {
                return this._WhoInserted;
            }
            set {
                if ((this._WhoInserted != value)) {
                    this.OnWhoInsertedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoInserted = value;
                    this.SendPropertyChanged("WhoInserted");
                    this.OnWhoInsertedChanged();
                }
            }
        }

        [Column(Name = "dtDatetimeInserted", Storage = "_DatetimeInserted", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DatetimeInserted {
            get {
                return this._DatetimeInserted;
            }
            set {
                if ((this._DatetimeInserted != value)) {
                    this.OnDatetimeInsertedChanging(value);
                    this.SendPropertyChanging();
                    this._DatetimeInserted = value;
                    this.SendPropertyChanged("DatetimeInserted");
                    this.OnDatetimeInsertedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateTimeLastUpdated", Storage = "_DateTimeLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateTimeLastUpdated {
            get {
                return this._DateTimeLastUpdated;
            }
            set {
                if ((this._DateTimeLastUpdated != value)) {
                    this.OnDateTimeLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateTimeLastUpdated = value;
                    this.SendPropertyChanged("DateTimeLastUpdated");
                    this.OnDateTimeLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProjectGroup")]
    public partial class TMorphologyProjectGroup : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectGroupID;

        private int _ParentGroupID;

        private string _Name;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectGroupIDChanging(int value);
        partial void OnMorphologyProjectGroupIDChanged();
        partial void OnParentGroupIDChanging(int value);
        partial void OnParentGroupIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TMorphologyProjectGroup() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectGroupID", Storage = "_MorphologyProjectGroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectGroupID {
            get {
                return this._MorphologyProjectGroupID;
            }
            set {
                if ((this._MorphologyProjectGroupID != value)) {
                    this.OnMorphologyProjectGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectGroupID = value;
                    this.SendPropertyChanged("MorphologyProjectGroupID");
                    this.OnMorphologyProjectGroupIDChanged();
                }
            }
        }

        [Column(Name = "intParentGroupID", Storage = "_ParentGroupID", DbType = "Int NOT NULL")]
        public int ParentGroupID {
            get {
                return this._ParentGroupID;
            }
            set {
                if ((this._ParentGroupID != value)) {
                    this.OnParentGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentGroupID = value;
                    this.SendPropertyChanged("ParentGroupID");
                    this.OnParentGroupIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProjectMiscItem")]
    public partial class TMorphologyProjectMiscItem : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectMiscItemID;

        private int _MorphologyProjectID;

        private string _Category;

        private string _Value;

        private System.Nullable<int> _Order;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectMiscItemIDChanging(int value);
        partial void OnMorphologyProjectMiscItemIDChanged();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        #endregion

        public TMorphologyProjectMiscItem() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectMiscItemID", Storage = "_MorphologyProjectMiscItemID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectMiscItemID {
            get {
                return this._MorphologyProjectMiscItemID;
            }
            set {
                if ((this._MorphologyProjectMiscItemID != value)) {
                    this.OnMorphologyProjectMiscItemIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectMiscItemID = value;
                    this.SendPropertyChanged("MorphologyProjectMiscItemID");
                    this.OnMorphologyProjectMiscItemIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int NOT NULL")]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "vchrCategory", Storage = "_Category", DbType = "VarChar(255)")]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this.OnCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_Value", DbType = "VarChar(2000)")]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyProjectView")]
    public partial class TMorphologyProjectView : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyProjectViewID;

        private int _MorphologyProjectID;

        private int _MorphologyViewID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyProjectViewIDChanging(int value);
        partial void OnMorphologyProjectViewIDChanged();
        partial void OnMorphologyProjectIDChanging(int value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnMorphologyViewIDChanging(int value);
        partial void OnMorphologyViewIDChanged();
        #endregion

        public TMorphologyProjectView() {
            OnCreated();
        }

        [Column(Name = "intMorphologyProjectViewID", Storage = "_MorphologyProjectViewID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyProjectViewID {
            get {
                return this._MorphologyProjectViewID;
            }
            set {
                if ((this._MorphologyProjectViewID != value)) {
                    this.OnMorphologyProjectViewIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectViewID = value;
                    this.SendPropertyChanged("MorphologyProjectViewID");
                    this.OnMorphologyProjectViewIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int NOT NULL")]
        public int MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_MorphologyViewID", DbType = "Int NOT NULL")]
        public int MorphologyViewID {
            get {
                return this._MorphologyViewID;
            }
            set {
                if ((this._MorphologyViewID != value)) {
                    this.OnMorphologyViewIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewID = value;
                    this.SendPropertyChanged("MorphologyViewID");
                    this.OnMorphologyViewIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyView")]
    public partial class TMorphologyView : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyViewID;

        private System.Nullable<int> _MorphologyViewGroupID;

        private string _Name;

        private string _Type;

        private System.Nullable<int> _ImportedWithProjectID;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<bool> _DefaultView;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyViewIDChanging(int value);
        partial void OnMorphologyViewIDChanged();
        partial void OnMorphologyViewGroupIDChanging(System.Nullable<int> value);
        partial void OnMorphologyViewGroupIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnImportedWithProjectIDChanging(System.Nullable<int> value);
        partial void OnImportedWithProjectIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDefaultViewChanging(System.Nullable<bool> value);
        partial void OnDefaultViewChanged();
        #endregion

        public TMorphologyView() {
            OnCreated();
        }

        [Column(Name = "intMorphologyViewID", Storage = "_MorphologyViewID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyViewID {
            get {
                return this._MorphologyViewID;
            }
            set {
                if ((this._MorphologyViewID != value)) {
                    this.OnMorphologyViewIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewID = value;
                    this.SendPropertyChanged("MorphologyViewID");
                    this.OnMorphologyViewIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyViewGroupID", Storage = "_MorphologyViewGroupID", DbType = "Int")]
        public System.Nullable<int> MorphologyViewGroupID {
            get {
                return this._MorphologyViewGroupID;
            }
            set {
                if ((this._MorphologyViewGroupID != value)) {
                    this.OnMorphologyViewGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewGroupID = value;
                    this.SendPropertyChanged("MorphologyViewGroupID");
                    this.OnMorphologyViewGroupIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_Type", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_ImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> ImportedWithProjectID {
            get {
                return this._ImportedWithProjectID;
            }
            set {
                if ((this._ImportedWithProjectID != value)) {
                    this.OnImportedWithProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._ImportedWithProjectID = value;
                    this.SendPropertyChanged("ImportedWithProjectID");
                    this.OnImportedWithProjectIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "bitDefaultView", Storage = "_DefaultView", DbType = "Bit")]
        public System.Nullable<bool> DefaultView {
            get {
                return this._DefaultView;
            }
            set {
                if ((this._DefaultView != value)) {
                    this.OnDefaultViewChanging(value);
                    this.SendPropertyChanging();
                    this._DefaultView = value;
                    this.SendPropertyChanged("DefaultView");
                    this.OnDefaultViewChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyViewAlias")]
    public partial class TMorphologyViewAlias : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyViewAliasID;

        private int _MorphologyViewID;

        private int _SourceID;

        private string _ChrSourceType;

        private string _Alias;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyViewAliasIDChanging(int value);
        partial void OnMorphologyViewAliasIDChanged();
        partial void OnMorphologyViewIDChanging(int value);
        partial void OnMorphologyViewIDChanged();
        partial void OnSourceIDChanging(int value);
        partial void OnSourceIDChanged();
        partial void OnChrSourceTypeChanging(string value);
        partial void OnChrSourceTypeChanged();
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        #endregion

        public TMorphologyViewAlias() {
            OnCreated();
        }

        [Column(Name = "intMorphologyViewAliasID", Storage = "_MorphologyViewAliasID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyViewAliasID {
            get {
                return this._MorphologyViewAliasID;
            }
            set {
                if ((this._MorphologyViewAliasID != value)) {
                    this.OnMorphologyViewAliasIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewAliasID = value;
                    this.SendPropertyChanged("MorphologyViewAliasID");
                    this.OnMorphologyViewAliasIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_MorphologyViewID", DbType = "Int NOT NULL")]
        public int MorphologyViewID {
            get {
                return this._MorphologyViewID;
            }
            set {
                if ((this._MorphologyViewID != value)) {
                    this.OnMorphologyViewIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewID = value;
                    this.SendPropertyChanged("MorphologyViewID");
                    this.OnMorphologyViewIDChanged();
                }
            }
        }

        [Column(Name = "intSourceID", Storage = "_SourceID", DbType = "Int NOT NULL")]
        public int SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this.OnSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._SourceID = value;
                    this.SendPropertyChanged("SourceID");
                    this.OnSourceIDChanged();
                }
            }
        }

        [Column(Name = "chrSourceType", Storage = "_ChrSourceType", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string ChrSourceType {
            get {
                return this._ChrSourceType;
            }
            set {
                if ((this._ChrSourceType != value)) {
                    this.OnChrSourceTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrSourceType = value;
                    this.SendPropertyChanged("ChrSourceType");
                    this.OnChrSourceTypeChanged();
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_Alias", DbType = "VarChar(1000)")]
        public string Alias {
            get {
                return this._Alias;
            }
            set {
                if ((this._Alias != value)) {
                    this.OnAliasChanging(value);
                    this.SendPropertyChanging();
                    this._Alias = value;
                    this.SendPropertyChanged("Alias");
                    this.OnAliasChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMorphologyViewGroup")]
    public partial class TMorphologyViewGroup : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MorphologyViewGroupID;

        private int _ParentGroupID;

        private string _Name;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMorphologyViewGroupIDChanging(int value);
        partial void OnMorphologyViewGroupIDChanged();
        partial void OnParentGroupIDChanging(int value);
        partial void OnParentGroupIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TMorphologyViewGroup() {
            OnCreated();
        }

        [Column(Name = "intMorphologyViewGroupID", Storage = "_MorphologyViewGroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MorphologyViewGroupID {
            get {
                return this._MorphologyViewGroupID;
            }
            set {
                if ((this._MorphologyViewGroupID != value)) {
                    this.OnMorphologyViewGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewGroupID = value;
                    this.SendPropertyChanged("MorphologyViewGroupID");
                    this.OnMorphologyViewGroupIDChanged();
                }
            }
        }

        [Column(Name = "intParentGroupID", Storage = "_ParentGroupID", DbType = "Int NOT NULL")]
        public int ParentGroupID {
            get {
                return this._ParentGroupID;
            }
            set {
                if ((this._ParentGroupID != value)) {
                    this.OnParentGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentGroupID = value;
                    this.SendPropertyChanged("ParentGroupID");
                    this.OnParentGroupIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMultimedia")]
    public partial class TMultimedia : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MultimediaID;

        private string _Name;

        private string _Number;

        private string _Artist;

        private string _DateRecorded;

        private string _Owner;

        private string _FileExtension;

        private System.Nullable<int> _SizeInBytes;

        private System.Data.Linq.Binary _ImgMultimedia;

        private string _Copyright;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMultimediaIDChanging(int value);
        partial void OnMultimediaIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnNumberChanging(string value);
        partial void OnNumberChanged();
        partial void OnArtistChanging(string value);
        partial void OnArtistChanged();
        partial void OnDateRecordedChanging(string value);
        partial void OnDateRecordedChanged();
        partial void OnOwnerChanging(string value);
        partial void OnOwnerChanged();
        partial void OnFileExtensionChanging(string value);
        partial void OnFileExtensionChanged();
        partial void OnSizeInBytesChanging(System.Nullable<int> value);
        partial void OnSizeInBytesChanged();
        partial void OnImgMultimediaChanging(System.Data.Linq.Binary value);
        partial void OnImgMultimediaChanged();
        partial void OnCopyrightChanging(string value);
        partial void OnCopyrightChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TMultimedia() {
            OnCreated();
        }

        [Column(Name = "intMultimediaID", Storage = "_MultimediaID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this.OnMultimediaIDChanging(value);
                    this.SendPropertyChanging();
                    this._MultimediaID = value;
                    this.SendPropertyChanged("MultimediaID");
                    this.OnMultimediaIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "vchrNumber", Storage = "_Number", DbType = "VarChar(255)")]
        public string Number {
            get {
                return this._Number;
            }
            set {
                if ((this._Number != value)) {
                    this.OnNumberChanging(value);
                    this.SendPropertyChanging();
                    this._Number = value;
                    this.SendPropertyChanged("Number");
                    this.OnNumberChanged();
                }
            }
        }

        [Column(Name = "vchrArtist", Storage = "_Artist", DbType = "VarChar(255)")]
        public string Artist {
            get {
                return this._Artist;
            }
            set {
                if ((this._Artist != value)) {
                    this.OnArtistChanging(value);
                    this.SendPropertyChanging();
                    this._Artist = value;
                    this.SendPropertyChanged("Artist");
                    this.OnArtistChanged();
                }
            }
        }

        [Column(Name = "vchrDateRecorded", Storage = "_DateRecorded", DbType = "VarChar(50)")]
        public string DateRecorded {
            get {
                return this._DateRecorded;
            }
            set {
                if ((this._DateRecorded != value)) {
                    this.OnDateRecordedChanging(value);
                    this.SendPropertyChanging();
                    this._DateRecorded = value;
                    this.SendPropertyChanged("DateRecorded");
                    this.OnDateRecordedChanged();
                }
            }
        }

        [Column(Name = "vchrOwner", Storage = "_Owner", DbType = "VarChar(255)")]
        public string Owner {
            get {
                return this._Owner;
            }
            set {
                if ((this._Owner != value)) {
                    this.OnOwnerChanging(value);
                    this.SendPropertyChanging();
                    this._Owner = value;
                    this.SendPropertyChanged("Owner");
                    this.OnOwnerChanged();
                }
            }
        }

        [Column(Name = "vchrFileExtension", Storage = "_FileExtension", DbType = "VarChar(20)")]
        public string FileExtension {
            get {
                return this._FileExtension;
            }
            set {
                if ((this._FileExtension != value)) {
                    this.OnFileExtensionChanging(value);
                    this.SendPropertyChanging();
                    this._FileExtension = value;
                    this.SendPropertyChanged("FileExtension");
                    this.OnFileExtensionChanged();
                }
            }
        }

        [Column(Name = "intSizeInBytes", Storage = "_SizeInBytes", DbType = "Int")]
        public System.Nullable<int> SizeInBytes {
            get {
                return this._SizeInBytes;
            }
            set {
                if ((this._SizeInBytes != value)) {
                    this.OnSizeInBytesChanging(value);
                    this.SendPropertyChanging();
                    this._SizeInBytes = value;
                    this.SendPropertyChanged("SizeInBytes");
                    this.OnSizeInBytesChanged();
                }
            }
        }

        [Column(Name = "imgMultimedia", Storage = "_ImgMultimedia", DbType = "Image", CanBeNull = true, UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary ImgMultimedia {
            get {
                return this._ImgMultimedia;
            }
            set {
                if ((this._ImgMultimedia != value)) {
                    this.OnImgMultimediaChanging(value);
                    this.SendPropertyChanging();
                    this._ImgMultimedia = value;
                    this.SendPropertyChanged("ImgMultimedia");
                    this.OnImgMultimediaChanged();
                }
            }
        }

        [Column(Name = "txtCopyright", Storage = "_Copyright", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Copyright {
            get {
                return this._Copyright;
            }
            set {
                if ((this._Copyright != value)) {
                    this.OnCopyrightChanging(value);
                    this.SendPropertyChanging();
                    this._Copyright = value;
                    this.SendPropertyChanged("Copyright");
                    this.OnCopyrightChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblMultimediaLink")]
    public partial class TMultimediaLink {

        private int _MultimediaLinkID;

        private int _MultimediaTypeID;

        private int _CatID;

        private int _IntraCatID;

        private int _MultimediaID;

        private string _Caption;

        private bool _UseInReport;

        private System.Nullable<System.Guid> _GUID;

        public TMultimediaLink() {
        }

        [Column(Name = "intMultimediaLinkID", Storage = "_MultimediaLinkID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int MultimediaLinkID {
            get {
                return this._MultimediaLinkID;
            }
            set {
                if ((this._MultimediaLinkID != value)) {
                    this._MultimediaLinkID = value;
                }
            }
        }

        [Column(Name = "intMultimediaTypeID", Storage = "_MultimediaTypeID", DbType = "Int NOT NULL")]
        public int MultimediaTypeID {
            get {
                return this._MultimediaTypeID;
            }
            set {
                if ((this._MultimediaTypeID != value)) {
                    this._MultimediaTypeID = value;
                }
            }
        }

        [Column(Name = "intCatID", Storage = "_CatID", DbType = "Int NOT NULL")]
        public int CatID {
            get {
                return this._CatID;
            }
            set {
                if ((this._CatID != value)) {
                    this._CatID = value;
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntraCatID", DbType = "Int NOT NULL")]
        public int IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this._IntraCatID = value;
                }
            }
        }

        [Column(Name = "intMultimediaID", Storage = "_MultimediaID", DbType = "Int NOT NULL")]
        public int MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this._MultimediaID = value;
                }
            }
        }

        [Column(Name = "vchrCaption", Storage = "_Caption", DbType = "VarChar(255)")]
        public string Caption {
            get {
                return this._Caption;
            }
            set {
                if ((this._Caption != value)) {
                    this._Caption = value;
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_UseInReport", DbType = "Bit NOT NULL")]
        public bool UseInReport {
            get {
                return this._UseInReport;
            }
            set {
                if ((this._UseInReport != value)) {
                    this._UseInReport = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    [Table(Name = "dbo.tblMultimediaType")]
    public partial class TMultimediaType : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MultimediaTypeID;

        private string _MultimediaType;

        private System.Nullable<int> _CategoryID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMultimediaTypeIDChanging(int value);
        partial void OnMultimediaTypeIDChanged();
        partial void OnMultimediaTypeChanging(string value);
        partial void OnMultimediaTypeChanged();
        partial void OnCategoryIDChanging(System.Nullable<int> value);
        partial void OnCategoryIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TMultimediaType() {
            OnCreated();
        }

        [Column(Name = "intMultimediaTypeID", Storage = "_MultimediaTypeID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MultimediaTypeID {
            get {
                return this._MultimediaTypeID;
            }
            set {
                if ((this._MultimediaTypeID != value)) {
                    this.OnMultimediaTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._MultimediaTypeID = value;
                    this.SendPropertyChanged("MultimediaTypeID");
                    this.OnMultimediaTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrMultimediaType", Storage = "_MultimediaType", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this.OnMultimediaTypeChanging(value);
                    this.SendPropertyChanging();
                    this._MultimediaType = value;
                    this.SendPropertyChanged("MultimediaType");
                    this.OnMultimediaTypeChanged();
                }
            }
        }

        [Column(Name = "intCategoryID", Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblNote")]
    public partial class TNote : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _NoteID;

        private int _NoteTypeID;

        private int _CatID;

        private int _IntraCatID;

        private string _Note;

        private System.Nullable<bool> _UseInReports;

        private System.Nullable<System.Guid> _GUID;

        private string _Author;

        private System.Nullable<int> _RefID;

        private string _RefPages;

        private string _Comments;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoteIDChanging(int value);
        partial void OnNoteIDChanged();
        partial void OnNoteTypeIDChanging(int value);
        partial void OnNoteTypeIDChanged();
        partial void OnCatIDChanging(int value);
        partial void OnCatIDChanged();
        partial void OnIntraCatIDChanging(int value);
        partial void OnIntraCatIDChanged();
        partial void OnNoteChanging(string value);
        partial void OnNoteChanged();
        partial void OnUseInReportsChanging(System.Nullable<bool> value);
        partial void OnUseInReportsChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnAuthorChanging(string value);
        partial void OnAuthorChanged();
        partial void OnRefIDChanging(System.Nullable<int> value);
        partial void OnRefIDChanged();
        partial void OnRefPagesChanging(string value);
        partial void OnRefPagesChanged();
        partial void OnCommentsChanging(string value);
        partial void OnCommentsChanged();
        #endregion

        public TNote() {
            OnCreated();
        }

        [Column(Name = "intNoteID", Storage = "_NoteID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int NoteID {
            get {
                return this._NoteID;
            }
            set {
                if ((this._NoteID != value)) {
                    this.OnNoteIDChanging(value);
                    this.SendPropertyChanging();
                    this._NoteID = value;
                    this.SendPropertyChanged("NoteID");
                    this.OnNoteIDChanged();
                }
            }
        }

        [Column(Name = "intNoteTypeID", Storage = "_NoteTypeID", DbType = "Int NOT NULL")]
        public int NoteTypeID {
            get {
                return this._NoteTypeID;
            }
            set {
                if ((this._NoteTypeID != value)) {
                    this.OnNoteTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._NoteTypeID = value;
                    this.SendPropertyChanged("NoteTypeID");
                    this.OnNoteTypeIDChanged();
                }
            }
        }

        [Column(Name = "intCatID", Storage = "_CatID", DbType = "Int NOT NULL")]
        public int CatID {
            get {
                return this._CatID;
            }
            set {
                if ((this._CatID != value)) {
                    this.OnCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._CatID = value;
                    this.SendPropertyChanged("CatID");
                    this.OnCatIDChanged();
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntraCatID", DbType = "Int NOT NULL")]
        public int IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this.OnIntraCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._IntraCatID = value;
                    this.SendPropertyChanged("IntraCatID");
                    this.OnIntraCatIDChanged();
                }
            }
        }

        [Column(Name = "txtNote", Storage = "_Note", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Note {
            get {
                return this._Note;
            }
            set {
                if ((this._Note != value)) {
                    this.OnNoteChanging(value);
                    this.SendPropertyChanging();
                    this._Note = value;
                    this.SendPropertyChanged("Note");
                    this.OnNoteChanged();
                }
            }
        }

        [Column(Name = "bitUseInReports", Storage = "_UseInReports", DbType = "Bit")]
        public System.Nullable<bool> UseInReports {
            get {
                return this._UseInReports;
            }
            set {
                if ((this._UseInReports != value)) {
                    this.OnUseInReportsChanging(value);
                    this.SendPropertyChanging();
                    this._UseInReports = value;
                    this.SendPropertyChanged("UseInReports");
                    this.OnUseInReportsChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_Author", DbType = "VarChar(255)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this.OnAuthorChanging(value);
                    this.SendPropertyChanging();
                    this._Author = value;
                    this.SendPropertyChanged("Author");
                    this.OnAuthorChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPages", Storage = "_RefPages", DbType = "VarChar(100)")]
        public string RefPages {
            get {
                return this._RefPages;
            }
            set {
                if ((this._RefPages != value)) {
                    this.OnRefPagesChanging(value);
                    this.SendPropertyChanging();
                    this._RefPages = value;
                    this.SendPropertyChanged("RefPages");
                    this.OnRefPagesChanged();
                }
            }
        }

        [Column(Name = "txtComments", Storage = "_Comments", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Comments {
            get {
                return this._Comments;
            }
            set {
                if ((this._Comments != value)) {
                    this.OnCommentsChanging(value);
                    this.SendPropertyChanging();
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblNoteType")]
    public partial class TNoteType : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _NoteTypeID;

        private string _NoteType;

        private System.Nullable<int> _CategoryID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNoteTypeIDChanging(int value);
        partial void OnNoteTypeIDChanged();
        partial void OnNoteTypeChanging(string value);
        partial void OnNoteTypeChanged();
        partial void OnCategoryIDChanging(System.Nullable<int> value);
        partial void OnCategoryIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TNoteType() {
            OnCreated();
        }

        [Column(Name = "intNoteTypeID", Storage = "_NoteTypeID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int NoteTypeID {
            get {
                return this._NoteTypeID;
            }
            set {
                if ((this._NoteTypeID != value)) {
                    this.OnNoteTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._NoteTypeID = value;
                    this.SendPropertyChanged("NoteTypeID");
                    this.OnNoteTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrNoteType", Storage = "_NoteType", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string NoteType {
            get {
                return this._NoteType;
            }
            set {
                if ((this._NoteType != value)) {
                    this.OnNoteTypeChanging(value);
                    this.SendPropertyChanging();
                    this._NoteType = value;
                    this.SendPropertyChanged("NoteType");
                    this.OnNoteTypeChanged();
                }
            }
        }

        [Column(Name = "intCategoryID", Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblPhrase")]
    public partial class TPhrase : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _PhraseID;

        private int _PhraseCatID;

        private string _Phrase;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnPhraseIDChanging(int value);
        partial void OnPhraseIDChanged();
        partial void OnPhraseCatIDChanging(int value);
        partial void OnPhraseCatIDChanged();
        partial void OnPhraseChanging(string value);
        partial void OnPhraseChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TPhrase() {
            OnCreated();
        }

        [Column(Name = "intPhraseID", Storage = "_PhraseID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int PhraseID {
            get {
                return this._PhraseID;
            }
            set {
                if ((this._PhraseID != value)) {
                    this.OnPhraseIDChanging(value);
                    this.SendPropertyChanging();
                    this._PhraseID = value;
                    this.SendPropertyChanged("PhraseID");
                    this.OnPhraseIDChanged();
                }
            }
        }

        [Column(Name = "intPhraseCatID", Storage = "_PhraseCatID", DbType = "Int NOT NULL")]
        public int PhraseCatID {
            get {
                return this._PhraseCatID;
            }
            set {
                if ((this._PhraseCatID != value)) {
                    this.OnPhraseCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._PhraseCatID = value;
                    this.SendPropertyChanged("PhraseCatID");
                    this.OnPhraseCatIDChanged();
                }
            }
        }

        [Column(Name = "vchrPhrase", Storage = "_Phrase", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Phrase {
            get {
                return this._Phrase;
            }
            set {
                if ((this._Phrase != value)) {
                    this.OnPhraseChanging(value);
                    this.SendPropertyChanging();
                    this._Phrase = value;
                    this.SendPropertyChanged("Phrase");
                    this.OnPhraseChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblPhraseCategory")]
    public partial class TPhraseCategory : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _PhraseCatID;

        private string _Category;

        private bool _Fixed;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnPhraseCatIDChanging(int value);
        partial void OnPhraseCatIDChanged();
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
        partial void OnFixedChanging(bool value);
        partial void OnFixedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TPhraseCategory() {
            OnCreated();
        }

        [Column(Name = "intPhraseCatID", Storage = "_PhraseCatID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int PhraseCatID {
            get {
                return this._PhraseCatID;
            }
            set {
                if ((this._PhraseCatID != value)) {
                    this.OnPhraseCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._PhraseCatID = value;
                    this.SendPropertyChanged("PhraseCatID");
                    this.OnPhraseCatIDChanged();
                }
            }
        }

        [Column(Name = "vchrCategory", Storage = "_Category", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this.OnCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }

        [Column(Name = "bitFixed", Storage = "_Fixed", DbType = "Bit NOT NULL")]
        public bool Fixed {
            get {
                return this._Fixed;
            }
            set {
                if ((this._Fixed != value)) {
                    this.OnFixedChanging(value);
                    this.SendPropertyChanging();
                    this._Fixed = value;
                    this.SendPropertyChanged("Fixed");
                    this.OnFixedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblPoliticalRegion")]
    public partial class TPoliticalRegion : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _PoliticalRegionID;

        private string _Name;

        private System.Nullable<int> _ParentID;

        private System.Nullable<int> _Order;

        private string _Parentage;

        private string _Rank;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _FullName;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnPoliticalRegionIDChanging(int value);
        partial void OnPoliticalRegionIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnParentIDChanging(System.Nullable<int> value);
        partial void OnParentIDChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnRankChanging(string value);
        partial void OnRankChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        #endregion

        public TPoliticalRegion() {
            OnCreated();
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_PoliticalRegionID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int PoliticalRegionID {
            get {
                return this._PoliticalRegionID;
            }
            set {
                if ((this._PoliticalRegionID != value)) {
                    this.OnPoliticalRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PoliticalRegionID = value;
                    this.SendPropertyChanged("PoliticalRegionID");
                    this.OnPoliticalRegionIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_Rank", DbType = "VarChar(255)")]
        public string Rank {
            get {
                return this._Rank;
            }
            set {
                if ((this._Rank != value)) {
                    this.OnRankChanging(value);
                    this.SendPropertyChanging();
                    this._Rank = value;
                    this.SendPropertyChanged("Rank");
                    this.OnRankChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_FullName", DbType = "VarChar(2000)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this.OnFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._FullName = value;
                    this.SendPropertyChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblPublication")]
    public partial class TPublication : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _PublicationID;

        private string _Name;

        private string _XMLData;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnPublicationIDChanging(int value);
        partial void OnPublicationIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnXMLDataChanging(string value);
        partial void OnXMLDataChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        #endregion

        public TPublication() {
            OnCreated();
        }

        [Column(Name = "intPublicationID", Storage = "_PublicationID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int PublicationID {
            get {
                return this._PublicationID;
            }
            set {
                if ((this._PublicationID != value)) {
                    this.OnPublicationIDChanging(value);
                    this.SendPropertyChanging();
                    this._PublicationID = value;
                    this.SendPropertyChanged("PublicationID");
                    this.OnPublicationIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "txtXMLData", Storage = "_XMLData", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string XMLData {
            get {
                return this._XMLData;
            }
            set {
                if ((this._XMLData != value)) {
                    this.OnXMLDataChanging(value);
                    this.SendPropertyChanging();
                    this._XMLData = value;
                    this.SendPropertyChanged("XMLData");
                    this.OnXMLDataChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblReference")]
    public partial class TReference : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _RefID;

        private string _RefCode;

        private string _Author;

        private string _Title;

        private string _BookTitle;

        private string _Editor;

        private string _RefType;

        private string _YearOfPub;

        private string _ActualDate;

        private System.Nullable<int> _JournalID;

        private string _PartNo;

        private string _Series;

        private string _Publisher;

        private string _Place;

        private string _Volume;

        private string _Pages;

        private string _TotalPages;

        private string _Possess;

        private string _Source;

        private string _Edition;

        private string _ISBN;

        private string _ISSN;

        private string _Abstract;

        private string _FullText;

        private string _FullRTF;

        private System.Nullable<int> _StartPage;

        private System.Nullable<int> _EndPage;

        private System.Nullable<System.Guid> _GUID;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRefIDChanging(int value);
        partial void OnRefIDChanged();
        partial void OnRefCodeChanging(string value);
        partial void OnRefCodeChanged();
        partial void OnAuthorChanging(string value);
        partial void OnAuthorChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnBookTitleChanging(string value);
        partial void OnBookTitleChanged();
        partial void OnEditorChanging(string value);
        partial void OnEditorChanged();
        partial void OnRefTypeChanging(string value);
        partial void OnRefTypeChanged();
        partial void OnYearOfPubChanging(string value);
        partial void OnYearOfPubChanged();
        partial void OnActualDateChanging(string value);
        partial void OnActualDateChanged();
        partial void OnJournalIDChanging(System.Nullable<int> value);
        partial void OnJournalIDChanged();
        partial void OnPartNoChanging(string value);
        partial void OnPartNoChanged();
        partial void OnSeriesChanging(string value);
        partial void OnSeriesChanged();
        partial void OnPublisherChanging(string value);
        partial void OnPublisherChanged();
        partial void OnPlaceChanging(string value);
        partial void OnPlaceChanged();
        partial void OnVolumeChanging(string value);
        partial void OnVolumeChanged();
        partial void OnPagesChanging(string value);
        partial void OnPagesChanged();
        partial void OnTotalPagesChanging(string value);
        partial void OnTotalPagesChanged();
        partial void OnPossessChanging(string value);
        partial void OnPossessChanged();
        partial void OnSourceChanging(string value);
        partial void OnSourceChanged();
        partial void OnEditionChanging(string value);
        partial void OnEditionChanged();
        partial void OnISBNChanging(string value);
        partial void OnISBNChanged();
        partial void OnISSNChanging(string value);
        partial void OnISSNChanged();
        partial void OnAbstractChanging(string value);
        partial void OnAbstractChanged();
        partial void OnFullTextChanging(string value);
        partial void OnFullTextChanged();
        partial void OnFullRTFChanging(string value);
        partial void OnFullRTFChanged();
        partial void OnStartPageChanging(System.Nullable<int> value);
        partial void OnStartPageChanged();
        partial void OnEndPageChanging(System.Nullable<int> value);
        partial void OnEndPageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        #endregion

        public TReference() {
            OnCreated();
        }

        [Column(Name = "intRefID", Storage = "_RefID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_RefCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string RefCode {
            get {
                return this._RefCode;
            }
            set {
                if ((this._RefCode != value)) {
                    this.OnRefCodeChanging(value);
                    this.SendPropertyChanging();
                    this._RefCode = value;
                    this.SendPropertyChanged("RefCode");
                    this.OnRefCodeChanged();
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_Author", DbType = "VarChar(900)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this.OnAuthorChanging(value);
                    this.SendPropertyChanging();
                    this._Author = value;
                    this.SendPropertyChanged("Author");
                    this.OnAuthorChanged();
                }
            }
        }

        [Column(Name = "vchrTitle", Storage = "_Title", DbType = "VarChar(900)")]
        public string Title {
            get {
                return this._Title;
            }
            set {
                if ((this._Title != value)) {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [Column(Name = "vchrBookTitle", Storage = "_BookTitle", DbType = "VarChar(900)")]
        public string BookTitle {
            get {
                return this._BookTitle;
            }
            set {
                if ((this._BookTitle != value)) {
                    this.OnBookTitleChanging(value);
                    this.SendPropertyChanging();
                    this._BookTitle = value;
                    this.SendPropertyChanged("BookTitle");
                    this.OnBookTitleChanged();
                }
            }
        }

        [Column(Name = "vchrEditor", Storage = "_Editor", DbType = "VarChar(500)")]
        public string Editor {
            get {
                return this._Editor;
            }
            set {
                if ((this._Editor != value)) {
                    this.OnEditorChanging(value);
                    this.SendPropertyChanging();
                    this._Editor = value;
                    this.SendPropertyChanged("Editor");
                    this.OnEditorChanged();
                }
            }
        }

        [Column(Name = "vchrRefType", Storage = "_RefType", DbType = "VarChar(20)")]
        public string RefType {
            get {
                return this._RefType;
            }
            set {
                if ((this._RefType != value)) {
                    this.OnRefTypeChanging(value);
                    this.SendPropertyChanging();
                    this._RefType = value;
                    this.SendPropertyChanged("RefType");
                    this.OnRefTypeChanged();
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_YearOfPub", DbType = "VarChar(10)")]
        public string YearOfPub {
            get {
                return this._YearOfPub;
            }
            set {
                if ((this._YearOfPub != value)) {
                    this.OnYearOfPubChanging(value);
                    this.SendPropertyChanging();
                    this._YearOfPub = value;
                    this.SendPropertyChanged("YearOfPub");
                    this.OnYearOfPubChanged();
                }
            }
        }

        [Column(Name = "vchrActualDate", Storage = "_ActualDate", DbType = "VarChar(50)")]
        public string ActualDate {
            get {
                return this._ActualDate;
            }
            set {
                if ((this._ActualDate != value)) {
                    this.OnActualDateChanging(value);
                    this.SendPropertyChanging();
                    this._ActualDate = value;
                    this.SendPropertyChanged("ActualDate");
                    this.OnActualDateChanged();
                }
            }
        }

        [Column(Name = "intJournalID", Storage = "_JournalID", DbType = "Int")]
        public System.Nullable<int> JournalID {
            get {
                return this._JournalID;
            }
            set {
                if ((this._JournalID != value)) {
                    this.OnJournalIDChanging(value);
                    this.SendPropertyChanging();
                    this._JournalID = value;
                    this.SendPropertyChanged("JournalID");
                    this.OnJournalIDChanged();
                }
            }
        }

        [Column(Name = "vchrPartNo", Storage = "_PartNo", DbType = "VarChar(50)")]
        public string PartNo {
            get {
                return this._PartNo;
            }
            set {
                if ((this._PartNo != value)) {
                    this.OnPartNoChanging(value);
                    this.SendPropertyChanging();
                    this._PartNo = value;
                    this.SendPropertyChanged("PartNo");
                    this.OnPartNoChanged();
                }
            }
        }

        [Column(Name = "vchrSeries", Storage = "_Series", DbType = "VarChar(50)")]
        public string Series {
            get {
                return this._Series;
            }
            set {
                if ((this._Series != value)) {
                    this.OnSeriesChanging(value);
                    this.SendPropertyChanging();
                    this._Series = value;
                    this.SendPropertyChanged("Series");
                    this.OnSeriesChanged();
                }
            }
        }

        [Column(Name = "vchrPublisher", Storage = "_Publisher", DbType = "VarChar(200)")]
        public string Publisher {
            get {
                return this._Publisher;
            }
            set {
                if ((this._Publisher != value)) {
                    this.OnPublisherChanging(value);
                    this.SendPropertyChanging();
                    this._Publisher = value;
                    this.SendPropertyChanged("Publisher");
                    this.OnPublisherChanged();
                }
            }
        }

        [Column(Name = "vchrPlace", Storage = "_Place", DbType = "VarChar(200)")]
        public string Place {
            get {
                return this._Place;
            }
            set {
                if ((this._Place != value)) {
                    this.OnPlaceChanging(value);
                    this.SendPropertyChanging();
                    this._Place = value;
                    this.SendPropertyChanged("Place");
                    this.OnPlaceChanged();
                }
            }
        }

        [Column(Name = "vchrVolume", Storage = "_Volume", DbType = "VarChar(50)")]
        public string Volume {
            get {
                return this._Volume;
            }
            set {
                if ((this._Volume != value)) {
                    this.OnVolumeChanging(value);
                    this.SendPropertyChanging();
                    this._Volume = value;
                    this.SendPropertyChanged("Volume");
                    this.OnVolumeChanged();
                }
            }
        }

        [Column(Name = "vchrPages", Storage = "_Pages", DbType = "VarChar(50)")]
        public string Pages {
            get {
                return this._Pages;
            }
            set {
                if ((this._Pages != value)) {
                    this.OnPagesChanging(value);
                    this.SendPropertyChanging();
                    this._Pages = value;
                    this.SendPropertyChanged("Pages");
                    this.OnPagesChanged();
                }
            }
        }

        [Column(Name = "vchrTotalPages", Storage = "_TotalPages", DbType = "VarChar(50)")]
        public string TotalPages {
            get {
                return this._TotalPages;
            }
            set {
                if ((this._TotalPages != value)) {
                    this.OnTotalPagesChanging(value);
                    this.SendPropertyChanging();
                    this._TotalPages = value;
                    this.SendPropertyChanged("TotalPages");
                    this.OnTotalPagesChanged();
                }
            }
        }

        [Column(Name = "vchrPossess", Storage = "_Possess", DbType = "VarChar(50)")]
        public string Possess {
            get {
                return this._Possess;
            }
            set {
                if ((this._Possess != value)) {
                    this.OnPossessChanging(value);
                    this.SendPropertyChanging();
                    this._Possess = value;
                    this.SendPropertyChanged("Possess");
                    this.OnPossessChanged();
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_Source", DbType = "VarChar(50)")]
        public string Source {
            get {
                return this._Source;
            }
            set {
                if ((this._Source != value)) {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [Column(Name = "vchrEdition", Storage = "_Edition", DbType = "VarChar(50)")]
        public string Edition {
            get {
                return this._Edition;
            }
            set {
                if ((this._Edition != value)) {
                    this.OnEditionChanging(value);
                    this.SendPropertyChanging();
                    this._Edition = value;
                    this.SendPropertyChanged("Edition");
                    this.OnEditionChanged();
                }
            }
        }

        [Column(Name = "vchrISBN", Storage = "_ISBN", DbType = "VarChar(30)")]
        public string ISBN {
            get {
                return this._ISBN;
            }
            set {
                if ((this._ISBN != value)) {
                    this.OnISBNChanging(value);
                    this.SendPropertyChanging();
                    this._ISBN = value;
                    this.SendPropertyChanged("ISBN");
                    this.OnISBNChanged();
                }
            }
        }

        [Column(Name = "vchrISSN", Storage = "_ISSN", DbType = "VarChar(30)")]
        public string ISSN {
            get {
                return this._ISSN;
            }
            set {
                if ((this._ISSN != value)) {
                    this.OnISSNChanging(value);
                    this.SendPropertyChanging();
                    this._ISSN = value;
                    this.SendPropertyChanged("ISSN");
                    this.OnISSNChanged();
                }
            }
        }

        [Column(Name = "txtAbstract", Storage = "_Abstract", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string Abstract {
            get {
                return this._Abstract;
            }
            set {
                if ((this._Abstract != value)) {
                    this.OnAbstractChanging(value);
                    this.SendPropertyChanging();
                    this._Abstract = value;
                    this.SendPropertyChanged("Abstract");
                    this.OnAbstractChanged();
                }
            }
        }

        [Column(Name = "txtFullText", Storage = "_FullText", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string FullText {
            get {
                return this._FullText;
            }
            set {
                if ((this._FullText != value)) {
                    this.OnFullTextChanging(value);
                    this.SendPropertyChanging();
                    this._FullText = value;
                    this.SendPropertyChanged("FullText");
                    this.OnFullTextChanged();
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_FullRTF", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string FullRTF {
            get {
                return this._FullRTF;
            }
            set {
                if ((this._FullRTF != value)) {
                    this.OnFullRTFChanging(value);
                    this.SendPropertyChanging();
                    this._FullRTF = value;
                    this.SendPropertyChanged("FullRTF");
                    this.OnFullRTFChanged();
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_StartPage", DbType = "Int")]
        public System.Nullable<int> StartPage {
            get {
                return this._StartPage;
            }
            set {
                if ((this._StartPage != value)) {
                    this.OnStartPageChanging(value);
                    this.SendPropertyChanging();
                    this._StartPage = value;
                    this.SendPropertyChanged("StartPage");
                    this.OnStartPageChanged();
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_EndPage", DbType = "Int")]
        public System.Nullable<int> EndPage {
            get {
                return this._EndPage;
            }
            set {
                if ((this._EndPage != value)) {
                    this.OnEndPageChanging(value);
                    this.SendPropertyChanging();
                    this._EndPage = value;
                    this.SendPropertyChanged("EndPage");
                    this.OnEndPageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblRefLink")]
    public partial class TRefLink : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _RefLinkID;

        private int _RefLinkTypeID;

        private int _CatID;

        private int _IntraCatID;

        private int _RefID;

        private string _RefPage;

        private string _RefQual;

        private System.Nullable<int> _Order;

        private System.Nullable<bool> _UseInReport;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRefLinkIDChanging(int value);
        partial void OnRefLinkIDChanged();
        partial void OnRefLinkTypeIDChanging(int value);
        partial void OnRefLinkTypeIDChanged();
        partial void OnCatIDChanging(int value);
        partial void OnCatIDChanged();
        partial void OnIntraCatIDChanging(int value);
        partial void OnIntraCatIDChanged();
        partial void OnRefIDChanging(int value);
        partial void OnRefIDChanged();
        partial void OnRefPageChanging(string value);
        partial void OnRefPageChanged();
        partial void OnRefQualChanging(string value);
        partial void OnRefQualChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnUseInReportChanging(System.Nullable<bool> value);
        partial void OnUseInReportChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TRefLink() {
            OnCreated();
        }

        [Column(Name = "intRefLinkID", Storage = "_RefLinkID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int RefLinkID {
            get {
                return this._RefLinkID;
            }
            set {
                if ((this._RefLinkID != value)) {
                    this.OnRefLinkIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefLinkID = value;
                    this.SendPropertyChanged("RefLinkID");
                    this.OnRefLinkIDChanged();
                }
            }
        }

        [Column(Name = "intRefLinkTypeID", Storage = "_RefLinkTypeID", DbType = "Int NOT NULL")]
        public int RefLinkTypeID {
            get {
                return this._RefLinkTypeID;
            }
            set {
                if ((this._RefLinkTypeID != value)) {
                    this.OnRefLinkTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefLinkTypeID = value;
                    this.SendPropertyChanged("RefLinkTypeID");
                    this.OnRefLinkTypeIDChanged();
                }
            }
        }

        [Column(Name = "intCatID", Storage = "_CatID", DbType = "Int NOT NULL")]
        public int CatID {
            get {
                return this._CatID;
            }
            set {
                if ((this._CatID != value)) {
                    this.OnCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._CatID = value;
                    this.SendPropertyChanged("CatID");
                    this.OnCatIDChanged();
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntraCatID", DbType = "Int NOT NULL")]
        public int IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this.OnIntraCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._IntraCatID = value;
                    this.SendPropertyChanged("IntraCatID");
                    this.OnIntraCatIDChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int NOT NULL")]
        public int RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_RefPage", DbType = "VarChar(50)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this.OnRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._RefPage = value;
                    this.SendPropertyChanged("RefPage");
                    this.OnRefPageChanged();
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_RefQual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string RefQual {
            get {
                return this._RefQual;
            }
            set {
                if ((this._RefQual != value)) {
                    this.OnRefQualChanging(value);
                    this.SendPropertyChanging();
                    this._RefQual = value;
                    this.SendPropertyChanged("RefQual");
                    this.OnRefQualChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_UseInReport", DbType = "Bit")]
        public System.Nullable<bool> UseInReport {
            get {
                return this._UseInReport;
            }
            set {
                if ((this._UseInReport != value)) {
                    this.OnUseInReportChanging(value);
                    this.SendPropertyChanging();
                    this._UseInReport = value;
                    this.SendPropertyChanged("UseInReport");
                    this.OnUseInReportChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblRefLinkType")]
    public partial class TRefLinkType : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _RefLinkTypeID;

        private string _RefLinkType;

        private System.Nullable<int> _CategoryID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnRefLinkTypeIDChanging(int value);
        partial void OnRefLinkTypeIDChanged();
        partial void OnRefLinkTypeChanging(string value);
        partial void OnRefLinkTypeChanged();
        partial void OnCategoryIDChanging(System.Nullable<int> value);
        partial void OnCategoryIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TRefLinkType() {
            OnCreated();
        }

        [Column(Name = "intRefLinkTypeID", Storage = "_RefLinkTypeID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int RefLinkTypeID {
            get {
                return this._RefLinkTypeID;
            }
            set {
                if ((this._RefLinkTypeID != value)) {
                    this.OnRefLinkTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefLinkTypeID = value;
                    this.SendPropertyChanged("RefLinkTypeID");
                    this.OnRefLinkTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefLinkType", Storage = "_RefLinkType", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string RefLinkType {
            get {
                return this._RefLinkType;
            }
            set {
                if ((this._RefLinkType != value)) {
                    this.OnRefLinkTypeChanging(value);
                    this.SendPropertyChanging();
                    this._RefLinkType = value;
                    this.SendPropertyChanged("RefLinkType");
                    this.OnRefLinkTypeChanged();
                }
            }
        }

        [Column(Name = "intCategoryID", Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblReport")]
    public partial class TReport : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ReportID;

        private string _Name;

        private string _Owner;

        private string _ReportXML;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private string _Context;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnReportIDChanging(int value);
        partial void OnReportIDChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnOwnerChanging(string value);
        partial void OnOwnerChanged();
        partial void OnReportXMLChanging(string value);
        partial void OnReportXMLChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnContextChanging(string value);
        partial void OnContextChanged();
        #endregion

        public TReport() {
            OnCreated();
        }

        [Column(Name = "intReportID", Storage = "_ReportID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ReportID {
            get {
                return this._ReportID;
            }
            set {
                if ((this._ReportID != value)) {
                    this.OnReportIDChanging(value);
                    this.SendPropertyChanging();
                    this._ReportID = value;
                    this.SendPropertyChanged("ReportID");
                    this.OnReportIDChanged();
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "vchrOwner", Storage = "_Owner", DbType = "VarChar(50)")]
        public string Owner {
            get {
                return this._Owner;
            }
            set {
                if ((this._Owner != value)) {
                    this.OnOwnerChanging(value);
                    this.SendPropertyChanging();
                    this._Owner = value;
                    this.SendPropertyChanged("Owner");
                    this.OnOwnerChanged();
                }
            }
        }

        [Column(Name = "txtReportXML", Storage = "_ReportXML", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string ReportXML {
            get {
                return this._ReportXML;
            }
            set {
                if ((this._ReportXML != value)) {
                    this.OnReportXMLChanging(value);
                    this.SendPropertyChanging();
                    this._ReportXML = value;
                    this.SendPropertyChanged("ReportXML");
                    this.OnReportXMLChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrContext", Storage = "_Context", DbType = "VarChar(50)")]
        public string Context {
            get {
                return this._Context;
            }
            set {
                if ((this._Context != value)) {
                    this.OnContextChanging(value);
                    this.SendPropertyChanging();
                    this._Context = value;
                    this.SendPropertyChanged("Context");
                    this.OnContextChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSAN")]
    public partial class TSAN : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _BiotaID;

        private System.Nullable<int> _RefID;

        private string _RefPage;

        private string _RefQual;

        private string _PrimaryType;

        private string _SecondaryType;

        private bool _PrimaryTypeProbable;

        private bool _SecondaryTypeProbable;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnRefIDChanging(System.Nullable<int> value);
        partial void OnRefIDChanged();
        partial void OnRefPageChanging(string value);
        partial void OnRefPageChanged();
        partial void OnRefQualChanging(string value);
        partial void OnRefQualChanged();
        partial void OnPrimaryTypeChanging(string value);
        partial void OnPrimaryTypeChanged();
        partial void OnSecondaryTypeChanging(string value);
        partial void OnSecondaryTypeChanged();
        partial void OnPrimaryTypeProbableChanging(bool value);
        partial void OnPrimaryTypeProbableChanged();
        partial void OnSecondaryTypeProbableChanging(bool value);
        partial void OnSecondaryTypeProbableChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TSAN() {
            OnCreated();
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this.OnRefIDChanging(value);
                    this.SendPropertyChanging();
                    this._RefID = value;
                    this.SendPropertyChanged("RefID");
                    this.OnRefIDChanged();
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_RefPage", DbType = "VarChar(50)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this.OnRefPageChanging(value);
                    this.SendPropertyChanging();
                    this._RefPage = value;
                    this.SendPropertyChanged("RefPage");
                    this.OnRefPageChanged();
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_RefQual", DbType = "Text", UpdateCheck = UpdateCheck.Never)]
        public string RefQual {
            get {
                return this._RefQual;
            }
            set {
                if ((this._RefQual != value)) {
                    this.OnRefQualChanging(value);
                    this.SendPropertyChanging();
                    this._RefQual = value;
                    this.SendPropertyChanged("RefQual");
                    this.OnRefQualChanged();
                }
            }
        }

        [Column(Name = "vchrPrimaryType", Storage = "_PrimaryType", DbType = "VarChar(50)")]
        public string PrimaryType {
            get {
                return this._PrimaryType;
            }
            set {
                if ((this._PrimaryType != value)) {
                    this.OnPrimaryTypeChanging(value);
                    this.SendPropertyChanging();
                    this._PrimaryType = value;
                    this.SendPropertyChanged("PrimaryType");
                    this.OnPrimaryTypeChanged();
                }
            }
        }

        [Column(Name = "vchrSecondaryType", Storage = "_SecondaryType", DbType = "VarChar(50)")]
        public string SecondaryType {
            get {
                return this._SecondaryType;
            }
            set {
                if ((this._SecondaryType != value)) {
                    this.OnSecondaryTypeChanging(value);
                    this.SendPropertyChanging();
                    this._SecondaryType = value;
                    this.SendPropertyChanged("SecondaryType");
                    this.OnSecondaryTypeChanged();
                }
            }
        }

        [Column(Name = "bitPrimaryTypeProbable", Storage = "_PrimaryTypeProbable", DbType = "Bit NOT NULL")]
        public bool PrimaryTypeProbable {
            get {
                return this._PrimaryTypeProbable;
            }
            set {
                if ((this._PrimaryTypeProbable != value)) {
                    this.OnPrimaryTypeProbableChanging(value);
                    this.SendPropertyChanging();
                    this._PrimaryTypeProbable = value;
                    this.SendPropertyChanged("PrimaryTypeProbable");
                    this.OnPrimaryTypeProbableChanged();
                }
            }
        }

        [Column(Name = "bitSecondaryTypeProbable", Storage = "_SecondaryTypeProbable", DbType = "Bit NOT NULL")]
        public bool SecondaryTypeProbable {
            get {
                return this._SecondaryTypeProbable;
            }
            set {
                if ((this._SecondaryTypeProbable != value)) {
                    this.OnSecondaryTypeProbableChanging(value);
                    this.SendPropertyChanging();
                    this._SecondaryTypeProbable = value;
                    this.SendPropertyChanged("SecondaryTypeProbable");
                    this.OnSecondaryTypeProbableChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSANTypeData")]
    public partial class TSANTypeData : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SANTypeDataID;

        private int _BiotaID;

        private string _Type;

        private string _Museum;

        private string _AccessionNum;

        private string _Material;

        private string _Locality;

        private bool _IDConfirmed;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _MaterialID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSANTypeDataIDChanging(int value);
        partial void OnSANTypeDataIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        partial void OnMuseumChanging(string value);
        partial void OnMuseumChanged();
        partial void OnAccessionNumChanging(string value);
        partial void OnAccessionNumChanged();
        partial void OnMaterialChanging(string value);
        partial void OnMaterialChanged();
        partial void OnLocalityChanging(string value);
        partial void OnLocalityChanged();
        partial void OnIDConfirmedChanging(bool value);
        partial void OnIDConfirmedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnMaterialIDChanging(System.Nullable<int> value);
        partial void OnMaterialIDChanged();
        #endregion

        public TSANTypeData() {
            OnCreated();
        }

        [Column(Name = "intSANTypeDataID", Storage = "_SANTypeDataID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SANTypeDataID {
            get {
                return this._SANTypeDataID;
            }
            set {
                if ((this._SANTypeDataID != value)) {
                    this.OnSANTypeDataIDChanging(value);
                    this.SendPropertyChanging();
                    this._SANTypeDataID = value;
                    this.SendPropertyChanged("SANTypeDataID");
                    this.OnSANTypeDataIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL")]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_Type", DbType = "VarChar(50)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [Column(Name = "vchrMuseum", Storage = "_Museum", DbType = "VarChar(255)")]
        public string Museum {
            get {
                return this._Museum;
            }
            set {
                if ((this._Museum != value)) {
                    this.OnMuseumChanging(value);
                    this.SendPropertyChanging();
                    this._Museum = value;
                    this.SendPropertyChanged("Museum");
                    this.OnMuseumChanged();
                }
            }
        }

        [Column(Name = "vchrAccessionNum", Storage = "_AccessionNum", DbType = "VarChar(50)")]
        public string AccessionNum {
            get {
                return this._AccessionNum;
            }
            set {
                if ((this._AccessionNum != value)) {
                    this.OnAccessionNumChanging(value);
                    this.SendPropertyChanging();
                    this._AccessionNum = value;
                    this.SendPropertyChanged("AccessionNum");
                    this.OnAccessionNumChanged();
                }
            }
        }

        [Column(Name = "vchrMaterial", Storage = "_Material", DbType = "VarChar(50)")]
        public string Material {
            get {
                return this._Material;
            }
            set {
                if ((this._Material != value)) {
                    this.OnMaterialChanging(value);
                    this.SendPropertyChanging();
                    this._Material = value;
                    this.SendPropertyChanged("Material");
                    this.OnMaterialChanged();
                }
            }
        }

        [Column(Name = "vchrLocality", Storage = "_Locality", DbType = "VarChar(255)")]
        public string Locality {
            get {
                return this._Locality;
            }
            set {
                if ((this._Locality != value)) {
                    this.OnLocalityChanging(value);
                    this.SendPropertyChanging();
                    this._Locality = value;
                    this.SendPropertyChanged("Locality");
                    this.OnLocalityChanged();
                }
            }
        }

        [Column(Name = "bitIDConfirmed", Storage = "_IDConfirmed", DbType = "Bit NOT NULL")]
        public bool IDConfirmed {
            get {
                return this._IDConfirmed;
            }
            set {
                if ((this._IDConfirmed != value)) {
                    this.OnIDConfirmedChanging(value);
                    this.SendPropertyChanging();
                    this._IDConfirmed = value;
                    this.SendPropertyChanged("IDConfirmed");
                    this.OnIDConfirmedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_MaterialID", DbType = "Int")]
        public System.Nullable<int> MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this.OnMaterialIDChanging(value);
                    this.SendPropertyChanging();
                    this._MaterialID = value;
                    this.SendPropertyChanged("MaterialID");
                    this.OnMaterialIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSANTypeDataType")]
    public partial class TSANTypeDataType : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ChrKingdomCode;

        private string _PrimaryType;

        private string _SecondaryTypes;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnChrKingdomCodeChanging(string value);
        partial void OnChrKingdomCodeChanged();
        partial void OnPrimaryTypeChanging(string value);
        partial void OnPrimaryTypeChanged();
        partial void OnSecondaryTypesChanging(string value);
        partial void OnSecondaryTypesChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TSANTypeDataType() {
            OnCreated();
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(5) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this.OnChrKingdomCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ChrKingdomCode = value;
                    this.SendPropertyChanged("ChrKingdomCode");
                    this.OnChrKingdomCodeChanged();
                }
            }
        }

        [Column(Name = "vchrPrimaryType", Storage = "_PrimaryType", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string PrimaryType {
            get {
                return this._PrimaryType;
            }
            set {
                if ((this._PrimaryType != value)) {
                    this.OnPrimaryTypeChanging(value);
                    this.SendPropertyChanging();
                    this._PrimaryType = value;
                    this.SendPropertyChanged("PrimaryType");
                    this.OnPrimaryTypeChanged();
                }
            }
        }

        [Column(Name = "vchrSecondaryTypes", Storage = "_SecondaryTypes", DbType = "VarChar(250) NOT NULL", CanBeNull = false)]
        public string SecondaryTypes {
            get {
                return this._SecondaryTypes;
            }
            set {
                if ((this._SecondaryTypes != value)) {
                    this.OnSecondaryTypesChanging(value);
                    this.SendPropertyChanging();
                    this._SecondaryTypes = value;
                    this.SendPropertyChanged("SecondaryTypes");
                    this.OnSecondaryTypesChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSetting")]
    public partial class TSetting : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Name;

        private string _Value;

        private string _Description;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TSetting() {
            OnCreated();
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(255) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_Value", DbType = "VarChar(255)")]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "Char(255)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSite")]
    public partial class TSite : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SiteID;

        private string _SiteName;

        private int _PoliticalRegionID;

        private System.Nullable<int> _SiteGroupID;

        private System.Nullable<byte> _TintLocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private string _InformalLocal;

        private System.Nullable<byte> _TintPosCoordinates;

        private System.Nullable<byte> _TintPosAreaType;

        private System.Nullable<double> _FltPosY1;

        private System.Nullable<double> _FltPosX1;

        private System.Nullable<double> _FltPosX2;

        private System.Nullable<double> _FltPosY2;

        private System.Nullable<byte> _TintPosXYDisplayFormat;

        private string _PosSource;

        private string _PosError;

        private string _PosWho;

        private string _PosDate;

        private string _PosOriginal;

        private string _PosUTMSource;

        private string _PosUTMMapProj;

        private string _PosUTMMapName;

        private string _PosUTMMapVer;

        private System.Nullable<byte> _TintElevType;

        private System.Nullable<double> _FltElevUpper;

        private System.Nullable<double> _FltElevLower;

        private System.Nullable<double> _FltElevDepth;

        private string _ElevUnits;

        private string _ElevSource;

        private string _ElevError;

        private string _GeoEra;

        private string _GeoState;

        private string _GeoPlate;

        private string _GeoFormation;

        private string _GeoMember;

        private string _GeoBed;

        private string _GeoName;

        private string _GeoAgeBottom;

        private string _GeoAgeTop;

        private string _GeoNotes;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private System.Nullable<int> _Order;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSiteIDChanging(int value);
        partial void OnSiteIDChanged();
        partial void OnSiteNameChanging(string value);
        partial void OnSiteNameChanged();
        partial void OnPoliticalRegionIDChanging(int value);
        partial void OnPoliticalRegionIDChanged();
        partial void OnSiteGroupIDChanging(System.Nullable<int> value);
        partial void OnSiteGroupIDChanged();
        partial void OnTintLocalTypeChanging(System.Nullable<byte> value);
        partial void OnTintLocalTypeChanged();
        partial void OnLocalChanging(string value);
        partial void OnLocalChanged();
        partial void OnDistanceFromPlaceChanging(string value);
        partial void OnDistanceFromPlaceChanged();
        partial void OnDirFromPlaceChanging(string value);
        partial void OnDirFromPlaceChanged();
        partial void OnInformalLocalChanging(string value);
        partial void OnInformalLocalChanged();
        partial void OnTintPosCoordinatesChanging(System.Nullable<byte> value);
        partial void OnTintPosCoordinatesChanged();
        partial void OnTintPosAreaTypeChanging(System.Nullable<byte> value);
        partial void OnTintPosAreaTypeChanged();
        partial void OnFltPosY1Changing(System.Nullable<double> value);
        partial void OnFltPosY1Changed();
        partial void OnFltPosX1Changing(System.Nullable<double> value);
        partial void OnFltPosX1Changed();
        partial void OnFltPosX2Changing(System.Nullable<double> value);
        partial void OnFltPosX2Changed();
        partial void OnFltPosY2Changing(System.Nullable<double> value);
        partial void OnFltPosY2Changed();
        partial void OnTintPosXYDisplayFormatChanging(System.Nullable<byte> value);
        partial void OnTintPosXYDisplayFormatChanged();
        partial void OnPosSourceChanging(string value);
        partial void OnPosSourceChanged();
        partial void OnPosErrorChanging(string value);
        partial void OnPosErrorChanged();
        partial void OnPosWhoChanging(string value);
        partial void OnPosWhoChanged();
        partial void OnPosDateChanging(string value);
        partial void OnPosDateChanged();
        partial void OnPosOriginalChanging(string value);
        partial void OnPosOriginalChanged();
        partial void OnPosUTMSourceChanging(string value);
        partial void OnPosUTMSourceChanged();
        partial void OnPosUTMMapProjChanging(string value);
        partial void OnPosUTMMapProjChanged();
        partial void OnPosUTMMapNameChanging(string value);
        partial void OnPosUTMMapNameChanged();
        partial void OnPosUTMMapVerChanging(string value);
        partial void OnPosUTMMapVerChanged();
        partial void OnTintElevTypeChanging(System.Nullable<byte> value);
        partial void OnTintElevTypeChanged();
        partial void OnFltElevUpperChanging(System.Nullable<double> value);
        partial void OnFltElevUpperChanged();
        partial void OnFltElevLowerChanging(System.Nullable<double> value);
        partial void OnFltElevLowerChanged();
        partial void OnFltElevDepthChanging(System.Nullable<double> value);
        partial void OnFltElevDepthChanged();
        partial void OnElevUnitsChanging(string value);
        partial void OnElevUnitsChanged();
        partial void OnElevSourceChanging(string value);
        partial void OnElevSourceChanged();
        partial void OnElevErrorChanging(string value);
        partial void OnElevErrorChanged();
        partial void OnGeoEraChanging(string value);
        partial void OnGeoEraChanged();
        partial void OnGeoStateChanging(string value);
        partial void OnGeoStateChanged();
        partial void OnGeoPlateChanging(string value);
        partial void OnGeoPlateChanged();
        partial void OnGeoFormationChanging(string value);
        partial void OnGeoFormationChanged();
        partial void OnGeoMemberChanging(string value);
        partial void OnGeoMemberChanged();
        partial void OnGeoBedChanging(string value);
        partial void OnGeoBedChanged();
        partial void OnGeoNameChanging(string value);
        partial void OnGeoNameChanged();
        partial void OnGeoAgeBottomChanging(string value);
        partial void OnGeoAgeBottomChanged();
        partial void OnGeoAgeTopChanging(string value);
        partial void OnGeoAgeTopChanged();
        partial void OnGeoNotesChanging(string value);
        partial void OnGeoNotesChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnOrderChanging(System.Nullable<int> value);
        partial void OnOrderChanged();
        partial void OnTintTemplateChanging(System.Nullable<byte> value);
        partial void OnTintTemplateChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TSite() {
            OnCreated();
        }

        [Column(Name = "intSiteID", Storage = "_SiteID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this.OnSiteIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteID = value;
                    this.SendPropertyChanged("SiteID");
                    this.OnSiteIDChanged();
                }
            }
        }

        [Column(Name = "vchrSiteName", Storage = "_SiteName", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string SiteName {
            get {
                return this._SiteName;
            }
            set {
                if ((this._SiteName != value)) {
                    this.OnSiteNameChanging(value);
                    this.SendPropertyChanging();
                    this._SiteName = value;
                    this.SendPropertyChanged("SiteName");
                    this.OnSiteNameChanged();
                }
            }
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_PoliticalRegionID", DbType = "Int NOT NULL")]
        public int PoliticalRegionID {
            get {
                return this._PoliticalRegionID;
            }
            set {
                if ((this._PoliticalRegionID != value)) {
                    this.OnPoliticalRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PoliticalRegionID = value;
                    this.SendPropertyChanged("PoliticalRegionID");
                    this.OnPoliticalRegionIDChanged();
                }
            }
        }

        [Column(Name = "intSiteGroupID", Storage = "_SiteGroupID", DbType = "Int")]
        public System.Nullable<int> SiteGroupID {
            get {
                return this._SiteGroupID;
            }
            set {
                if ((this._SiteGroupID != value)) {
                    this.OnSiteGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteGroupID = value;
                    this.SendPropertyChanged("SiteGroupID");
                    this.OnSiteGroupIDChanged();
                }
            }
        }

        [Column(Name = "tintLocalType", Storage = "_TintLocalType", DbType = "TinyInt")]
        public System.Nullable<byte> TintLocalType {
            get {
                return this._TintLocalType;
            }
            set {
                if ((this._TintLocalType != value)) {
                    this.OnTintLocalTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TintLocalType = value;
                    this.SendPropertyChanged("TintLocalType");
                    this.OnTintLocalTypeChanged();
                }
            }
        }

        [Column(Name = "vchrLocal", Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this.OnLocalChanging(value);
                    this.SendPropertyChanging();
                    this._Local = value;
                    this.SendPropertyChanged("Local");
                    this.OnLocalChanged();
                }
            }
        }

        [Column(Name = "vchrDistanceFromPlace", Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this.OnDistanceFromPlaceChanging(value);
                    this.SendPropertyChanging();
                    this._DistanceFromPlace = value;
                    this.SendPropertyChanged("DistanceFromPlace");
                    this.OnDistanceFromPlaceChanged();
                }
            }
        }

        [Column(Name = "vchrDirFromPlace", Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this.OnDirFromPlaceChanging(value);
                    this.SendPropertyChanging();
                    this._DirFromPlace = value;
                    this.SendPropertyChanged("DirFromPlace");
                    this.OnDirFromPlaceChanged();
                }
            }
        }

        [Column(Name = "vchrInformalLocal", Storage = "_InformalLocal", DbType = "VarChar(255)")]
        public string InformalLocal {
            get {
                return this._InformalLocal;
            }
            set {
                if ((this._InformalLocal != value)) {
                    this.OnInformalLocalChanging(value);
                    this.SendPropertyChanging();
                    this._InformalLocal = value;
                    this.SendPropertyChanged("InformalLocal");
                    this.OnInformalLocalChanged();
                }
            }
        }

        [Column(Name = "tintPosCoordinates", Storage = "_TintPosCoordinates", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosCoordinates {
            get {
                return this._TintPosCoordinates;
            }
            set {
                if ((this._TintPosCoordinates != value)) {
                    this.OnTintPosCoordinatesChanging(value);
                    this.SendPropertyChanging();
                    this._TintPosCoordinates = value;
                    this.SendPropertyChanged("TintPosCoordinates");
                    this.OnTintPosCoordinatesChanged();
                }
            }
        }

        [Column(Name = "tintPosAreaType", Storage = "_TintPosAreaType", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosAreaType {
            get {
                return this._TintPosAreaType;
            }
            set {
                if ((this._TintPosAreaType != value)) {
                    this.OnTintPosAreaTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TintPosAreaType = value;
                    this.SendPropertyChanged("TintPosAreaType");
                    this.OnTintPosAreaTypeChanged();
                }
            }
        }

        [Column(Name = "fltPosY1", Storage = "_FltPosY1", DbType = "Float")]
        public System.Nullable<double> FltPosY1 {
            get {
                return this._FltPosY1;
            }
            set {
                if ((this._FltPosY1 != value)) {
                    this.OnFltPosY1Changing(value);
                    this.SendPropertyChanging();
                    this._FltPosY1 = value;
                    this.SendPropertyChanged("FltPosY1");
                    this.OnFltPosY1Changed();
                }
            }
        }

        [Column(Name = "fltPosX1", Storage = "_FltPosX1", DbType = "Float")]
        public System.Nullable<double> FltPosX1 {
            get {
                return this._FltPosX1;
            }
            set {
                if ((this._FltPosX1 != value)) {
                    this.OnFltPosX1Changing(value);
                    this.SendPropertyChanging();
                    this._FltPosX1 = value;
                    this.SendPropertyChanged("FltPosX1");
                    this.OnFltPosX1Changed();
                }
            }
        }

        [Column(Name = "fltPosX2", Storage = "_FltPosX2", DbType = "Float")]
        public System.Nullable<double> FltPosX2 {
            get {
                return this._FltPosX2;
            }
            set {
                if ((this._FltPosX2 != value)) {
                    this.OnFltPosX2Changing(value);
                    this.SendPropertyChanging();
                    this._FltPosX2 = value;
                    this.SendPropertyChanged("FltPosX2");
                    this.OnFltPosX2Changed();
                }
            }
        }

        [Column(Name = "fltPosY2", Storage = "_FltPosY2", DbType = "Float")]
        public System.Nullable<double> FltPosY2 {
            get {
                return this._FltPosY2;
            }
            set {
                if ((this._FltPosY2 != value)) {
                    this.OnFltPosY2Changing(value);
                    this.SendPropertyChanging();
                    this._FltPosY2 = value;
                    this.SendPropertyChanged("FltPosY2");
                    this.OnFltPosY2Changed();
                }
            }
        }

        [Column(Name = "tintPosXYDisplayFormat", Storage = "_TintPosXYDisplayFormat", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosXYDisplayFormat {
            get {
                return this._TintPosXYDisplayFormat;
            }
            set {
                if ((this._TintPosXYDisplayFormat != value)) {
                    this.OnTintPosXYDisplayFormatChanging(value);
                    this.SendPropertyChanging();
                    this._TintPosXYDisplayFormat = value;
                    this.SendPropertyChanged("TintPosXYDisplayFormat");
                    this.OnTintPosXYDisplayFormatChanged();
                }
            }
        }

        [Column(Name = "vchrPosSource", Storage = "_PosSource", DbType = "VarChar(50)")]
        public string PosSource {
            get {
                return this._PosSource;
            }
            set {
                if ((this._PosSource != value)) {
                    this.OnPosSourceChanging(value);
                    this.SendPropertyChanging();
                    this._PosSource = value;
                    this.SendPropertyChanged("PosSource");
                    this.OnPosSourceChanged();
                }
            }
        }

        [Column(Name = "vchrPosError", Storage = "_PosError", DbType = "VarChar(20)")]
        public string PosError {
            get {
                return this._PosError;
            }
            set {
                if ((this._PosError != value)) {
                    this.OnPosErrorChanging(value);
                    this.SendPropertyChanging();
                    this._PosError = value;
                    this.SendPropertyChanged("PosError");
                    this.OnPosErrorChanged();
                }
            }
        }

        [Column(Name = "vchrPosWho", Storage = "_PosWho", DbType = "VarChar(20)")]
        public string PosWho {
            get {
                return this._PosWho;
            }
            set {
                if ((this._PosWho != value)) {
                    this.OnPosWhoChanging(value);
                    this.SendPropertyChanging();
                    this._PosWho = value;
                    this.SendPropertyChanged("PosWho");
                    this.OnPosWhoChanged();
                }
            }
        }

        [Column(Name = "vchrPosDate", Storage = "_PosDate", DbType = "VarChar(20)")]
        public string PosDate {
            get {
                return this._PosDate;
            }
            set {
                if ((this._PosDate != value)) {
                    this.OnPosDateChanging(value);
                    this.SendPropertyChanging();
                    this._PosDate = value;
                    this.SendPropertyChanged("PosDate");
                    this.OnPosDateChanged();
                }
            }
        }

        [Column(Name = "vchrPosOriginal", Storage = "_PosOriginal", DbType = "VarChar(20)")]
        public string PosOriginal {
            get {
                return this._PosOriginal;
            }
            set {
                if ((this._PosOriginal != value)) {
                    this.OnPosOriginalChanging(value);
                    this.SendPropertyChanging();
                    this._PosOriginal = value;
                    this.SendPropertyChanged("PosOriginal");
                    this.OnPosOriginalChanged();
                }
            }
        }

        [Column(Name = "vchrPosUTMSource", Storage = "_PosUTMSource", DbType = "VarChar(255)")]
        public string PosUTMSource {
            get {
                return this._PosUTMSource;
            }
            set {
                if ((this._PosUTMSource != value)) {
                    this.OnPosUTMSourceChanging(value);
                    this.SendPropertyChanging();
                    this._PosUTMSource = value;
                    this.SendPropertyChanged("PosUTMSource");
                    this.OnPosUTMSourceChanged();
                }
            }
        }

        [Column(Name = "vchrPosUTMMapProj", Storage = "_PosUTMMapProj", DbType = "VarChar(255)")]
        public string PosUTMMapProj {
            get {
                return this._PosUTMMapProj;
            }
            set {
                if ((this._PosUTMMapProj != value)) {
                    this.OnPosUTMMapProjChanging(value);
                    this.SendPropertyChanging();
                    this._PosUTMMapProj = value;
                    this.SendPropertyChanged("PosUTMMapProj");
                    this.OnPosUTMMapProjChanged();
                }
            }
        }

        [Column(Name = "vchrPosUTMMapName", Storage = "_PosUTMMapName", DbType = "VarChar(255)")]
        public string PosUTMMapName {
            get {
                return this._PosUTMMapName;
            }
            set {
                if ((this._PosUTMMapName != value)) {
                    this.OnPosUTMMapNameChanging(value);
                    this.SendPropertyChanging();
                    this._PosUTMMapName = value;
                    this.SendPropertyChanged("PosUTMMapName");
                    this.OnPosUTMMapNameChanged();
                }
            }
        }

        [Column(Name = "vchrPosUTMMapVer", Storage = "_PosUTMMapVer", DbType = "VarChar(255)")]
        public string PosUTMMapVer {
            get {
                return this._PosUTMMapVer;
            }
            set {
                if ((this._PosUTMMapVer != value)) {
                    this.OnPosUTMMapVerChanging(value);
                    this.SendPropertyChanging();
                    this._PosUTMMapVer = value;
                    this.SendPropertyChanged("PosUTMMapVer");
                    this.OnPosUTMMapVerChanged();
                }
            }
        }

        [Column(Name = "tintElevType", Storage = "_TintElevType", DbType = "TinyInt")]
        public System.Nullable<byte> TintElevType {
            get {
                return this._TintElevType;
            }
            set {
                if ((this._TintElevType != value)) {
                    this.OnTintElevTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TintElevType = value;
                    this.SendPropertyChanged("TintElevType");
                    this.OnTintElevTypeChanged();
                }
            }
        }

        [Column(Name = "fltElevUpper", Storage = "_FltElevUpper", DbType = "Float")]
        public System.Nullable<double> FltElevUpper {
            get {
                return this._FltElevUpper;
            }
            set {
                if ((this._FltElevUpper != value)) {
                    this.OnFltElevUpperChanging(value);
                    this.SendPropertyChanging();
                    this._FltElevUpper = value;
                    this.SendPropertyChanged("FltElevUpper");
                    this.OnFltElevUpperChanged();
                }
            }
        }

        [Column(Name = "fltElevLower", Storage = "_FltElevLower", DbType = "Float")]
        public System.Nullable<double> FltElevLower {
            get {
                return this._FltElevLower;
            }
            set {
                if ((this._FltElevLower != value)) {
                    this.OnFltElevLowerChanging(value);
                    this.SendPropertyChanging();
                    this._FltElevLower = value;
                    this.SendPropertyChanged("FltElevLower");
                    this.OnFltElevLowerChanged();
                }
            }
        }

        [Column(Name = "fltElevDepth", Storage = "_FltElevDepth", DbType = "Float")]
        public System.Nullable<double> FltElevDepth {
            get {
                return this._FltElevDepth;
            }
            set {
                if ((this._FltElevDepth != value)) {
                    this.OnFltElevDepthChanging(value);
                    this.SendPropertyChanging();
                    this._FltElevDepth = value;
                    this.SendPropertyChanged("FltElevDepth");
                    this.OnFltElevDepthChanged();
                }
            }
        }

        [Column(Name = "vchrElevUnits", Storage = "_ElevUnits", DbType = "VarChar(20)")]
        public string ElevUnits {
            get {
                return this._ElevUnits;
            }
            set {
                if ((this._ElevUnits != value)) {
                    this.OnElevUnitsChanging(value);
                    this.SendPropertyChanging();
                    this._ElevUnits = value;
                    this.SendPropertyChanged("ElevUnits");
                    this.OnElevUnitsChanged();
                }
            }
        }

        [Column(Name = "vchrElevSource", Storage = "_ElevSource", DbType = "VarChar(50)")]
        public string ElevSource {
            get {
                return this._ElevSource;
            }
            set {
                if ((this._ElevSource != value)) {
                    this.OnElevSourceChanging(value);
                    this.SendPropertyChanging();
                    this._ElevSource = value;
                    this.SendPropertyChanged("ElevSource");
                    this.OnElevSourceChanged();
                }
            }
        }

        [Column(Name = "vchrElevError", Storage = "_ElevError", DbType = "VarChar(20)")]
        public string ElevError {
            get {
                return this._ElevError;
            }
            set {
                if ((this._ElevError != value)) {
                    this.OnElevErrorChanging(value);
                    this.SendPropertyChanging();
                    this._ElevError = value;
                    this.SendPropertyChanged("ElevError");
                    this.OnElevErrorChanged();
                }
            }
        }

        [Column(Name = "vchrGeoEra", Storage = "_GeoEra", DbType = "VarChar(50)")]
        public string GeoEra {
            get {
                return this._GeoEra;
            }
            set {
                if ((this._GeoEra != value)) {
                    this.OnGeoEraChanging(value);
                    this.SendPropertyChanging();
                    this._GeoEra = value;
                    this.SendPropertyChanged("GeoEra");
                    this.OnGeoEraChanged();
                }
            }
        }

        [Column(Name = "vchrGeoState", Storage = "_GeoState", DbType = "VarChar(50)")]
        public string GeoState {
            get {
                return this._GeoState;
            }
            set {
                if ((this._GeoState != value)) {
                    this.OnGeoStateChanging(value);
                    this.SendPropertyChanging();
                    this._GeoState = value;
                    this.SendPropertyChanged("GeoState");
                    this.OnGeoStateChanged();
                }
            }
        }

        [Column(Name = "vchrGeoPlate", Storage = "_GeoPlate", DbType = "VarChar(50)")]
        public string GeoPlate {
            get {
                return this._GeoPlate;
            }
            set {
                if ((this._GeoPlate != value)) {
                    this.OnGeoPlateChanging(value);
                    this.SendPropertyChanging();
                    this._GeoPlate = value;
                    this.SendPropertyChanged("GeoPlate");
                    this.OnGeoPlateChanged();
                }
            }
        }

        [Column(Name = "vchrGeoFormation", Storage = "_GeoFormation", DbType = "VarChar(50)")]
        public string GeoFormation {
            get {
                return this._GeoFormation;
            }
            set {
                if ((this._GeoFormation != value)) {
                    this.OnGeoFormationChanging(value);
                    this.SendPropertyChanging();
                    this._GeoFormation = value;
                    this.SendPropertyChanged("GeoFormation");
                    this.OnGeoFormationChanged();
                }
            }
        }

        [Column(Name = "vchrGeoMember", Storage = "_GeoMember", DbType = "VarChar(50)")]
        public string GeoMember {
            get {
                return this._GeoMember;
            }
            set {
                if ((this._GeoMember != value)) {
                    this.OnGeoMemberChanging(value);
                    this.SendPropertyChanging();
                    this._GeoMember = value;
                    this.SendPropertyChanged("GeoMember");
                    this.OnGeoMemberChanged();
                }
            }
        }

        [Column(Name = "vchrGeoBed", Storage = "_GeoBed", DbType = "VarChar(50)")]
        public string GeoBed {
            get {
                return this._GeoBed;
            }
            set {
                if ((this._GeoBed != value)) {
                    this.OnGeoBedChanging(value);
                    this.SendPropertyChanging();
                    this._GeoBed = value;
                    this.SendPropertyChanged("GeoBed");
                    this.OnGeoBedChanged();
                }
            }
        }

        [Column(Name = "vchrGeoName", Storage = "_GeoName", DbType = "VarChar(50)")]
        public string GeoName {
            get {
                return this._GeoName;
            }
            set {
                if ((this._GeoName != value)) {
                    this.OnGeoNameChanging(value);
                    this.SendPropertyChanging();
                    this._GeoName = value;
                    this.SendPropertyChanged("GeoName");
                    this.OnGeoNameChanged();
                }
            }
        }

        [Column(Name = "vchrGeoAgeBottom", Storage = "_GeoAgeBottom", DbType = "VarChar(50)")]
        public string GeoAgeBottom {
            get {
                return this._GeoAgeBottom;
            }
            set {
                if ((this._GeoAgeBottom != value)) {
                    this.OnGeoAgeBottomChanging(value);
                    this.SendPropertyChanging();
                    this._GeoAgeBottom = value;
                    this.SendPropertyChanged("GeoAgeBottom");
                    this.OnGeoAgeBottomChanged();
                }
            }
        }

        [Column(Name = "vchrGeoAgeTop", Storage = "_GeoAgeTop", DbType = "VarChar(50)")]
        public string GeoAgeTop {
            get {
                return this._GeoAgeTop;
            }
            set {
                if ((this._GeoAgeTop != value)) {
                    this.OnGeoAgeTopChanging(value);
                    this.SendPropertyChanging();
                    this._GeoAgeTop = value;
                    this.SendPropertyChanged("GeoAgeTop");
                    this.OnGeoAgeTopChanged();
                }
            }
        }

        [Column(Name = "vchrGeoNotes", Storage = "_GeoNotes", DbType = "VarChar(255)")]
        public string GeoNotes {
            get {
                return this._GeoNotes;
            }
            set {
                if ((this._GeoNotes != value)) {
                    this.OnGeoNotesChanging(value);
                    this.SendPropertyChanging();
                    this._GeoNotes = value;
                    this.SendPropertyChanged("GeoNotes");
                    this.OnGeoNotesChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this.OnOrderChanging(value);
                    this.SendPropertyChanging();
                    this._Order = value;
                    this.SendPropertyChanged("Order");
                    this.OnOrderChanged();
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this.OnTintTemplateChanging(value);
                    this.SendPropertyChanging();
                    this._TintTemplate = value;
                    this.SendPropertyChanged("TintTemplate");
                    this.OnTintTemplateChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSiteGroup")]
    public partial class TSiteGroup : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SiteGroupID;

        private short _SintParentType;

        private int _ParentID;

        private System.Nullable<int> _PoliticalRegionID;

        private string _SiteGroupName;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private string _Parentage;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSiteGroupIDChanging(int value);
        partial void OnSiteGroupIDChanged();
        partial void OnSintParentTypeChanging(short value);
        partial void OnSintParentTypeChanged();
        partial void OnParentIDChanging(int value);
        partial void OnParentIDChanged();
        partial void OnPoliticalRegionIDChanging(System.Nullable<int> value);
        partial void OnPoliticalRegionIDChanged();
        partial void OnSiteGroupNameChanging(string value);
        partial void OnSiteGroupNameChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnParentageChanging(string value);
        partial void OnParentageChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TSiteGroup() {
            OnCreated();
        }

        [Column(Name = "intSiteGroupID", Storage = "_SiteGroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SiteGroupID {
            get {
                return this._SiteGroupID;
            }
            set {
                if ((this._SiteGroupID != value)) {
                    this.OnSiteGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteGroupID = value;
                    this.SendPropertyChanged("SiteGroupID");
                    this.OnSiteGroupIDChanged();
                }
            }
        }

        [Column(Name = "sintParentType", Storage = "_SintParentType", DbType = "SmallInt NOT NULL")]
        public short SintParentType {
            get {
                return this._SintParentType;
            }
            set {
                if ((this._SintParentType != value)) {
                    this.OnSintParentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._SintParentType = value;
                    this.SendPropertyChanged("SintParentType");
                    this.OnSintParentTypeChanged();
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_ParentID", DbType = "Int NOT NULL")]
        public int ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this.OnParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ParentID = value;
                    this.SendPropertyChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_PoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> PoliticalRegionID {
            get {
                return this._PoliticalRegionID;
            }
            set {
                if ((this._PoliticalRegionID != value)) {
                    this.OnPoliticalRegionIDChanging(value);
                    this.SendPropertyChanging();
                    this._PoliticalRegionID = value;
                    this.SendPropertyChanged("PoliticalRegionID");
                    this.OnPoliticalRegionIDChanged();
                }
            }
        }

        [Column(Name = "vchrSiteGroupName", Storage = "_SiteGroupName", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string SiteGroupName {
            get {
                return this._SiteGroupName;
            }
            set {
                if ((this._SiteGroupName != value)) {
                    this.OnSiteGroupNameChanging(value);
                    this.SendPropertyChanging();
                    this._SiteGroupName = value;
                    this.SendPropertyChanged("SiteGroupName");
                    this.OnSiteGroupNameChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this.OnParentageChanging(value);
                    this.SendPropertyChanging();
                    this._Parentage = value;
                    this.SendPropertyChanged("Parentage");
                    this.OnParentageChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblSiteVisit")]
    public partial class TSiteVisit : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SiteVisitID;

        private int _SiteID;

        private string _SiteVisitName;

        private string _FieldNumber;

        private string _Collector;

        private System.Nullable<byte> _TintDateType;

        private System.Nullable<int> _DateStart;

        private System.Nullable<int> _DateEnd;

        private System.Nullable<int> _TimeStart;

        private System.Nullable<int> _TimeEnd;

        private string _CasualTime;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private string _WhoLastUpdated;

        private byte _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSiteVisitIDChanging(int value);
        partial void OnSiteVisitIDChanged();
        partial void OnSiteIDChanging(int value);
        partial void OnSiteIDChanged();
        partial void OnSiteVisitNameChanging(string value);
        partial void OnSiteVisitNameChanged();
        partial void OnFieldNumberChanging(string value);
        partial void OnFieldNumberChanged();
        partial void OnCollectorChanging(string value);
        partial void OnCollectorChanged();
        partial void OnTintDateTypeChanging(System.Nullable<byte> value);
        partial void OnTintDateTypeChanged();
        partial void OnDateStartChanging(System.Nullable<int> value);
        partial void OnDateStartChanged();
        partial void OnDateEndChanging(System.Nullable<int> value);
        partial void OnDateEndChanged();
        partial void OnTimeStartChanging(System.Nullable<int> value);
        partial void OnTimeStartChanged();
        partial void OnTimeEndChanging(System.Nullable<int> value);
        partial void OnTimeEndChanged();
        partial void OnCasualTimeChanging(string value);
        partial void OnCasualTimeChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnTintTemplateChanging(byte value);
        partial void OnTintTemplateChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TSiteVisit() {
            OnCreated();
        }

        [Column(Name = "intSiteVisitID", Storage = "_SiteVisitID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SiteVisitID {
            get {
                return this._SiteVisitID;
            }
            set {
                if ((this._SiteVisitID != value)) {
                    this.OnSiteVisitIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteVisitID = value;
                    this.SendPropertyChanged("SiteVisitID");
                    this.OnSiteVisitIDChanged();
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_SiteID", DbType = "Int NOT NULL")]
        public int SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this.OnSiteIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteID = value;
                    this.SendPropertyChanged("SiteID");
                    this.OnSiteIDChanged();
                }
            }
        }

        [Column(Name = "vchrSiteVisitName", Storage = "_SiteVisitName", DbType = "VarChar(255) NOT NULL", CanBeNull = false)]
        public string SiteVisitName {
            get {
                return this._SiteVisitName;
            }
            set {
                if ((this._SiteVisitName != value)) {
                    this.OnSiteVisitNameChanging(value);
                    this.SendPropertyChanging();
                    this._SiteVisitName = value;
                    this.SendPropertyChanged("SiteVisitName");
                    this.OnSiteVisitNameChanged();
                }
            }
        }

        [Column(Name = "vchrFieldNumber", Storage = "_FieldNumber", DbType = "VarChar(50)")]
        public string FieldNumber {
            get {
                return this._FieldNumber;
            }
            set {
                if ((this._FieldNumber != value)) {
                    this.OnFieldNumberChanging(value);
                    this.SendPropertyChanging();
                    this._FieldNumber = value;
                    this.SendPropertyChanged("FieldNumber");
                    this.OnFieldNumberChanged();
                }
            }
        }

        [Column(Name = "vchrCollector", Storage = "_Collector", DbType = "VarChar(255)")]
        public string Collector {
            get {
                return this._Collector;
            }
            set {
                if ((this._Collector != value)) {
                    this.OnCollectorChanging(value);
                    this.SendPropertyChanging();
                    this._Collector = value;
                    this.SendPropertyChanged("Collector");
                    this.OnCollectorChanged();
                }
            }
        }

        [Column(Name = "tintDateType", Storage = "_TintDateType", DbType = "TinyInt")]
        public System.Nullable<byte> TintDateType {
            get {
                return this._TintDateType;
            }
            set {
                if ((this._TintDateType != value)) {
                    this.OnTintDateTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TintDateType = value;
                    this.SendPropertyChanged("TintDateType");
                    this.OnTintDateTypeChanged();
                }
            }
        }

        [Column(Name = "intDateStart", Storage = "_DateStart", DbType = "Int")]
        public System.Nullable<int> DateStart {
            get {
                return this._DateStart;
            }
            set {
                if ((this._DateStart != value)) {
                    this.OnDateStartChanging(value);
                    this.SendPropertyChanging();
                    this._DateStart = value;
                    this.SendPropertyChanged("DateStart");
                    this.OnDateStartChanged();
                }
            }
        }

        [Column(Name = "intDateEnd", Storage = "_DateEnd", DbType = "Int")]
        public System.Nullable<int> DateEnd {
            get {
                return this._DateEnd;
            }
            set {
                if ((this._DateEnd != value)) {
                    this.OnDateEndChanging(value);
                    this.SendPropertyChanging();
                    this._DateEnd = value;
                    this.SendPropertyChanged("DateEnd");
                    this.OnDateEndChanged();
                }
            }
        }

        [Column(Name = "intTimeStart", Storage = "_TimeStart", DbType = "Int")]
        public System.Nullable<int> TimeStart {
            get {
                return this._TimeStart;
            }
            set {
                if ((this._TimeStart != value)) {
                    this.OnTimeStartChanging(value);
                    this.SendPropertyChanging();
                    this._TimeStart = value;
                    this.SendPropertyChanged("TimeStart");
                    this.OnTimeStartChanged();
                }
            }
        }

        [Column(Name = "intTimeEnd", Storage = "_TimeEnd", DbType = "Int")]
        public System.Nullable<int> TimeEnd {
            get {
                return this._TimeEnd;
            }
            set {
                if ((this._TimeEnd != value)) {
                    this.OnTimeEndChanging(value);
                    this.SendPropertyChanging();
                    this._TimeEnd = value;
                    this.SendPropertyChanged("TimeEnd");
                    this.OnTimeEndChanged();
                }
            }
        }

        [Column(Name = "vchrCasualTime", Storage = "_CasualTime", DbType = "VarChar(255)")]
        public string CasualTime {
            get {
                return this._CasualTime;
            }
            set {
                if ((this._CasualTime != value)) {
                    this.OnCasualTimeChanging(value);
                    this.SendPropertyChanging();
                    this._CasualTime = value;
                    this.SendPropertyChanged("CasualTime");
                    this.OnCasualTimeChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt NOT NULL")]
        public byte TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this.OnTintTemplateChanging(value);
                    this.SendPropertyChanging();
                    this._TintTemplate = value;
                    this.SendPropertyChanged("TintTemplate");
                    this.OnTintTemplateChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblTrait")]
    public partial class TTrait : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _TraitID;

        private int _TraitCatID;

        private int _IntraCatID;

        private int _TraitTypeID;

        private string _Value;

        private string _Comment;

        private System.Nullable<bool> _UseInReports;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTraitIDChanging(int value);
        partial void OnTraitIDChanged();
        partial void OnTraitCatIDChanging(int value);
        partial void OnTraitCatIDChanged();
        partial void OnIntraCatIDChanging(int value);
        partial void OnIntraCatIDChanged();
        partial void OnTraitTypeIDChanging(int value);
        partial void OnTraitTypeIDChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnUseInReportsChanging(System.Nullable<bool> value);
        partial void OnUseInReportsChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TTrait() {
            OnCreated();
        }

        [Column(Name = "intTraitID", Storage = "_TraitID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int TraitID {
            get {
                return this._TraitID;
            }
            set {
                if ((this._TraitID != value)) {
                    this.OnTraitIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitID = value;
                    this.SendPropertyChanged("TraitID");
                    this.OnTraitIDChanged();
                }
            }
        }

        [Column(Name = "intTraitCatID", Storage = "_TraitCatID", DbType = "Int NOT NULL")]
        public int TraitCatID {
            get {
                return this._TraitCatID;
            }
            set {
                if ((this._TraitCatID != value)) {
                    this.OnTraitCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitCatID = value;
                    this.SendPropertyChanged("TraitCatID");
                    this.OnTraitCatIDChanged();
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntraCatID", DbType = "Int NOT NULL")]
        public int IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this.OnIntraCatIDChanging(value);
                    this.SendPropertyChanging();
                    this._IntraCatID = value;
                    this.SendPropertyChanged("IntraCatID");
                    this.OnIntraCatIDChanged();
                }
            }
        }

        [Column(Name = "intTraitTypeID", Storage = "_TraitTypeID", DbType = "Int NOT NULL")]
        public int TraitTypeID {
            get {
                return this._TraitTypeID;
            }
            set {
                if ((this._TraitTypeID != value)) {
                    this.OnTraitTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitTypeID = value;
                    this.SendPropertyChanged("TraitTypeID");
                    this.OnTraitTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_Value", DbType = "VarChar(255)")]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [Column(Name = "vchrComment", Storage = "_Comment", DbType = "VarChar(2000)")]
        public string Comment {
            get {
                return this._Comment;
            }
            set {
                if ((this._Comment != value)) {
                    this.OnCommentChanging(value);
                    this.SendPropertyChanging();
                    this._Comment = value;
                    this.SendPropertyChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }

        [Column(Name = "bitUseInReports", Storage = "_UseInReports", DbType = "Bit")]
        public System.Nullable<bool> UseInReports {
            get {
                return this._UseInReports;
            }
            set {
                if ((this._UseInReports != value)) {
                    this.OnUseInReportsChanging(value);
                    this.SendPropertyChanging();
                    this._UseInReports = value;
                    this.SendPropertyChanged("UseInReports");
                    this.OnUseInReportsChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblTraitCategory")]
    public partial class TTraitCategory : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _TraitCategoryID;

        private string _Category;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTraitCategoryIDChanging(int value);
        partial void OnTraitCategoryIDChanged();
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TTraitCategory() {
            OnCreated();
        }

        [Column(Name = "intTraitCategoryID", Storage = "_TraitCategoryID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int TraitCategoryID {
            get {
                return this._TraitCategoryID;
            }
            set {
                if ((this._TraitCategoryID != value)) {
                    this.OnTraitCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitCategoryID = value;
                    this.SendPropertyChanged("TraitCategoryID");
                    this.OnTraitCategoryIDChanged();
                }
            }
        }

        [Column(Name = "vchrCategory", Storage = "_Category", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this.OnCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblTraitDefault")]
    public partial class TTraitDefault : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _TraitDefaultID;

        private int _TraitTypeID;

        private System.Nullable<int> _MorphologyProjectID;

        private System.Nullable<int> _MorphologyViewID;

        private System.Nullable<int> _CharacterID;

        private System.Nullable<int> _CharacterStateID;

        private System.Nullable<int> _BiotaID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTraitDefaultIDChanging(int value);
        partial void OnTraitDefaultIDChanged();
        partial void OnTraitTypeIDChanging(int value);
        partial void OnTraitTypeIDChanged();
        partial void OnMorphologyProjectIDChanging(System.Nullable<int> value);
        partial void OnMorphologyProjectIDChanged();
        partial void OnMorphologyViewIDChanging(System.Nullable<int> value);
        partial void OnMorphologyViewIDChanged();
        partial void OnCharacterIDChanging(System.Nullable<int> value);
        partial void OnCharacterIDChanged();
        partial void OnCharacterStateIDChanging(System.Nullable<int> value);
        partial void OnCharacterStateIDChanged();
        partial void OnBiotaIDChanging(System.Nullable<int> value);
        partial void OnBiotaIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TTraitDefault() {
            OnCreated();
        }

        [Column(Name = "intTraitDefaultID", Storage = "_TraitDefaultID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int TraitDefaultID {
            get {
                return this._TraitDefaultID;
            }
            set {
                if ((this._TraitDefaultID != value)) {
                    this.OnTraitDefaultIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitDefaultID = value;
                    this.SendPropertyChanged("TraitDefaultID");
                    this.OnTraitDefaultIDChanged();
                }
            }
        }

        [Column(Name = "intTraitTypeID", Storage = "_TraitTypeID", DbType = "Int NOT NULL")]
        public int TraitTypeID {
            get {
                return this._TraitTypeID;
            }
            set {
                if ((this._TraitTypeID != value)) {
                    this.OnTraitTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitTypeID = value;
                    this.SendPropertyChanged("TraitTypeID");
                    this.OnTraitTypeIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_MorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> MorphologyProjectID {
            get {
                return this._MorphologyProjectID;
            }
            set {
                if ((this._MorphologyProjectID != value)) {
                    this.OnMorphologyProjectIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyProjectID = value;
                    this.SendPropertyChanged("MorphologyProjectID");
                    this.OnMorphologyProjectIDChanged();
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_MorphologyViewID", DbType = "Int")]
        public System.Nullable<int> MorphologyViewID {
            get {
                return this._MorphologyViewID;
            }
            set {
                if ((this._MorphologyViewID != value)) {
                    this.OnMorphologyViewIDChanging(value);
                    this.SendPropertyChanging();
                    this._MorphologyViewID = value;
                    this.SendPropertyChanged("MorphologyViewID");
                    this.OnMorphologyViewIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_CharacterID", DbType = "Int")]
        public System.Nullable<int> CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this.OnCharacterIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterID = value;
                    this.SendPropertyChanged("CharacterID");
                    this.OnCharacterIDChanged();
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_CharacterStateID", DbType = "Int")]
        public System.Nullable<int> CharacterStateID {
            get {
                return this._CharacterStateID;
            }
            set {
                if ((this._CharacterStateID != value)) {
                    this.OnCharacterStateIDChanging(value);
                    this.SendPropertyChanging();
                    this._CharacterStateID = value;
                    this.SendPropertyChanged("CharacterStateID");
                    this.OnCharacterStateIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int")]
        public System.Nullable<int> BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblTraitType")]
    public partial class TTraitType : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _TraitTypeID;

        private string _TraitType;

        private string _DataType;

        private string _ValidationStr;

        private System.Nullable<int> _CategoryID;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTraitTypeIDChanging(int value);
        partial void OnTraitTypeIDChanged();
        partial void OnTraitTypeChanging(string value);
        partial void OnTraitTypeChanged();
        partial void OnDataTypeChanging(string value);
        partial void OnDataTypeChanged();
        partial void OnValidationStrChanging(string value);
        partial void OnValidationStrChanged();
        partial void OnCategoryIDChanging(System.Nullable<int> value);
        partial void OnCategoryIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TTraitType() {
            OnCreated();
        }

        [Column(Name = "intTraitTypeID", Storage = "_TraitTypeID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int TraitTypeID {
            get {
                return this._TraitTypeID;
            }
            set {
                if ((this._TraitTypeID != value)) {
                    this.OnTraitTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitTypeID = value;
                    this.SendPropertyChanged("TraitTypeID");
                    this.OnTraitTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrTraitType", Storage = "_TraitType", DbType = "VarChar(255)")]
        public string TraitType {
            get {
                return this._TraitType;
            }
            set {
                if ((this._TraitType != value)) {
                    this.OnTraitTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TraitType = value;
                    this.SendPropertyChanged("TraitType");
                    this.OnTraitTypeChanged();
                }
            }
        }

        [Column(Name = "vchrDataType", Storage = "_DataType", DbType = "VarChar(20)")]
        public string DataType {
            get {
                return this._DataType;
            }
            set {
                if ((this._DataType != value)) {
                    this.OnDataTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DataType = value;
                    this.SendPropertyChanged("DataType");
                    this.OnDataTypeChanged();
                }
            }
        }

        [Column(Name = "vchrValidationStr", Storage = "_ValidationStr", DbType = "VarChar(255)")]
        public string ValidationStr {
            get {
                return this._ValidationStr;
            }
            set {
                if ((this._ValidationStr != value)) {
                    this.OnValidationStrChanging(value);
                    this.SendPropertyChanging();
                    this._ValidationStr = value;
                    this.SendPropertyChanged("ValidationStr");
                    this.OnValidationStrChanged();
                }
            }
        }

        [Column(Name = "intCategoryID", Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblTraitTypeToCategory")]
    public partial class TTraitTypeToCategory : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _TTTCID;

        private int _TraitCategoryID;

        private int _TraitTypeID;

        private string _Default;

        private string _OverrideValidation;

        private bool _Manditory;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTTTCIDChanging(int value);
        partial void OnTTTCIDChanged();
        partial void OnTraitCategoryIDChanging(int value);
        partial void OnTraitCategoryIDChanged();
        partial void OnTraitTypeIDChanging(int value);
        partial void OnTraitTypeIDChanged();
        partial void OnDefaultChanging(string value);
        partial void OnDefaultChanged();
        partial void OnOverrideValidationChanging(string value);
        partial void OnOverrideValidationChanged();
        partial void OnManditoryChanging(bool value);
        partial void OnManditoryChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TTraitTypeToCategory() {
            OnCreated();
        }

        [Column(Name = "intTTTCID", Storage = "_TTTCID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int TTTCID {
            get {
                return this._TTTCID;
            }
            set {
                if ((this._TTTCID != value)) {
                    this.OnTTTCIDChanging(value);
                    this.SendPropertyChanging();
                    this._TTTCID = value;
                    this.SendPropertyChanged("TTTCID");
                    this.OnTTTCIDChanged();
                }
            }
        }

        [Column(Name = "intTraitCategoryID", Storage = "_TraitCategoryID", DbType = "Int NOT NULL")]
        public int TraitCategoryID {
            get {
                return this._TraitCategoryID;
            }
            set {
                if ((this._TraitCategoryID != value)) {
                    this.OnTraitCategoryIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitCategoryID = value;
                    this.SendPropertyChanged("TraitCategoryID");
                    this.OnTraitCategoryIDChanged();
                }
            }
        }

        [Column(Name = "intTraitTypeID", Storage = "_TraitTypeID", DbType = "Int NOT NULL")]
        public int TraitTypeID {
            get {
                return this._TraitTypeID;
            }
            set {
                if ((this._TraitTypeID != value)) {
                    this.OnTraitTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TraitTypeID = value;
                    this.SendPropertyChanged("TraitTypeID");
                    this.OnTraitTypeIDChanged();
                }
            }
        }

        [Column(Name = "vchrDefault", Storage = "_Default", DbType = "VarChar(255)")]
        public string Default {
            get {
                return this._Default;
            }
            set {
                if ((this._Default != value)) {
                    this.OnDefaultChanging(value);
                    this.SendPropertyChanging();
                    this._Default = value;
                    this.SendPropertyChanged("Default");
                    this.OnDefaultChanged();
                }
            }
        }

        [Column(Name = "vchrOverrideValidation", Storage = "_OverrideValidation", DbType = "VarChar(255)")]
        public string OverrideValidation {
            get {
                return this._OverrideValidation;
            }
            set {
                if ((this._OverrideValidation != value)) {
                    this.OnOverrideValidationChanging(value);
                    this.SendPropertyChanging();
                    this._OverrideValidation = value;
                    this.SendPropertyChanged("OverrideValidation");
                    this.OnOverrideValidationChanged();
                }
            }
        }

        [Column(Name = "bitManditory", Storage = "_Manditory", DbType = "Bit NOT NULL")]
        public bool Manditory {
            get {
                return this._Manditory;
            }
            set {
                if ((this._Manditory != value)) {
                    this.OnManditoryChanging(value);
                    this.SendPropertyChanging();
                    this._Manditory = value;
                    this.SendPropertyChanged("Manditory");
                    this.OnManditoryChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblTrap")]
    public partial class TTrap : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _TrapID;

        private int _SiteID;

        private string _TrapName;

        private string _TrapType;

        private string _Description;

        private string _WhoCreated;

        private System.Nullable<System.DateTime> _DateCreated;

        private string _WhoLastUpdated;

        private System.Nullable<System.DateTime> _DateLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTrapIDChanging(int value);
        partial void OnTrapIDChanged();
        partial void OnSiteIDChanging(int value);
        partial void OnSiteIDChanged();
        partial void OnTrapNameChanging(string value);
        partial void OnTrapNameChanged();
        partial void OnTrapTypeChanging(string value);
        partial void OnTrapTypeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnWhoCreatedChanging(string value);
        partial void OnWhoCreatedChanged();
        partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateCreatedChanged();
        partial void OnWhoLastUpdatedChanging(string value);
        partial void OnWhoLastUpdatedChanged();
        partial void OnDateLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateLastUpdatedChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        #endregion

        public TTrap() {
            OnCreated();
        }

        [Column(Name = "intTrapID", Storage = "_TrapID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int TrapID {
            get {
                return this._TrapID;
            }
            set {
                if ((this._TrapID != value)) {
                    this.OnTrapIDChanging(value);
                    this.SendPropertyChanging();
                    this._TrapID = value;
                    this.SendPropertyChanged("TrapID");
                    this.OnTrapIDChanged();
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_SiteID", DbType = "Int NOT NULL")]
        public int SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this.OnSiteIDChanging(value);
                    this.SendPropertyChanging();
                    this._SiteID = value;
                    this.SendPropertyChanged("SiteID");
                    this.OnSiteIDChanged();
                }
            }
        }

        [Column(Name = "vchrTrapName", Storage = "_TrapName", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string TrapName {
            get {
                return this._TrapName;
            }
            set {
                if ((this._TrapName != value)) {
                    this.OnTrapNameChanging(value);
                    this.SendPropertyChanging();
                    this._TrapName = value;
                    this.SendPropertyChanged("TrapName");
                    this.OnTrapNameChanged();
                }
            }
        }

        [Column(Name = "vchrTrapType", Storage = "_TrapType", DbType = "VarChar(50)")]
        public string TrapType {
            get {
                return this._TrapType;
            }
            set {
                if ((this._TrapType != value)) {
                    this.OnTrapTypeChanging(value);
                    this.SendPropertyChanging();
                    this._TrapType = value;
                    this.SendPropertyChanged("TrapType");
                    this.OnTrapTypeChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "VarChar(255)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_WhoCreated", DbType = "VarChar(50)")]
        public string WhoCreated {
            get {
                return this._WhoCreated;
            }
            set {
                if ((this._WhoCreated != value)) {
                    this.OnWhoCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoCreated = value;
                    this.SendPropertyChanged("WhoCreated");
                    this.OnWhoCreatedChanged();
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this._DateCreated;
            }
            set {
                if ((this._DateCreated != value)) {
                    this.OnDateCreatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateCreated = value;
                    this.SendPropertyChanged("DateCreated");
                    this.OnDateCreatedChanged();
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_WhoLastUpdated", DbType = "VarChar(50)")]
        public string WhoLastUpdated {
            get {
                return this._WhoLastUpdated;
            }
            set {
                if ((this._WhoLastUpdated != value)) {
                    this.OnWhoLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._WhoLastUpdated = value;
                    this.SendPropertyChanged("WhoLastUpdated");
                    this.OnWhoLastUpdatedChanged();
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this._DateLastUpdated;
            }
            set {
                if ((this._DateLastUpdated != value)) {
                    this.OnDateLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._DateLastUpdated = value;
                    this.SendPropertyChanged("DateLastUpdated");
                    this.OnDateLastUpdatedChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblUser")]
    public partial class TUser : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Name;

        private int _GroupID;

        private string _FullName;

        private string _Description;

        private string _Notes;

        private int _UserID;

        private System.Nullable<System.Guid> _GUID;

        private bool _CanCreateUsers;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnGroupIDChanging(int value);
        partial void OnGroupIDChanged();
        partial void OnFullNameChanging(string value);
        partial void OnFullNameChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnUserIDChanging(int value);
        partial void OnUserIDChanged();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnCanCreateUsersChanging(bool value);
        partial void OnCanCreateUsersChanged();
        #endregion

        public TUser() {
            OnCreated();
        }

        [Column(Name = "vchrName", Storage = "_Name", DbType = "VarChar(128) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [Column(Name = "intGroupID", Storage = "_GroupID", DbType = "Int NOT NULL")]
        public int GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this.OnGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._GroupID = value;
                    this.SendPropertyChanged("GroupID");
                    this.OnGroupIDChanged();
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_FullName", DbType = "VarChar(100)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this.OnFullNameChanging(value);
                    this.SendPropertyChanging();
                    this._FullName = value;
                    this.SendPropertyChanged("FullName");
                    this.OnFullNameChanged();
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_Description", DbType = "VarChar(200)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [Column(Name = "vchrNotes", Storage = "_Notes", DbType = "VarChar(500)")]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this.OnNotesChanging(value);
                    this.SendPropertyChanging();
                    this._Notes = value;
                    this.SendPropertyChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }

        [Column(Name = "intUserID", Storage = "_UserID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int UserID {
            get {
                return this._UserID;
            }
            set {
                if ((this._UserID != value)) {
                    this.OnUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "bitCanCreateUsers", Storage = "_CanCreateUsers", DbType = "Bit NOT NULL")]
        public bool CanCreateUsers {
            get {
                return this._CanCreateUsers;
            }
            set {
                if ((this._CanCreateUsers != value)) {
                    this.OnCanCreateUsersChanging(value);
                    this.SendPropertyChanging();
                    this._CanCreateUsers = value;
                    this.SendPropertyChanged("CanCreateUsers");
                    this.OnCanCreateUsersChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.tblUserPermission")]
    public partial class TUserPermission : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _UserID;

        private int _BiotaID;

        private int _PermMask1;

        private System.Nullable<int> _PermMask2;

        private System.Nullable<System.Guid> _GUID;

        private int _GroupID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnUserIDChanging(int value);
        partial void OnUserIDChanged();
        partial void OnBiotaIDChanging(int value);
        partial void OnBiotaIDChanged();
        partial void OnPermMask1Changing(int value);
        partial void OnPermMask1Changed();
        partial void OnPermMask2Changing(System.Nullable<int> value);
        partial void OnPermMask2Changed();
        partial void OnGUIDChanging(System.Nullable<System.Guid> value);
        partial void OnGUIDChanged();
        partial void OnGroupIDChanging(int value);
        partial void OnGroupIDChanged();
        #endregion

        public TUserPermission() {
            OnCreated();
        }

        [Column(Name = "intUserID", Storage = "_UserID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int UserID {
            get {
                return this._UserID;
            }
            set {
                if ((this._UserID != value)) {
                    this.OnUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_BiotaID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this.OnBiotaIDChanging(value);
                    this.SendPropertyChanging();
                    this._BiotaID = value;
                    this.SendPropertyChanged("BiotaID");
                    this.OnBiotaIDChanged();
                }
            }
        }

        [Column(Name = "intPermMask1", Storage = "_PermMask1", DbType = "Int NOT NULL")]
        public int PermMask1 {
            get {
                return this._PermMask1;
            }
            set {
                if ((this._PermMask1 != value)) {
                    this.OnPermMask1Changing(value);
                    this.SendPropertyChanging();
                    this._PermMask1 = value;
                    this.SendPropertyChanged("PermMask1");
                    this.OnPermMask1Changed();
                }
            }
        }

        [Column(Name = "intPermMask2", Storage = "_PermMask2", DbType = "Int")]
        public System.Nullable<int> PermMask2 {
            get {
                return this._PermMask2;
            }
            set {
                if ((this._PermMask2 != value)) {
                    this.OnPermMask2Changing(value);
                    this.SendPropertyChanging();
                    this._PermMask2 = value;
                    this.SendPropertyChanged("PermMask2");
                    this.OnPermMask2Changed();
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this.OnGUIDChanging(value);
                    this.SendPropertyChanging();
                    this._GUID = value;
                    this.SendPropertyChanged("GUID");
                    this.OnGUIDChanged();
                }
            }
        }

        [Column(Name = "intGroupID", Storage = "_GroupID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this.OnGroupIDChanging(value);
                    this.SendPropertyChanging();
                    this._GroupID = value;
                    this.SendPropertyChanged("GroupID");
                    this.OnGroupIDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging() {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class SpALNGetResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrRefCode;

        private string _VchrAvailableNameStatus;

        private System.Nullable<int> _Changes;

        public SpALNGetResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpAlternateNamesListResult {

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntMorphologyViewID;

        private string _VchrAlias;

        public SpAlternateNamesListResult() {
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(1000)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }
    }

    public partial class SpAssociateInsertResult {

        private System.Nullable<decimal> _NewAssocID;

        public SpAssociateInsertResult() {
        }

        [Column(Storage = "_NewAssocID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewAssocID {
            get {
                return this._NewAssocID;
            }
            set {
                if ((this._NewAssocID != value)) {
                    this._NewAssocID = value;
                }
            }
        }
    }

    public partial class SpAutoNumberCatListResult {

        private System.Nullable<int> _IntAutoNumberCatID;

        private string _VchrCategory;

        private string _VchrName;

        private string _VchrPrefix;

        private string _VchrPostfix;

        private System.Nullable<int> _IntNumLeadingZeros;

        private System.Nullable<int> _IntLastNumber;

        private System.Nullable<bool> _BitLocked;

        private System.Nullable<bool> _BitEnsureUnique;

        private System.Nullable<int> _Changes;

        public SpAutoNumberCatListResult() {
        }

        [Column(Name = "intAutoNumberCatID", Storage = "_IntAutoNumberCatID", DbType = "Int")]
        public System.Nullable<int> IntAutoNumberCatID {
            get {
                return this._IntAutoNumberCatID;
            }
            set {
                if ((this._IntAutoNumberCatID != value)) {
                    this._IntAutoNumberCatID = value;
                }
            }
        }

        [Column(Name = "vchrCategory", Storage = "_VchrCategory", DbType = "VarChar(50)")]
        public string VchrCategory {
            get {
                return this._VchrCategory;
            }
            set {
                if ((this._VchrCategory != value)) {
                    this._VchrCategory = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrPrefix", Storage = "_VchrPrefix", DbType = "VarChar(50)")]
        public string VchrPrefix {
            get {
                return this._VchrPrefix;
            }
            set {
                if ((this._VchrPrefix != value)) {
                    this._VchrPrefix = value;
                }
            }
        }

        [Column(Name = "vchrPostfix", Storage = "_VchrPostfix", DbType = "VarChar(50)")]
        public string VchrPostfix {
            get {
                return this._VchrPostfix;
            }
            set {
                if ((this._VchrPostfix != value)) {
                    this._VchrPostfix = value;
                }
            }
        }

        [Column(Name = "intNumLeadingZeros", Storage = "_IntNumLeadingZeros", DbType = "Int")]
        public System.Nullable<int> IntNumLeadingZeros {
            get {
                return this._IntNumLeadingZeros;
            }
            set {
                if ((this._IntNumLeadingZeros != value)) {
                    this._IntNumLeadingZeros = value;
                }
            }
        }

        [Column(Name = "intLastNumber", Storage = "_IntLastNumber", DbType = "Int")]
        public System.Nullable<int> IntLastNumber {
            get {
                return this._IntLastNumber;
            }
            set {
                if ((this._IntLastNumber != value)) {
                    this._IntLastNumber = value;
                }
            }
        }

        [Column(Name = "bitLocked", Storage = "_BitLocked", DbType = "Bit")]
        public System.Nullable<bool> BitLocked {
            get {
                return this._BitLocked;
            }
            set {
                if ((this._BitLocked != value)) {
                    this._BitLocked = value;
                }
            }
        }

        [Column(Name = "bitEnsureUnique", Storage = "_BitEnsureUnique", DbType = "Bit")]
        public System.Nullable<bool> BitEnsureUnique {
            get {
                return this._BitEnsureUnique;
            }
            set {
                if ((this._BitEnsureUnique != value)) {
                    this._BitEnsureUnique = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpAutoNumberGetNextResult {

        private System.Nullable<int> _NewNumber;

        private string _Name;

        private string _Prefix;

        private string _Postfix;

        private System.Nullable<int> _NumLeadingZeros;

        private System.Nullable<bool> _EnsureUnique;

        public SpAutoNumberGetNextResult() {
        }

        [Column(Storage = "_NewNumber", DbType = "Int")]
        public System.Nullable<int> NewNumber {
            get {
                return this._NewNumber;
            }
            set {
                if ((this._NewNumber != value)) {
                    this._NewNumber = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Prefix", DbType = "VarChar(50)")]
        public string Prefix {
            get {
                return this._Prefix;
            }
            set {
                if ((this._Prefix != value)) {
                    this._Prefix = value;
                }
            }
        }

        [Column(Storage = "_Postfix", DbType = "VarChar(50)")]
        public string Postfix {
            get {
                return this._Postfix;
            }
            set {
                if ((this._Postfix != value)) {
                    this._Postfix = value;
                }
            }
        }

        [Column(Storage = "_NumLeadingZeros", DbType = "Int")]
        public System.Nullable<int> NumLeadingZeros {
            get {
                return this._NumLeadingZeros;
            }
            set {
                if ((this._NumLeadingZeros != value)) {
                    this._NumLeadingZeros = value;
                }
            }
        }

        [Column(Storage = "_EnsureUnique", DbType = "Bit")]
        public System.Nullable<bool> EnsureUnique {
            get {
                return this._EnsureUnique;
            }
            set {
                if ((this._EnsureUnique != value)) {
                    this._EnsureUnique = value;
                }
            }
        }
    }

    public partial class SpBiotaDefKingdomGetResult {

        private string _ChrKingdomCode;

        private string _VchrKingdomName;

        private System.Nullable<System.Guid> _GUID;

        public SpBiotaDefKingdomGetResult() {
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "vchrKingdomName", Storage = "_VchrKingdomName", DbType = "VarChar(50)")]
        public string VchrKingdomName {
            get {
                return this._VchrKingdomName;
            }
            set {
                if ((this._VchrKingdomName != value)) {
                    this._VchrKingdomName = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpBiotaDefKingdomListResult {

        private string _ChrKingdomCode;

        private string _VchrKingdomName;

        private System.Nullable<System.Guid> _GUID;

        public SpBiotaDefKingdomListResult() {
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "vchrKingdomName", Storage = "_VchrKingdomName", DbType = "VarChar(50)")]
        public string VchrKingdomName {
            get {
                return this._VchrKingdomName;
            }
            set {
                if ((this._VchrKingdomName != value)) {
                    this._VchrKingdomName = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpBiotaDefRankGetResult {

        private string _ChrCode;

        private string _VchrLongName;

        private string _VchrTextBeforeInFullName;

        private string _VchrTextAfterInFullName;

        private System.Nullable<bool> _BitJoinToParentInFullName;

        private string _VchrChecklistDisplayAs;

        private System.Nullable<byte> _BitAvailableNameAllowed;

        private System.Nullable<bool> _BitUnplacedAllowed;

        private System.Nullable<bool> _BitChgCombAllowed;

        private System.Nullable<bool> _BitLituratueNameAllowed;

        private string _ChrCategory;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<System.Guid> _GUID;

        public SpBiotaDefRankGetResult() {
        }

        [Column(Name = "chrCode", Storage = "_ChrCode", DbType = "Char(5)")]
        public string ChrCode {
            get {
                return this._ChrCode;
            }
            set {
                if ((this._ChrCode != value)) {
                    this._ChrCode = value;
                }
            }
        }

        [Column(Name = "vchrLongName", Storage = "_VchrLongName", DbType = "VarChar(100)")]
        public string VchrLongName {
            get {
                return this._VchrLongName;
            }
            set {
                if ((this._VchrLongName != value)) {
                    this._VchrLongName = value;
                }
            }
        }

        [Column(Name = "vchrTextBeforeInFullName", Storage = "_VchrTextBeforeInFullName", DbType = "VarChar(10)")]
        public string VchrTextBeforeInFullName {
            get {
                return this._VchrTextBeforeInFullName;
            }
            set {
                if ((this._VchrTextBeforeInFullName != value)) {
                    this._VchrTextBeforeInFullName = value;
                }
            }
        }

        [Column(Name = "vchrTextAfterInFullName", Storage = "_VchrTextAfterInFullName", DbType = "VarChar(10)")]
        public string VchrTextAfterInFullName {
            get {
                return this._VchrTextAfterInFullName;
            }
            set {
                if ((this._VchrTextAfterInFullName != value)) {
                    this._VchrTextAfterInFullName = value;
                }
            }
        }

        [Column(Name = "bitJoinToParentInFullName", Storage = "_BitJoinToParentInFullName", DbType = "Bit")]
        public System.Nullable<bool> BitJoinToParentInFullName {
            get {
                return this._BitJoinToParentInFullName;
            }
            set {
                if ((this._BitJoinToParentInFullName != value)) {
                    this._BitJoinToParentInFullName = value;
                }
            }
        }

        [Column(Name = "vchrChecklistDisplayAs", Storage = "_VchrChecklistDisplayAs", DbType = "VarChar(20)")]
        public string VchrChecklistDisplayAs {
            get {
                return this._VchrChecklistDisplayAs;
            }
            set {
                if ((this._VchrChecklistDisplayAs != value)) {
                    this._VchrChecklistDisplayAs = value;
                }
            }
        }

        [Column(Name = "bitAvailableNameAllowed", Storage = "_BitAvailableNameAllowed", DbType = "TinyInt")]
        public System.Nullable<byte> BitAvailableNameAllowed {
            get {
                return this._BitAvailableNameAllowed;
            }
            set {
                if ((this._BitAvailableNameAllowed != value)) {
                    this._BitAvailableNameAllowed = value;
                }
            }
        }

        [Column(Name = "bitUnplacedAllowed", Storage = "_BitUnplacedAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitUnplacedAllowed {
            get {
                return this._BitUnplacedAllowed;
            }
            set {
                if ((this._BitUnplacedAllowed != value)) {
                    this._BitUnplacedAllowed = value;
                }
            }
        }

        [Column(Name = "bitChgCombAllowed", Storage = "_BitChgCombAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitChgCombAllowed {
            get {
                return this._BitChgCombAllowed;
            }
            set {
                if ((this._BitChgCombAllowed != value)) {
                    this._BitChgCombAllowed = value;
                }
            }
        }

        [Column(Name = "bitLituratueNameAllowed", Storage = "_BitLituratueNameAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitLituratueNameAllowed {
            get {
                return this._BitLituratueNameAllowed;
            }
            set {
                if ((this._BitLituratueNameAllowed != value)) {
                    this._BitLituratueNameAllowed = value;
                }
            }
        }

        [Column(Name = "chrCategory", Storage = "_ChrCategory", DbType = "Char(1)")]
        public string ChrCategory {
            get {
                return this._ChrCategory;
            }
            set {
                if ((this._ChrCategory != value)) {
                    this._ChrCategory = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpBiotaDefRankGetAllResult {

        private string _ChrKingdomCode;

        private string _ChrCode;

        private string _VchrLongName;

        private string _VchrTextBeforeInFullName;

        private string _VchrTextAfterInFullName;

        private System.Nullable<bool> _BitJoinToParentInFullName;

        private string _VchrChecklistDisplayAs;

        private System.Nullable<byte> _BitAvailableNameAllowed;

        private System.Nullable<bool> _BitUnplacedAllowed;

        private System.Nullable<bool> _BitChgCombAllowed;

        private System.Nullable<bool> _BitLituratueNameAllowed;

        private string _ChrCategory;

        private string _VchrValidChildList;

        private string _VchrValidEndingList;

        private System.Nullable<int> _IntOrder;

        public SpBiotaDefRankGetAllResult() {
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "chrCode", Storage = "_ChrCode", DbType = "Char(5)")]
        public string ChrCode {
            get {
                return this._ChrCode;
            }
            set {
                if ((this._ChrCode != value)) {
                    this._ChrCode = value;
                }
            }
        }

        [Column(Name = "vchrLongName", Storage = "_VchrLongName", DbType = "VarChar(100)")]
        public string VchrLongName {
            get {
                return this._VchrLongName;
            }
            set {
                if ((this._VchrLongName != value)) {
                    this._VchrLongName = value;
                }
            }
        }

        [Column(Name = "vchrTextBeforeInFullName", Storage = "_VchrTextBeforeInFullName", DbType = "VarChar(10)")]
        public string VchrTextBeforeInFullName {
            get {
                return this._VchrTextBeforeInFullName;
            }
            set {
                if ((this._VchrTextBeforeInFullName != value)) {
                    this._VchrTextBeforeInFullName = value;
                }
            }
        }

        [Column(Name = "vchrTextAfterInFullName", Storage = "_VchrTextAfterInFullName", DbType = "VarChar(10)")]
        public string VchrTextAfterInFullName {
            get {
                return this._VchrTextAfterInFullName;
            }
            set {
                if ((this._VchrTextAfterInFullName != value)) {
                    this._VchrTextAfterInFullName = value;
                }
            }
        }

        [Column(Name = "bitJoinToParentInFullName", Storage = "_BitJoinToParentInFullName", DbType = "Bit")]
        public System.Nullable<bool> BitJoinToParentInFullName {
            get {
                return this._BitJoinToParentInFullName;
            }
            set {
                if ((this._BitJoinToParentInFullName != value)) {
                    this._BitJoinToParentInFullName = value;
                }
            }
        }

        [Column(Name = "vchrChecklistDisplayAs", Storage = "_VchrChecklistDisplayAs", DbType = "VarChar(20)")]
        public string VchrChecklistDisplayAs {
            get {
                return this._VchrChecklistDisplayAs;
            }
            set {
                if ((this._VchrChecklistDisplayAs != value)) {
                    this._VchrChecklistDisplayAs = value;
                }
            }
        }

        [Column(Name = "bitAvailableNameAllowed", Storage = "_BitAvailableNameAllowed", DbType = "TinyInt")]
        public System.Nullable<byte> BitAvailableNameAllowed {
            get {
                return this._BitAvailableNameAllowed;
            }
            set {
                if ((this._BitAvailableNameAllowed != value)) {
                    this._BitAvailableNameAllowed = value;
                }
            }
        }

        [Column(Name = "bitUnplacedAllowed", Storage = "_BitUnplacedAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitUnplacedAllowed {
            get {
                return this._BitUnplacedAllowed;
            }
            set {
                if ((this._BitUnplacedAllowed != value)) {
                    this._BitUnplacedAllowed = value;
                }
            }
        }

        [Column(Name = "bitChgCombAllowed", Storage = "_BitChgCombAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitChgCombAllowed {
            get {
                return this._BitChgCombAllowed;
            }
            set {
                if ((this._BitChgCombAllowed != value)) {
                    this._BitChgCombAllowed = value;
                }
            }
        }

        [Column(Name = "bitLituratueNameAllowed", Storage = "_BitLituratueNameAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitLituratueNameAllowed {
            get {
                return this._BitLituratueNameAllowed;
            }
            set {
                if ((this._BitLituratueNameAllowed != value)) {
                    this._BitLituratueNameAllowed = value;
                }
            }
        }

        [Column(Name = "chrCategory", Storage = "_ChrCategory", DbType = "Char(1)")]
        public string ChrCategory {
            get {
                return this._ChrCategory;
            }
            set {
                if ((this._ChrCategory != value)) {
                    this._ChrCategory = value;
                }
            }
        }

        [Column(Name = "vchrValidChildList", Storage = "_VchrValidChildList", DbType = "VarChar(255)")]
        public string VchrValidChildList {
            get {
                return this._VchrValidChildList;
            }
            set {
                if ((this._VchrValidChildList != value)) {
                    this._VchrValidChildList = value;
                }
            }
        }

        [Column(Name = "vchrValidEndingList", Storage = "_VchrValidEndingList", DbType = "VarChar(255)")]
        public string VchrValidEndingList {
            get {
                return this._VchrValidEndingList;
            }
            set {
                if ((this._VchrValidEndingList != value)) {
                    this._VchrValidEndingList = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }
    }

    public partial class SpBiotaDefRulesGetResult {

        private string _ChrKingdomCode;

        private string _ChrRankCode;

        private string _VchrValidChildList;

        private string _VchrValidEndingList;

        private System.Nullable<System.Guid> _GUID;

        public SpBiotaDefRulesGetResult() {
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "chrRankCode", Storage = "_ChrRankCode", DbType = "Char(20)")]
        public string ChrRankCode {
            get {
                return this._ChrRankCode;
            }
            set {
                if ((this._ChrRankCode != value)) {
                    this._ChrRankCode = value;
                }
            }
        }

        [Column(Name = "vchrValidChildList", Storage = "_VchrValidChildList", DbType = "VarChar(255)")]
        public string VchrValidChildList {
            get {
                return this._VchrValidChildList;
            }
            set {
                if ((this._VchrValidChildList != value)) {
                    this._VchrValidChildList = value;
                }
            }
        }

        [Column(Name = "vchrValidEndingList", Storage = "_VchrValidEndingList", DbType = "VarChar(255)")]
        public string VchrValidEndingList {
            get {
                return this._VchrValidEndingList;
            }
            set {
                if ((this._VchrValidEndingList != value)) {
                    this._VchrValidEndingList = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpBiotaGetResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntParentID;

        private string _VchrEpithet;

        private string _VchrFullName;

        private string _VchrYearOfPub;

        private string _VchrAuthor;

        private string _VchrNameQualifier;

        private string _ChrElemType;

        private string _VchrRank;

        private string _ChrKingdomCode;

        private System.Nullable<int> _IntOrder;

        private string _VchrParentage;

        private System.Nullable<bool> _BitChangedComb;

        private System.Nullable<bool> _BitShadowed;

        private System.Nullable<bool> _BitUnplaced;

        private System.Nullable<bool> _BitUnverified;

        private System.Nullable<bool> _BitAvailableName;

        private System.Nullable<bool> _BitLiteratureName;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _TxtDistQual;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntImportedWithProjectID;

        private string _VchrAvailableNameStatus;

        private string _RankLong;

        private string _KingdomLong;

        private string _RankCategory;

        public SpBiotaGetResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_IntParentID", DbType = "Int")]
        public System.Nullable<int> IntParentID {
            get {
                return this._IntParentID;
            }
            set {
                if ((this._IntParentID != value)) {
                    this._IntParentID = value;
                }
            }
        }

        [Column(Name = "vchrEpithet", Storage = "_VchrEpithet", DbType = "VarChar(200)")]
        public string VchrEpithet {
            get {
                return this._VchrEpithet;
            }
            set {
                if ((this._VchrEpithet != value)) {
                    this._VchrEpithet = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(50)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(100)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrNameQualifier", Storage = "_VchrNameQualifier", DbType = "VarChar(15)")]
        public string VchrNameQualifier {
            get {
                return this._VchrNameQualifier;
            }
            set {
                if ((this._VchrNameQualifier != value)) {
                    this._VchrNameQualifier = value;
                }
            }
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5)")]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this._ChrElemType = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(50)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }

        [Column(Name = "bitChangedComb", Storage = "_BitChangedComb", DbType = "Bit")]
        public System.Nullable<bool> BitChangedComb {
            get {
                return this._BitChangedComb;
            }
            set {
                if ((this._BitChangedComb != value)) {
                    this._BitChangedComb = value;
                }
            }
        }

        [Column(Name = "bitShadowed", Storage = "_BitShadowed", DbType = "Bit")]
        public System.Nullable<bool> BitShadowed {
            get {
                return this._BitShadowed;
            }
            set {
                if ((this._BitShadowed != value)) {
                    this._BitShadowed = value;
                }
            }
        }

        [Column(Name = "bitUnplaced", Storage = "_BitUnplaced", DbType = "Bit")]
        public System.Nullable<bool> BitUnplaced {
            get {
                return this._BitUnplaced;
            }
            set {
                if ((this._BitUnplaced != value)) {
                    this._BitUnplaced = value;
                }
            }
        }

        [Column(Name = "bitUnverified", Storage = "_BitUnverified", DbType = "Bit")]
        public System.Nullable<bool> BitUnverified {
            get {
                return this._BitUnverified;
            }
            set {
                if ((this._BitUnverified != value)) {
                    this._BitUnverified = value;
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_BitAvailableName", DbType = "Bit")]
        public System.Nullable<bool> BitAvailableName {
            get {
                return this._BitAvailableName;
            }
            set {
                if ((this._BitAvailableName != value)) {
                    this._BitAvailableName = value;
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_BitLiteratureName", DbType = "Bit")]
        public System.Nullable<bool> BitLiteratureName {
            get {
                return this._BitLiteratureName;
            }
            set {
                if ((this._BitLiteratureName != value)) {
                    this._BitLiteratureName = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "txtDistQual", Storage = "_TxtDistQual", DbType = "Text")]
        public string TxtDistQual {
            get {
                return this._TxtDistQual;
            }
            set {
                if ((this._TxtDistQual != value)) {
                    this._TxtDistQual = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }

        [Column(Storage = "_RankLong", DbType = "VarChar(100)")]
        public string RankLong {
            get {
                return this._RankLong;
            }
            set {
                if ((this._RankLong != value)) {
                    this._RankLong = value;
                }
            }
        }

        [Column(Storage = "_KingdomLong", DbType = "VarChar(50)")]
        public string KingdomLong {
            get {
                return this._KingdomLong;
            }
            set {
                if ((this._KingdomLong != value)) {
                    this._KingdomLong = value;
                }
            }
        }

        [Column(Storage = "_RankCategory", DbType = "Char(1)")]
        public string RankCategory {
            get {
                return this._RankCategory;
            }
            set {
                if ((this._RankCategory != value)) {
                    this._RankCategory = value;
                }
            }
        }
    }

    public partial class SpBiotaGetAllWithRankResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntParentID;

        private string _VchrEpithet;

        private string _VchrFullName;

        private string _VchrYearOfPub;

        private string _VchrAuthor;

        private string _VchrNameQualifier;

        private string _ChrElemType;

        private string _VchrRank;

        private string _ChrKingdomCode;

        private System.Nullable<int> _IntOrder;

        private string _VchrParentage;

        private System.Nullable<bool> _BitChangedComb;

        private System.Nullable<bool> _BitShadowed;

        private System.Nullable<bool> _BitUnplaced;

        private System.Nullable<bool> _BitUnverified;

        private System.Nullable<bool> _BitAvailableName;

        private System.Nullable<bool> _BitLiteratureName;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _TxtDistQual;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntImportedWithProjectID;

        private string _VchrAvailableNameStatus;

        private string _Rank;

        public SpBiotaGetAllWithRankResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_IntParentID", DbType = "Int")]
        public System.Nullable<int> IntParentID {
            get {
                return this._IntParentID;
            }
            set {
                if ((this._IntParentID != value)) {
                    this._IntParentID = value;
                }
            }
        }

        [Column(Name = "vchrEpithet", Storage = "_VchrEpithet", DbType = "VarChar(200)")]
        public string VchrEpithet {
            get {
                return this._VchrEpithet;
            }
            set {
                if ((this._VchrEpithet != value)) {
                    this._VchrEpithet = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(50)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(100)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrNameQualifier", Storage = "_VchrNameQualifier", DbType = "VarChar(15)")]
        public string VchrNameQualifier {
            get {
                return this._VchrNameQualifier;
            }
            set {
                if ((this._VchrNameQualifier != value)) {
                    this._VchrNameQualifier = value;
                }
            }
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5)")]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this._ChrElemType = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(50)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }

        [Column(Name = "bitChangedComb", Storage = "_BitChangedComb", DbType = "Bit")]
        public System.Nullable<bool> BitChangedComb {
            get {
                return this._BitChangedComb;
            }
            set {
                if ((this._BitChangedComb != value)) {
                    this._BitChangedComb = value;
                }
            }
        }

        [Column(Name = "bitShadowed", Storage = "_BitShadowed", DbType = "Bit")]
        public System.Nullable<bool> BitShadowed {
            get {
                return this._BitShadowed;
            }
            set {
                if ((this._BitShadowed != value)) {
                    this._BitShadowed = value;
                }
            }
        }

        [Column(Name = "bitUnplaced", Storage = "_BitUnplaced", DbType = "Bit")]
        public System.Nullable<bool> BitUnplaced {
            get {
                return this._BitUnplaced;
            }
            set {
                if ((this._BitUnplaced != value)) {
                    this._BitUnplaced = value;
                }
            }
        }

        [Column(Name = "bitUnverified", Storage = "_BitUnverified", DbType = "Bit")]
        public System.Nullable<bool> BitUnverified {
            get {
                return this._BitUnverified;
            }
            set {
                if ((this._BitUnverified != value)) {
                    this._BitUnverified = value;
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_BitAvailableName", DbType = "Bit")]
        public System.Nullable<bool> BitAvailableName {
            get {
                return this._BitAvailableName;
            }
            set {
                if ((this._BitAvailableName != value)) {
                    this._BitAvailableName = value;
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_BitLiteratureName", DbType = "Bit")]
        public System.Nullable<bool> BitLiteratureName {
            get {
                return this._BitLiteratureName;
            }
            set {
                if ((this._BitLiteratureName != value)) {
                    this._BitLiteratureName = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "txtDistQual", Storage = "_TxtDistQual", DbType = "Text")]
        public string TxtDistQual {
            get {
                return this._TxtDistQual;
            }
            set {
                if ((this._TxtDistQual != value)) {
                    this._TxtDistQual = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }

        [Column(Storage = "_Rank", DbType = "VarChar(100)")]
        public string Rank {
            get {
                return this._Rank;
            }
            set {
                if ((this._Rank != value)) {
                    this._Rank = value;
                }
            }
        }
    }

    public partial class SpBiotaGetChildrenIDResult {

        private System.Nullable<int> _IntBiotaID;

        public SpBiotaGetChildrenIDResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }
    }

    public partial class SpBiotaGetDistQualResult {

        private string _TxtDistQual;

        public SpBiotaGetDistQualResult() {
        }

        [Column(Name = "txtDistQual", Storage = "_TxtDistQual", DbType = "Text")]
        public string TxtDistQual {
            get {
                return this._TxtDistQual;
            }
            set {
                if ((this._TxtDistQual != value)) {
                    this._TxtDistQual = value;
                }
            }
        }
    }

    public partial class SpBiotaGetDistributionResult {

        private string _Db_SiteName;

        private string _Db_TaxonName;

        private System.Nullable<int> _Db_SiteID;

        private System.Nullable<int> _Db_VisitID;

        private string _Db_VisitName;

        private string _Db_MaterialName;

        private System.Nullable<int> _Db_MaterialID;

        private System.Nullable<byte> _Type;

        private System.Nullable<double> _X1;

        private System.Nullable<double> _Y1;

        private System.Nullable<double> _X2;

        private System.Nullable<double> _Y2;

        private System.Nullable<int> _Db_BiotaID;

        public SpBiotaGetDistributionResult() {
        }

        [Column(Name = "db_SiteName", Storage = "_Db_SiteName", DbType = "VarChar(100)")]
        public string Db_SiteName {
            get {
                return this._Db_SiteName;
            }
            set {
                if ((this._Db_SiteName != value)) {
                    this._Db_SiteName = value;
                }
            }
        }

        [Column(Name = "db_TaxonName", Storage = "_Db_TaxonName", DbType = "VarChar(255)")]
        public string Db_TaxonName {
            get {
                return this._Db_TaxonName;
            }
            set {
                if ((this._Db_TaxonName != value)) {
                    this._Db_TaxonName = value;
                }
            }
        }

        [Column(Name = "db_SiteID", Storage = "_Db_SiteID", DbType = "Int")]
        public System.Nullable<int> Db_SiteID {
            get {
                return this._Db_SiteID;
            }
            set {
                if ((this._Db_SiteID != value)) {
                    this._Db_SiteID = value;
                }
            }
        }

        [Column(Name = "db_VisitID", Storage = "_Db_VisitID", DbType = "Int")]
        public System.Nullable<int> Db_VisitID {
            get {
                return this._Db_VisitID;
            }
            set {
                if ((this._Db_VisitID != value)) {
                    this._Db_VisitID = value;
                }
            }
        }

        [Column(Name = "db_VisitName", Storage = "_Db_VisitName", DbType = "VarChar(255)")]
        public string Db_VisitName {
            get {
                return this._Db_VisitName;
            }
            set {
                if ((this._Db_VisitName != value)) {
                    this._Db_VisitName = value;
                }
            }
        }

        [Column(Name = "db_MaterialName", Storage = "_Db_MaterialName", DbType = "VarChar(255)")]
        public string Db_MaterialName {
            get {
                return this._Db_MaterialName;
            }
            set {
                if ((this._Db_MaterialName != value)) {
                    this._Db_MaterialName = value;
                }
            }
        }

        [Column(Name = "db_MaterialID", Storage = "_Db_MaterialID", DbType = "Int")]
        public System.Nullable<int> Db_MaterialID {
            get {
                return this._Db_MaterialID;
            }
            set {
                if ((this._Db_MaterialID != value)) {
                    this._Db_MaterialID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "TinyInt")]
        public System.Nullable<byte> Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_X1", DbType = "Float")]
        public System.Nullable<double> X1 {
            get {
                return this._X1;
            }
            set {
                if ((this._X1 != value)) {
                    this._X1 = value;
                }
            }
        }

        [Column(Storage = "_Y1", DbType = "Float")]
        public System.Nullable<double> Y1 {
            get {
                return this._Y1;
            }
            set {
                if ((this._Y1 != value)) {
                    this._Y1 = value;
                }
            }
        }

        [Column(Storage = "_X2", DbType = "Float")]
        public System.Nullable<double> X2 {
            get {
                return this._X2;
            }
            set {
                if ((this._X2 != value)) {
                    this._X2 = value;
                }
            }
        }

        [Column(Storage = "_Y2", DbType = "Float")]
        public System.Nullable<double> Y2 {
            get {
                return this._Y2;
            }
            set {
                if ((this._Y2 != value)) {
                    this._Y2 = value;
                }
            }
        }

        [Column(Name = "db_BiotaID", Storage = "_Db_BiotaID", DbType = "Int")]
        public System.Nullable<int> Db_BiotaID {
            get {
                return this._Db_BiotaID;
            }
            set {
                if ((this._Db_BiotaID != value)) {
                    this._Db_BiotaID = value;
                }
            }
        }
    }

    public partial class SpBiotaGetOwnershipResult {

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        public SpBiotaGetOwnershipResult() {
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }
    }

    public partial class SpBiotaGetParentageResult {

        private string _VchrParentage;

        public SpBiotaGetParentageResult() {
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }
    }

    public partial class SpBiotaGetTypeAndDescResult {

        private string _ChrElemType;

        private string _Column2;

        private System.Nullable<bool> _BitAvailableName;

        private System.Nullable<bool> _BitLiteratureName;

        public SpBiotaGetTypeAndDescResult() {
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5)")]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this._ChrElemType = value;
                }
            }
        }

        [Column(Name = "", Storage = "_Column2", DbType = "VarChar(255)")]
        public string Column2 {
            get {
                return this._Column2;
            }
            set {
                if ((this._Column2 != value)) {
                    this._Column2 = value;
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_BitAvailableName", DbType = "Bit")]
        public System.Nullable<bool> BitAvailableName {
            get {
                return this._BitAvailableName;
            }
            set {
                if ((this._BitAvailableName != value)) {
                    this._BitAvailableName = value;
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_BitLiteratureName", DbType = "Bit")]
        public System.Nullable<bool> BitLiteratureName {
            get {
                return this._BitLiteratureName;
            }
            set {
                if ((this._BitLiteratureName != value)) {
                    this._BitLiteratureName = value;
                }
            }
        }
    }

    public partial class SpBiotaImportResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpBiotaImportResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpBiotaInsertResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpBiotaInsertResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpBiotaListResult {

        private System.Nullable<int> _TaxaID;

        private System.Nullable<int> _TaxaParentID;

        private string _Epithet;

        private string _TaxaFullName;

        private string _YearOfPub;

        private string _Author;

        private string _ElemType;

        private string _KingdomCode;

        private System.Nullable<bool> _Unplaced;

        private System.Nullable<int> _Order;

        private string _Rank;

        private System.Nullable<bool> _ChgComb;

        private System.Nullable<bool> _Unverified;

        private System.Nullable<bool> _AvailableName;

        private System.Nullable<bool> _LiteratureName;

        private string _NameStatus;

        private System.Nullable<int> _NumChildren;

        public SpBiotaListResult() {
        }

        [Column(Storage = "_TaxaID", DbType = "Int")]
        public System.Nullable<int> TaxaID {
            get {
                return this._TaxaID;
            }
            set {
                if ((this._TaxaID != value)) {
                    this._TaxaID = value;
                }
            }
        }

        [Column(Storage = "_TaxaParentID", DbType = "Int")]
        public System.Nullable<int> TaxaParentID {
            get {
                return this._TaxaParentID;
            }
            set {
                if ((this._TaxaParentID != value)) {
                    this._TaxaParentID = value;
                }
            }
        }

        [Column(Storage = "_Epithet", DbType = "VarChar(200)")]
        public string Epithet {
            get {
                return this._Epithet;
            }
            set {
                if ((this._Epithet != value)) {
                    this._Epithet = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }

        [Column(Storage = "_YearOfPub", DbType = "VarChar(50)")]
        public string YearOfPub {
            get {
                return this._YearOfPub;
            }
            set {
                if ((this._YearOfPub != value)) {
                    this._YearOfPub = value;
                }
            }
        }

        [Column(Storage = "_Author", DbType = "VarChar(100)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this._Author = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "Char(5)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_KingdomCode", DbType = "Char(2)")]
        public string KingdomCode {
            get {
                return this._KingdomCode;
            }
            set {
                if ((this._KingdomCode != value)) {
                    this._KingdomCode = value;
                }
            }
        }

        [Column(Storage = "_Unplaced", DbType = "Bit")]
        public System.Nullable<bool> Unplaced {
            get {
                return this._Unplaced;
            }
            set {
                if ((this._Unplaced != value)) {
                    this._Unplaced = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }

        [Column(Storage = "_Rank", DbType = "VarChar(50)")]
        public string Rank {
            get {
                return this._Rank;
            }
            set {
                if ((this._Rank != value)) {
                    this._Rank = value;
                }
            }
        }

        [Column(Storage = "_ChgComb", DbType = "Bit")]
        public System.Nullable<bool> ChgComb {
            get {
                return this._ChgComb;
            }
            set {
                if ((this._ChgComb != value)) {
                    this._ChgComb = value;
                }
            }
        }

        [Column(Storage = "_Unverified", DbType = "Bit")]
        public System.Nullable<bool> Unverified {
            get {
                return this._Unverified;
            }
            set {
                if ((this._Unverified != value)) {
                    this._Unverified = value;
                }
            }
        }

        [Column(Storage = "_AvailableName", DbType = "Bit")]
        public System.Nullable<bool> AvailableName {
            get {
                return this._AvailableName;
            }
            set {
                if ((this._AvailableName != value)) {
                    this._AvailableName = value;
                }
            }
        }

        [Column(Storage = "_LiteratureName", DbType = "Bit")]
        public System.Nullable<bool> LiteratureName {
            get {
                return this._LiteratureName;
            }
            set {
                if ((this._LiteratureName != value)) {
                    this._LiteratureName = value;
                }
            }
        }

        [Column(Storage = "_NameStatus", DbType = "VarChar(255)")]
        public string NameStatus {
            get {
                return this._NameStatus;
            }
            set {
                if ((this._NameStatus != value)) {
                    this._NameStatus = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaListChildrenResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntParentID;

        private string _VchrEpithet;

        private string _VchrFullName;

        private string _VchrYearOfPub;

        private string _VchrAuthor;

        private string _VchrNameQualifier;

        private string _ChrElemType;

        private string _VchrRank;

        private string _ChrKingdomCode;

        private System.Nullable<int> _IntOrder;

        private string _VchrParentage;

        private System.Nullable<bool> _BitChangedComb;

        private System.Nullable<bool> _BitShadowed;

        private System.Nullable<bool> _BitUnplaced;

        private System.Nullable<bool> _BitUnverified;

        private System.Nullable<bool> _BitAvailableName;

        private System.Nullable<bool> _BitLiteratureName;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _TxtDistQual;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntImportedWithProjectID;

        private string _VchrAvailableNameStatus;

        public SpBiotaListChildrenResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_IntParentID", DbType = "Int")]
        public System.Nullable<int> IntParentID {
            get {
                return this._IntParentID;
            }
            set {
                if ((this._IntParentID != value)) {
                    this._IntParentID = value;
                }
            }
        }

        [Column(Name = "vchrEpithet", Storage = "_VchrEpithet", DbType = "VarChar(200)")]
        public string VchrEpithet {
            get {
                return this._VchrEpithet;
            }
            set {
                if ((this._VchrEpithet != value)) {
                    this._VchrEpithet = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(50)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(100)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrNameQualifier", Storage = "_VchrNameQualifier", DbType = "VarChar(15)")]
        public string VchrNameQualifier {
            get {
                return this._VchrNameQualifier;
            }
            set {
                if ((this._VchrNameQualifier != value)) {
                    this._VchrNameQualifier = value;
                }
            }
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5)")]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this._ChrElemType = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(50)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }

        [Column(Name = "bitChangedComb", Storage = "_BitChangedComb", DbType = "Bit")]
        public System.Nullable<bool> BitChangedComb {
            get {
                return this._BitChangedComb;
            }
            set {
                if ((this._BitChangedComb != value)) {
                    this._BitChangedComb = value;
                }
            }
        }

        [Column(Name = "bitShadowed", Storage = "_BitShadowed", DbType = "Bit")]
        public System.Nullable<bool> BitShadowed {
            get {
                return this._BitShadowed;
            }
            set {
                if ((this._BitShadowed != value)) {
                    this._BitShadowed = value;
                }
            }
        }

        [Column(Name = "bitUnplaced", Storage = "_BitUnplaced", DbType = "Bit")]
        public System.Nullable<bool> BitUnplaced {
            get {
                return this._BitUnplaced;
            }
            set {
                if ((this._BitUnplaced != value)) {
                    this._BitUnplaced = value;
                }
            }
        }

        [Column(Name = "bitUnverified", Storage = "_BitUnverified", DbType = "Bit")]
        public System.Nullable<bool> BitUnverified {
            get {
                return this._BitUnverified;
            }
            set {
                if ((this._BitUnverified != value)) {
                    this._BitUnverified = value;
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_BitAvailableName", DbType = "Bit")]
        public System.Nullable<bool> BitAvailableName {
            get {
                return this._BitAvailableName;
            }
            set {
                if ((this._BitAvailableName != value)) {
                    this._BitAvailableName = value;
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_BitLiteratureName", DbType = "Bit")]
        public System.Nullable<bool> BitLiteratureName {
            get {
                return this._BitLiteratureName;
            }
            set {
                if ((this._BitLiteratureName != value)) {
                    this._BitLiteratureName = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "txtDistQual", Storage = "_TxtDistQual", DbType = "Text")]
        public string TxtDistQual {
            get {
                return this._TxtDistQual;
            }
            set {
                if ((this._TxtDistQual != value)) {
                    this._TxtDistQual = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }
    }

    public partial class SpBiotaListFullTreeResult {

        private System.Nullable<int> _TaxaID;

        private System.Nullable<int> _TaxaParentID;

        private string _Epithet;

        private string _TaxaFullName;

        private string _YearOfPub;

        private string _Author;

        private string _ElemType;

        private string _KingdomCode;

        private System.Nullable<bool> _Unplaced;

        private System.Nullable<int> _Order;

        private string _Rank;

        private System.Nullable<bool> _ChgComb;

        private System.Nullable<bool> _Unverified;

        private System.Nullable<bool> _AvailableName;

        private System.Nullable<bool> _LiteratureName;

        private string _NameStatus;

        private string _NumChildren;

        public SpBiotaListFullTreeResult() {
        }

        [Column(Storage = "_TaxaID", DbType = "Int")]
        public System.Nullable<int> TaxaID {
            get {
                return this._TaxaID;
            }
            set {
                if ((this._TaxaID != value)) {
                    this._TaxaID = value;
                }
            }
        }

        [Column(Storage = "_TaxaParentID", DbType = "Int")]
        public System.Nullable<int> TaxaParentID {
            get {
                return this._TaxaParentID;
            }
            set {
                if ((this._TaxaParentID != value)) {
                    this._TaxaParentID = value;
                }
            }
        }

        [Column(Storage = "_Epithet", DbType = "VarChar(200)")]
        public string Epithet {
            get {
                return this._Epithet;
            }
            set {
                if ((this._Epithet != value)) {
                    this._Epithet = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }

        [Column(Storage = "_YearOfPub", DbType = "VarChar(50)")]
        public string YearOfPub {
            get {
                return this._YearOfPub;
            }
            set {
                if ((this._YearOfPub != value)) {
                    this._YearOfPub = value;
                }
            }
        }

        [Column(Storage = "_Author", DbType = "VarChar(100)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this._Author = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "Char(5)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_KingdomCode", DbType = "Char(2)")]
        public string KingdomCode {
            get {
                return this._KingdomCode;
            }
            set {
                if ((this._KingdomCode != value)) {
                    this._KingdomCode = value;
                }
            }
        }

        [Column(Storage = "_Unplaced", DbType = "Bit")]
        public System.Nullable<bool> Unplaced {
            get {
                return this._Unplaced;
            }
            set {
                if ((this._Unplaced != value)) {
                    this._Unplaced = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }

        [Column(Storage = "_Rank", DbType = "VarChar(50)")]
        public string Rank {
            get {
                return this._Rank;
            }
            set {
                if ((this._Rank != value)) {
                    this._Rank = value;
                }
            }
        }

        [Column(Storage = "_ChgComb", DbType = "Bit")]
        public System.Nullable<bool> ChgComb {
            get {
                return this._ChgComb;
            }
            set {
                if ((this._ChgComb != value)) {
                    this._ChgComb = value;
                }
            }
        }

        [Column(Storage = "_Unverified", DbType = "Bit")]
        public System.Nullable<bool> Unverified {
            get {
                return this._Unverified;
            }
            set {
                if ((this._Unverified != value)) {
                    this._Unverified = value;
                }
            }
        }

        [Column(Storage = "_AvailableName", DbType = "Bit")]
        public System.Nullable<bool> AvailableName {
            get {
                return this._AvailableName;
            }
            set {
                if ((this._AvailableName != value)) {
                    this._AvailableName = value;
                }
            }
        }

        [Column(Storage = "_LiteratureName", DbType = "Bit")]
        public System.Nullable<bool> LiteratureName {
            get {
                return this._LiteratureName;
            }
            set {
                if ((this._LiteratureName != value)) {
                    this._LiteratureName = value;
                }
            }
        }

        [Column(Storage = "_NameStatus", DbType = "VarChar(255)")]
        public string NameStatus {
            get {
                return this._NameStatus;
            }
            set {
                if ((this._NameStatus != value)) {
                    this._NameStatus = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "VarChar(2)")]
        public string NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaListTopResult {

        private System.Nullable<int> _TaxaID;

        private System.Nullable<int> _TaxaParentID;

        private string _Epithet;

        private string _TaxaFullName;

        private string _YearOfPub;

        private string _Author;

        private string _ElemType;

        private string _KingdomCode;

        private System.Nullable<bool> _Unplaced;

        private System.Nullable<int> _Order;

        private string _Rank;

        private System.Nullable<bool> _ChgComb;

        private System.Nullable<bool> _Unverified;

        private System.Nullable<bool> _AvailableName;

        private System.Nullable<bool> _LiteratureName;

        private string _NameStatus;

        private System.Nullable<int> _NumChildren;

        public SpBiotaListTopResult() {
        }

        [Column(Storage = "_TaxaID", DbType = "Int")]
        public System.Nullable<int> TaxaID {
            get {
                return this._TaxaID;
            }
            set {
                if ((this._TaxaID != value)) {
                    this._TaxaID = value;
                }
            }
        }

        [Column(Storage = "_TaxaParentID", DbType = "Int")]
        public System.Nullable<int> TaxaParentID {
            get {
                return this._TaxaParentID;
            }
            set {
                if ((this._TaxaParentID != value)) {
                    this._TaxaParentID = value;
                }
            }
        }

        [Column(Storage = "_Epithet", DbType = "VarChar(200)")]
        public string Epithet {
            get {
                return this._Epithet;
            }
            set {
                if ((this._Epithet != value)) {
                    this._Epithet = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }

        [Column(Storage = "_YearOfPub", DbType = "VarChar(50)")]
        public string YearOfPub {
            get {
                return this._YearOfPub;
            }
            set {
                if ((this._YearOfPub != value)) {
                    this._YearOfPub = value;
                }
            }
        }

        [Column(Storage = "_Author", DbType = "VarChar(100)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this._Author = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "Char(5)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_KingdomCode", DbType = "Char(2)")]
        public string KingdomCode {
            get {
                return this._KingdomCode;
            }
            set {
                if ((this._KingdomCode != value)) {
                    this._KingdomCode = value;
                }
            }
        }

        [Column(Storage = "_Unplaced", DbType = "Bit")]
        public System.Nullable<bool> Unplaced {
            get {
                return this._Unplaced;
            }
            set {
                if ((this._Unplaced != value)) {
                    this._Unplaced = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }

        [Column(Storage = "_Rank", DbType = "VarChar(50)")]
        public string Rank {
            get {
                return this._Rank;
            }
            set {
                if ((this._Rank != value)) {
                    this._Rank = value;
                }
            }
        }

        [Column(Storage = "_ChgComb", DbType = "Bit")]
        public System.Nullable<bool> ChgComb {
            get {
                return this._ChgComb;
            }
            set {
                if ((this._ChgComb != value)) {
                    this._ChgComb = value;
                }
            }
        }

        [Column(Storage = "_Unverified", DbType = "Bit")]
        public System.Nullable<bool> Unverified {
            get {
                return this._Unverified;
            }
            set {
                if ((this._Unverified != value)) {
                    this._Unverified = value;
                }
            }
        }

        [Column(Storage = "_AvailableName", DbType = "Bit")]
        public System.Nullable<bool> AvailableName {
            get {
                return this._AvailableName;
            }
            set {
                if ((this._AvailableName != value)) {
                    this._AvailableName = value;
                }
            }
        }

        [Column(Storage = "_LiteratureName", DbType = "Bit")]
        public System.Nullable<bool> LiteratureName {
            get {
                return this._LiteratureName;
            }
            set {
                if ((this._LiteratureName != value)) {
                    this._LiteratureName = value;
                }
            }
        }

        [Column(Storage = "_NameStatus", DbType = "VarChar(255)")]
        public string NameStatus {
            get {
                return this._NameStatus;
            }
            set {
                if ((this._NameStatus != value)) {
                    this._NameStatus = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaListTypesResult {

        private string _Available;

        private string _Valid;

        private string _Type;

        private string _Museum;

        private string _AccessionNo;

        private string _Material;

        private string _TypeLocality;

        private string _Specimen;

        private string _Collectors;

        private string _Site;

        private string _Curr_Id_;

        public SpBiotaListTypesResult() {
        }

        [Column(Storage = "_Available", DbType = "VarChar(255)")]
        public string Available {
            get {
                return this._Available;
            }
            set {
                if ((this._Available != value)) {
                    this._Available = value;
                }
            }
        }

        [Column(Storage = "_Valid", DbType = "VarChar(255)")]
        public string Valid {
            get {
                return this._Valid;
            }
            set {
                if ((this._Valid != value)) {
                    this._Valid = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(50)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_Museum", DbType = "VarChar(255)")]
        public string Museum {
            get {
                return this._Museum;
            }
            set {
                if ((this._Museum != value)) {
                    this._Museum = value;
                }
            }
        }

        [Column(Name = "Accession No", Storage = "_AccessionNo", DbType = "VarChar(50)")]
        public string AccessionNo {
            get {
                return this._AccessionNo;
            }
            set {
                if ((this._AccessionNo != value)) {
                    this._AccessionNo = value;
                }
            }
        }

        [Column(Storage = "_Material", DbType = "VarChar(50)")]
        public string Material {
            get {
                return this._Material;
            }
            set {
                if ((this._Material != value)) {
                    this._Material = value;
                }
            }
        }

        [Column(Name = "Type Locality", Storage = "_TypeLocality", DbType = "VarChar(255)")]
        public string TypeLocality {
            get {
                return this._TypeLocality;
            }
            set {
                if ((this._TypeLocality != value)) {
                    this._TypeLocality = value;
                }
            }
        }

        [Column(Storage = "_Specimen", DbType = "VarChar(50)")]
        public string Specimen {
            get {
                return this._Specimen;
            }
            set {
                if ((this._Specimen != value)) {
                    this._Specimen = value;
                }
            }
        }

        [Column(Storage = "_Collectors", DbType = "VarChar(255)")]
        public string Collectors {
            get {
                return this._Collectors;
            }
            set {
                if ((this._Collectors != value)) {
                    this._Collectors = value;
                }
            }
        }

        [Column(Storage = "_Site", DbType = "VarChar(100)")]
        public string Site {
            get {
                return this._Site;
            }
            set {
                if ((this._Site != value)) {
                    this._Site = value;
                }
            }
        }

        [Column(Name = "Curr. Id.", Storage = "_Curr_Id_", DbType = "VarChar(255)")]
        public string Curr_Id_ {
            get {
                return this._Curr_Id_;
            }
            set {
                if ((this._Curr_Id_ != value)) {
                    this._Curr_Id_ = value;
                }
            }
        }
    }

    public partial class SpBiotaLocationGetResult {

        private System.Nullable<int> _IntBiotaLocationID;

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntBiotaStorageID;

        private string _TxtNotes;

        private string _StorageLocation;

        private string _StoragePath;

        private System.Nullable<int> _Changes;

        private System.Nullable<System.Guid> _GUID;

        public SpBiotaLocationGetResult() {
        }

        [Column(Name = "intBiotaLocationID", Storage = "_IntBiotaLocationID", DbType = "Int")]
        public System.Nullable<int> IntBiotaLocationID {
            get {
                return this._IntBiotaLocationID;
            }
            set {
                if ((this._IntBiotaLocationID != value)) {
                    this._IntBiotaLocationID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intBiotaStorageID", Storage = "_IntBiotaStorageID", DbType = "Int")]
        public System.Nullable<int> IntBiotaStorageID {
            get {
                return this._IntBiotaStorageID;
            }
            set {
                if ((this._IntBiotaStorageID != value)) {
                    this._IntBiotaStorageID = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_StorageLocation", DbType = "VarChar(50)")]
        public string StorageLocation {
            get {
                return this._StorageLocation;
            }
            set {
                if ((this._StorageLocation != value)) {
                    this._StorageLocation = value;
                }
            }
        }

        [Column(Storage = "_StoragePath", DbType = "Text")]
        public string StoragePath {
            get {
                return this._StoragePath;
            }
            set {
                if ((this._StoragePath != value)) {
                    this._StoragePath = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpBiotaLocationInsertResult {

        private System.Nullable<decimal> _NewBiotaLocationID;

        public SpBiotaLocationInsertResult() {
        }

        [Column(Storage = "_NewBiotaLocationID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewBiotaLocationID {
            get {
                return this._NewBiotaLocationID;
            }
            set {
                if ((this._NewBiotaLocationID != value)) {
                    this._NewBiotaLocationID = value;
                }
            }
        }
    }

    public partial class SpBiotaLookupResult {

        private System.Nullable<int> _IntBiotaID;

        private string _TaxaFullName;

        public SpBiotaLookupResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }
    }

    public partial class SpBiotaLookupValidResult {

        private System.Nullable<int> _IntBiotaID;

        private string _TaxaFullName;

        public SpBiotaLookupValidResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }
    }

    public partial class SpBiotaRankGetFromLongNameResult {

        private string _ChrCode;

        private string _VchrLongName;

        private string _VchrTextBeforeInFullName;

        private string _VchrTextAfterInFullName;

        private System.Nullable<bool> _BitJoinToParentInFullName;

        private string _VchrChecklistDisplayAs;

        private System.Nullable<byte> _BitAvailableNameAllowed;

        private System.Nullable<bool> _BitUnplacedAllowed;

        private System.Nullable<bool> _BitChgCombAllowed;

        private System.Nullable<bool> _BitLituratueNameAllowed;

        private string _ChrCategory;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<System.Guid> _GUID;

        public SpBiotaRankGetFromLongNameResult() {
        }

        [Column(Name = "chrCode", Storage = "_ChrCode", DbType = "Char(5)")]
        public string ChrCode {
            get {
                return this._ChrCode;
            }
            set {
                if ((this._ChrCode != value)) {
                    this._ChrCode = value;
                }
            }
        }

        [Column(Name = "vchrLongName", Storage = "_VchrLongName", DbType = "VarChar(100)")]
        public string VchrLongName {
            get {
                return this._VchrLongName;
            }
            set {
                if ((this._VchrLongName != value)) {
                    this._VchrLongName = value;
                }
            }
        }

        [Column(Name = "vchrTextBeforeInFullName", Storage = "_VchrTextBeforeInFullName", DbType = "VarChar(10)")]
        public string VchrTextBeforeInFullName {
            get {
                return this._VchrTextBeforeInFullName;
            }
            set {
                if ((this._VchrTextBeforeInFullName != value)) {
                    this._VchrTextBeforeInFullName = value;
                }
            }
        }

        [Column(Name = "vchrTextAfterInFullName", Storage = "_VchrTextAfterInFullName", DbType = "VarChar(10)")]
        public string VchrTextAfterInFullName {
            get {
                return this._VchrTextAfterInFullName;
            }
            set {
                if ((this._VchrTextAfterInFullName != value)) {
                    this._VchrTextAfterInFullName = value;
                }
            }
        }

        [Column(Name = "bitJoinToParentInFullName", Storage = "_BitJoinToParentInFullName", DbType = "Bit")]
        public System.Nullable<bool> BitJoinToParentInFullName {
            get {
                return this._BitJoinToParentInFullName;
            }
            set {
                if ((this._BitJoinToParentInFullName != value)) {
                    this._BitJoinToParentInFullName = value;
                }
            }
        }

        [Column(Name = "vchrChecklistDisplayAs", Storage = "_VchrChecklistDisplayAs", DbType = "VarChar(20)")]
        public string VchrChecklistDisplayAs {
            get {
                return this._VchrChecklistDisplayAs;
            }
            set {
                if ((this._VchrChecklistDisplayAs != value)) {
                    this._VchrChecklistDisplayAs = value;
                }
            }
        }

        [Column(Name = "bitAvailableNameAllowed", Storage = "_BitAvailableNameAllowed", DbType = "TinyInt")]
        public System.Nullable<byte> BitAvailableNameAllowed {
            get {
                return this._BitAvailableNameAllowed;
            }
            set {
                if ((this._BitAvailableNameAllowed != value)) {
                    this._BitAvailableNameAllowed = value;
                }
            }
        }

        [Column(Name = "bitUnplacedAllowed", Storage = "_BitUnplacedAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitUnplacedAllowed {
            get {
                return this._BitUnplacedAllowed;
            }
            set {
                if ((this._BitUnplacedAllowed != value)) {
                    this._BitUnplacedAllowed = value;
                }
            }
        }

        [Column(Name = "bitChgCombAllowed", Storage = "_BitChgCombAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitChgCombAllowed {
            get {
                return this._BitChgCombAllowed;
            }
            set {
                if ((this._BitChgCombAllowed != value)) {
                    this._BitChgCombAllowed = value;
                }
            }
        }

        [Column(Name = "bitLituratueNameAllowed", Storage = "_BitLituratueNameAllowed", DbType = "Bit")]
        public System.Nullable<bool> BitLituratueNameAllowed {
            get {
                return this._BitLituratueNameAllowed;
            }
            set {
                if ((this._BitLituratueNameAllowed != value)) {
                    this._BitLituratueNameAllowed = value;
                }
            }
        }

        [Column(Name = "chrCategory", Storage = "_ChrCategory", DbType = "Char(1)")]
        public string ChrCategory {
            get {
                return this._ChrCategory;
            }
            set {
                if ((this._ChrCategory != value)) {
                    this._ChrCategory = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpBiotaRankListResult {

        private string _ChrCode;

        private string _VchrLongName;

        public SpBiotaRankListResult() {
        }

        [Column(Name = "chrCode", Storage = "_ChrCode", DbType = "Char(5)")]
        public string ChrCode {
            get {
                return this._ChrCode;
            }
            set {
                if ((this._ChrCode != value)) {
                    this._ChrCode = value;
                }
            }
        }

        [Column(Name = "vchrLongName", Storage = "_VchrLongName", DbType = "VarChar(100)")]
        public string VchrLongName {
            get {
                return this._VchrLongName;
            }
            set {
                if ((this._VchrLongName != value)) {
                    this._VchrLongName = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageFindResult {

        private System.Nullable<int> _BiotaStorageID;

        private System.Nullable<int> _BiotaStorageParentID;

        private string _BiotaStorageName;

        private System.Nullable<int> _NumChildren;

        public SpBiotaStorageFindResult() {
        }

        [Column(Storage = "_BiotaStorageID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this._BiotaStorageID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageParentID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageParentID {
            get {
                return this._BiotaStorageParentID;
            }
            set {
                if ((this._BiotaStorageParentID != value)) {
                    this._BiotaStorageParentID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageName", DbType = "VarChar(50)")]
        public string BiotaStorageName {
            get {
                return this._BiotaStorageName;
            }
            set {
                if ((this._BiotaStorageName != value)) {
                    this._BiotaStorageName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageGetParentageResult {

        private string _VchrParentage;

        public SpBiotaStorageGetParentageResult() {
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageInsertResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpBiotaStorageInsertResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageListResult {

        private System.Nullable<int> _BiotaStorageID;

        private System.Nullable<int> _BiotaStorageParentID;

        private string _BiotaStorageName;

        private System.Nullable<int> _NumChildren;

        public SpBiotaStorageListResult() {
        }

        [Column(Storage = "_BiotaStorageID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this._BiotaStorageID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageParentID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageParentID {
            get {
                return this._BiotaStorageParentID;
            }
            set {
                if ((this._BiotaStorageParentID != value)) {
                    this._BiotaStorageParentID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageName", DbType = "VarChar(50)")]
        public string BiotaStorageName {
            get {
                return this._BiotaStorageName;
            }
            set {
                if ((this._BiotaStorageName != value)) {
                    this._BiotaStorageName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageListFullTreeResult {

        private System.Nullable<int> _BiotaStorageID;

        private System.Nullable<int> _BiotaStorageParentID;

        private string _BiotaStorageName;

        private string _NumChildren;

        public SpBiotaStorageListFullTreeResult() {
        }

        [Column(Storage = "_BiotaStorageID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this._BiotaStorageID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageParentID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageParentID {
            get {
                return this._BiotaStorageParentID;
            }
            set {
                if ((this._BiotaStorageParentID != value)) {
                    this._BiotaStorageParentID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageName", DbType = "VarChar(50)")]
        public string BiotaStorageName {
            get {
                return this._BiotaStorageName;
            }
            set {
                if ((this._BiotaStorageName != value)) {
                    this._BiotaStorageName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "VarChar(2)")]
        public string NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageListTopResult {

        private System.Nullable<int> _BiotaStorageID;

        private System.Nullable<int> _BiotaStorageParentID;

        private string _BiotaStorageName;

        private System.Nullable<int> _NumChildren;

        public SpBiotaStorageListTopResult() {
        }

        [Column(Storage = "_BiotaStorageID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this._BiotaStorageID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageParentID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageParentID {
            get {
                return this._BiotaStorageParentID;
            }
            set {
                if ((this._BiotaStorageParentID != value)) {
                    this._BiotaStorageParentID = value;
                }
            }
        }

        [Column(Storage = "_BiotaStorageName", DbType = "VarChar(50)")]
        public string BiotaStorageName {
            get {
                return this._BiotaStorageName;
            }
            set {
                if ((this._BiotaStorageName != value)) {
                    this._BiotaStorageName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpBiotaStorageOKToDeleteResult {

        private string _Column1;

        public SpBiotaStorageOKToDeleteResult() {
        }

        [Column(Name = "", Storage = "_Column1", DbType = "VarChar(1)")]
        public string Column1 {
            get {
                return this._Column1;
            }
            set {
                if ((this._Column1 != value)) {
                    this._Column1 = value;
                }
            }
        }
    }

    public partial class SpCellDetailsGetCellResult {

        private System.Nullable<int> _IntMorphologyCellID;

        private System.Nullable<int> _IntInsertedWithProjectID;

        private string _ProjectName;

        private System.Nullable<int> _IntMorphologyViewID;

        private string _ViewName;

        private System.Nullable<int> _IntCharacterID;

        private string _CharacterName;

        private System.Nullable<int> _IntMorphologyEntityID;

        private System.Nullable<int> _IntBiotaID;

        private string _TaxonName;

        public SpCellDetailsGetCellResult() {
        }

        [Column(Name = "intMorphologyCellID", Storage = "_IntMorphologyCellID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyCellID {
            get {
                return this._IntMorphologyCellID;
            }
            set {
                if ((this._IntMorphologyCellID != value)) {
                    this._IntMorphologyCellID = value;
                }
            }
        }

        [Column(Name = "intInsertedWithProjectID", Storage = "_IntInsertedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntInsertedWithProjectID {
            get {
                return this._IntInsertedWithProjectID;
            }
            set {
                if ((this._IntInsertedWithProjectID != value)) {
                    this._IntInsertedWithProjectID = value;
                }
            }
        }

        [Column(Storage = "_ProjectName", DbType = "VarChar(255)")]
        public string ProjectName {
            get {
                return this._ProjectName;
            }
            set {
                if ((this._ProjectName != value)) {
                    this._ProjectName = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Storage = "_ViewName", DbType = "VarChar(255)")]
        public string ViewName {
            get {
                return this._ViewName;
            }
            set {
                if ((this._ViewName != value)) {
                    this._ViewName = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Storage = "_CharacterName", DbType = "VarChar(2000)")]
        public string CharacterName {
            get {
                return this._CharacterName;
            }
            set {
                if ((this._CharacterName != value)) {
                    this._CharacterName = value;
                }
            }
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_IntMorphologyEntityID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyEntityID {
            get {
                return this._IntMorphologyEntityID;
            }
            set {
                if ((this._IntMorphologyEntityID != value)) {
                    this._IntMorphologyEntityID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Storage = "_TaxonName", DbType = "VarChar(200)")]
        public string TaxonName {
            get {
                return this._TaxonName;
            }
            set {
                if ((this._TaxonName != value)) {
                    this._TaxonName = value;
                }
            }
        }
    }

    public partial class SpCellDetailsGetVECResult {

        private System.Nullable<int> _IntMorphologyCellID;

        private System.Nullable<int> _IntInsertedWithProjectID;

        private string _ProjectName;

        private System.Nullable<int> _IntMorphologyViewID;

        private string _ViewName;

        private System.Nullable<int> _IntCharacterID;

        private string _CharacterName;

        private System.Nullable<int> _IntMorphologyEntityID;

        private System.Nullable<int> _IntBiotaID;

        private string _TaxonName;

        public SpCellDetailsGetVECResult() {
        }

        [Column(Name = "intMorphologyCellID", Storage = "_IntMorphologyCellID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyCellID {
            get {
                return this._IntMorphologyCellID;
            }
            set {
                if ((this._IntMorphologyCellID != value)) {
                    this._IntMorphologyCellID = value;
                }
            }
        }

        [Column(Name = "intInsertedWithProjectID", Storage = "_IntInsertedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntInsertedWithProjectID {
            get {
                return this._IntInsertedWithProjectID;
            }
            set {
                if ((this._IntInsertedWithProjectID != value)) {
                    this._IntInsertedWithProjectID = value;
                }
            }
        }

        [Column(Storage = "_ProjectName", DbType = "VarChar(255)")]
        public string ProjectName {
            get {
                return this._ProjectName;
            }
            set {
                if ((this._ProjectName != value)) {
                    this._ProjectName = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Storage = "_ViewName", DbType = "VarChar(255)")]
        public string ViewName {
            get {
                return this._ViewName;
            }
            set {
                if ((this._ViewName != value)) {
                    this._ViewName = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Storage = "_CharacterName", DbType = "VarChar(2000)")]
        public string CharacterName {
            get {
                return this._CharacterName;
            }
            set {
                if ((this._CharacterName != value)) {
                    this._CharacterName = value;
                }
            }
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_IntMorphologyEntityID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyEntityID {
            get {
                return this._IntMorphologyEntityID;
            }
            set {
                if ((this._IntMorphologyEntityID != value)) {
                    this._IntMorphologyEntityID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Storage = "_TaxonName", DbType = "VarChar(200)")]
        public string TaxonName {
            get {
                return this._TaxonName;
            }
            set {
                if ((this._TaxonName != value)) {
                    this._TaxonName = value;
                }
            }
        }
    }

    public partial class SpCellsListForEntityIDResult {

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntMorphologyViewID;

        private string _TxtValue;

        public SpCellsListForEntityIDResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "txtValue", Storage = "_TxtValue", DbType = "Text")]
        public string TxtValue {
            get {
                return this._TxtValue;
            }
            set {
                if ((this._TxtValue != value)) {
                    this._TxtValue = value;
                }
            }
        }
    }

    public partial class SpCharacterDependancyListResult {

        private System.Nullable<int> _IntCharacterDependancyID;

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntCharacterStateID;

        private string _TxtNotes;

        private string _DisplayName;

        private System.Nullable<int> _Changes;

        public SpCharacterDependancyListResult() {
        }

        [Column(Name = "intCharacterDependancyID", Storage = "_IntCharacterDependancyID", DbType = "Int")]
        public System.Nullable<int> IntCharacterDependancyID {
            get {
                return this._IntCharacterDependancyID;
            }
            set {
                if ((this._IntCharacterDependancyID != value)) {
                    this._IntCharacterDependancyID = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_DisplayName", DbType = "VarChar(4003)")]
        public string DisplayName {
            get {
                return this._DisplayName;
            }
            set {
                if ((this._DisplayName != value)) {
                    this._DisplayName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpCharacterDependenciesListResult {

        private System.Nullable<int> _IntCharacterDependancyID;

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntCharacterStateID;

        private string _TxtNotes;

        public SpCharacterDependenciesListResult() {
        }

        [Column(Name = "intCharacterDependancyID", Storage = "_IntCharacterDependancyID", DbType = "Int")]
        public System.Nullable<int> IntCharacterDependancyID {
            get {
                return this._IntCharacterDependancyID;
            }
            set {
                if ((this._IntCharacterDependancyID != value)) {
                    this._IntCharacterDependancyID = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }
    }

    public partial class SpCharacterGetResult {

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private string _VchrType;

        private string _VchrGridText;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrDescription;

        private System.Nullable<byte> _TintReliability;

        public SpCharacterGetResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(10)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "vchrGridText", Storage = "_VchrGridText", DbType = "VarChar(50)")]
        public string VchrGridText {
            get {
                return this._VchrGridText;
            }
            set {
                if ((this._VchrGridText != value)) {
                    this._VchrGridText = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "tintReliability", Storage = "_TintReliability", DbType = "TinyInt")]
        public System.Nullable<byte> TintReliability {
            get {
                return this._TintReliability;
            }
            set {
                if ((this._TintReliability != value)) {
                    this._TintReliability = value;
                }
            }
        }
    }

    public partial class SpCharacterGetForProjectResult {

        private System.Nullable<int> _IntMorphologyProjectCharacterID;

        private System.Nullable<int> _IntMorphologyProjectID;

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntOriginalDeltaNumber;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitMandatory;

        private System.Nullable<bool> _BitHidden;

        public SpCharacterGetForProjectResult() {
        }

        [Column(Name = "intMorphologyProjectCharacterID", Storage = "_IntMorphologyProjectCharacterID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectCharacterID {
            get {
                return this._IntMorphologyProjectCharacterID;
            }
            set {
                if ((this._IntMorphologyProjectCharacterID != value)) {
                    this._IntMorphologyProjectCharacterID = value;
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_IntOriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> IntOriginalDeltaNumber {
            get {
                return this._IntOriginalDeltaNumber;
            }
            set {
                if ((this._IntOriginalDeltaNumber != value)) {
                    this._IntOriginalDeltaNumber = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitMandatory", Storage = "_BitMandatory", DbType = "Bit")]
        public System.Nullable<bool> BitMandatory {
            get {
                return this._BitMandatory;
            }
            set {
                if ((this._BitMandatory != value)) {
                    this._BitMandatory = value;
                }
            }
        }

        [Column(Name = "bitHidden", Storage = "_BitHidden", DbType = "Bit")]
        public System.Nullable<bool> BitHidden {
            get {
                return this._BitHidden;
            }
            set {
                if ((this._BitHidden != value)) {
                    this._BitHidden = value;
                }
            }
        }
    }

    public partial class SpCharacterGroupInsertResult {

        private System.Nullable<decimal> _NewCharacterGroupID;

        public SpCharacterGroupInsertResult() {
        }

        [Column(Storage = "_NewCharacterGroupID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewCharacterGroupID {
            get {
                return this._NewCharacterGroupID;
            }
            set {
                if ((this._NewCharacterGroupID != value)) {
                    this._NewCharacterGroupID = value;
                }
            }
        }
    }

    public partial class SpCharacterInsertResult {

        private System.Nullable<int> _CharacterID;

        public SpCharacterInsertResult() {
        }

        [Column(Storage = "_CharacterID", DbType = "Int")]
        public System.Nullable<int> CharacterID {
            get {
                return this._CharacterID;
            }
            set {
                if ((this._CharacterID != value)) {
                    this._CharacterID = value;
                }
            }
        }
    }

    public partial class SpCharacterLookupResult {

        private System.Nullable<int> _IntCharacterID;

        private string _CharacterName;

        public SpCharacterLookupResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "Character Name", Storage = "_CharacterName", DbType = "VarChar(2000)")]
        public string CharacterName {
            get {
                return this._CharacterName;
            }
            set {
                if ((this._CharacterName != value)) {
                    this._CharacterName = value;
                }
            }
        }
    }

    public partial class SpCharacterNumericGetResult {

        private string _VchrName;

        private System.Nullable<byte> _TintType;

        private System.Nullable<float> _NumMaximum;

        private System.Nullable<float> _NumMinimum;

        private string _VchrUnits;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrDescription;

        public SpCharacterNumericGetResult() {
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "tintType", Storage = "_TintType", DbType = "TinyInt")]
        public System.Nullable<byte> TintType {
            get {
                return this._TintType;
            }
            set {
                if ((this._TintType != value)) {
                    this._TintType = value;
                }
            }
        }

        [Column(Name = "numMaximum", Storage = "_NumMaximum", DbType = "Real")]
        public System.Nullable<float> NumMaximum {
            get {
                return this._NumMaximum;
            }
            set {
                if ((this._NumMaximum != value)) {
                    this._NumMaximum = value;
                }
            }
        }

        [Column(Name = "numMinimum", Storage = "_NumMinimum", DbType = "Real")]
        public System.Nullable<float> NumMinimum {
            get {
                return this._NumMinimum;
            }
            set {
                if ((this._NumMinimum != value)) {
                    this._NumMinimum = value;
                }
            }
        }

        [Column(Name = "vchrUnits", Storage = "_VchrUnits", DbType = "VarChar(255)")]
        public string VchrUnits {
            get {
                return this._VchrUnits;
            }
            set {
                if ((this._VchrUnits != value)) {
                    this._VchrUnits = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }
    }

    public partial class SpCharacterNumericInsertResult {

        private System.Nullable<decimal> _CharacterNumericID;

        public SpCharacterNumericInsertResult() {
        }

        [Column(Storage = "_CharacterNumericID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> CharacterNumericID {
            get {
                return this._CharacterNumericID;
            }
            set {
                if ((this._CharacterNumericID != value)) {
                    this._CharacterNumericID = value;
                }
            }
        }
    }

    public partial class SpCharacterNumericListResult {

        private System.Nullable<int> _IntCharacterNumericID;

        private string _VchrName;

        private System.Nullable<byte> _TintType;

        private System.Nullable<float> _NumMinimum;

        private System.Nullable<float> _NumMaximum;

        private string _VchrUnits;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<int> _Changes;

        public SpCharacterNumericListResult() {
        }

        [Column(Name = "intCharacterNumericID", Storage = "_IntCharacterNumericID", DbType = "Int")]
        public System.Nullable<int> IntCharacterNumericID {
            get {
                return this._IntCharacterNumericID;
            }
            set {
                if ((this._IntCharacterNumericID != value)) {
                    this._IntCharacterNumericID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "tintType", Storage = "_TintType", DbType = "TinyInt")]
        public System.Nullable<byte> TintType {
            get {
                return this._TintType;
            }
            set {
                if ((this._TintType != value)) {
                    this._TintType = value;
                }
            }
        }

        [Column(Name = "numMinimum", Storage = "_NumMinimum", DbType = "Real")]
        public System.Nullable<float> NumMinimum {
            get {
                return this._NumMinimum;
            }
            set {
                if ((this._NumMinimum != value)) {
                    this._NumMinimum = value;
                }
            }
        }

        [Column(Name = "numMaximum", Storage = "_NumMaximum", DbType = "Real")]
        public System.Nullable<float> NumMaximum {
            get {
                return this._NumMaximum;
            }
            set {
                if ((this._NumMaximum != value)) {
                    this._NumMaximum = value;
                }
            }
        }

        [Column(Name = "vchrUnits", Storage = "_VchrUnits", DbType = "VarChar(255)")]
        public string VchrUnits {
            get {
                return this._VchrUnits;
            }
            set {
                if ((this._VchrUnits != value)) {
                    this._VchrUnits = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpCharacterStateGetResult {

        private System.Nullable<int> _IntCharacterStateID;

        private string _VchrName;

        private string _CharacterName;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<int> _IntOriginalDeltaNumber;

        private System.Nullable<int> _Changes;

        public SpCharacterStateGetResult() {
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Storage = "_CharacterName", DbType = "VarChar(2000)")]
        public string CharacterName {
            get {
                return this._CharacterName;
            }
            set {
                if ((this._CharacterName != value)) {
                    this._CharacterName = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_IntOriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> IntOriginalDeltaNumber {
            get {
                return this._IntOriginalDeltaNumber;
            }
            set {
                if ((this._IntOriginalDeltaNumber != value)) {
                    this._IntOriginalDeltaNumber = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpCharacterStateInsertResult {

        private System.Nullable<decimal> _CharacterStateID;

        public SpCharacterStateInsertResult() {
        }

        [Column(Storage = "_CharacterStateID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> CharacterStateID {
            get {
                return this._CharacterStateID;
            }
            set {
                if ((this._CharacterStateID != value)) {
                    this._CharacterStateID = value;
                }
            }
        }
    }

    public partial class SpCharacterStateListResult {

        private System.Nullable<int> _IntCharacterStateID;

        private string _VchrName;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<int> _Changes;

        public SpCharacterStateListResult() {
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpCharacterStateLookupResult {

        private System.Nullable<int> _IntCharacterStateID;

        private string _Name;

        public SpCharacterStateLookupResult() {
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(4003)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpCharExplorerListResult {

        private string _ElemType;

        private System.Nullable<int> _ID;

        private string _Name;

        private string _CharacterType;

        private System.Nullable<int> _ParentID;

        private string _ParentType;

        private System.Nullable<int> _NumChildren;

        public SpCharExplorerListResult() {
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(1)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(2000)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_CharacterType", DbType = "VarChar(10)")]
        public string CharacterType {
            get {
                return this._CharacterType;
            }
            set {
                if ((this._CharacterType != value)) {
                    this._CharacterType = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ParentType", DbType = "VarChar(1)")]
        public string ParentType {
            get {
                return this._ParentType;
            }
            set {
                if ((this._ParentType != value)) {
                    this._ParentType = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpCharExplorerListTopResult {

        private string _ElemType;

        private System.Nullable<int> _ID;

        private string _Name;

        private string _CharacterType;

        private System.Nullable<int> _ParentID;

        private string _ParentType;

        private System.Nullable<int> _NumChildren;

        public SpCharExplorerListTopResult() {
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(1)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(2000)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_CharacterType", DbType = "VarChar(10)")]
        public string CharacterType {
            get {
                return this._CharacterType;
            }
            set {
                if ((this._CharacterType != value)) {
                    this._CharacterType = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ParentType", DbType = "VarChar(1)")]
        public string ParentType {
            get {
                return this._ParentType;
            }
            set {
                if ((this._ParentType != value)) {
                    this._ParentType = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpClassifiedByListDistinctResult {

        private System.Nullable<int> _ID;

        private string _ClassifiedBy;

        public SpClassifiedByListDistinctResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Name = "Classified By", Storage = "_ClassifiedBy", DbType = "VarChar(50)")]
        public string ClassifiedBy {
            get {
                return this._ClassifiedBy;
            }
            set {
                if ((this._ClassifiedBy != value)) {
                    this._ClassifiedBy = value;
                }
            }
        }
    }

    public partial class SpCMISResult {

        private string _Family;

        private string _Genus;

        private string _Species;

        private string _CommonName;

        private string _MacroHabitat;

        private string _MicroHabitat;

        private string _Locality;

        private System.Nullable<double> _Elevation;

        private System.Nullable<int> _Date;

        private string _Collector;

        private string _AccessionNo;

        public SpCMISResult() {
        }

        [Column(Storage = "_Family", DbType = "VarChar(7)")]
        public string Family {
            get {
                return this._Family;
            }
            set {
                if ((this._Family != value)) {
                    this._Family = value;
                }
            }
        }

        [Column(Storage = "_Genus", DbType = "VarChar(7)")]
        public string Genus {
            get {
                return this._Genus;
            }
            set {
                if ((this._Genus != value)) {
                    this._Genus = value;
                }
            }
        }

        [Column(Storage = "_Species", DbType = "VarChar(200)")]
        public string Species {
            get {
                return this._Species;
            }
            set {
                if ((this._Species != value)) {
                    this._Species = value;
                }
            }
        }

        [Column(Storage = "_CommonName", DbType = "VarChar(7)")]
        public string CommonName {
            get {
                return this._CommonName;
            }
            set {
                if ((this._CommonName != value)) {
                    this._CommonName = value;
                }
            }
        }

        [Column(Storage = "_MacroHabitat", DbType = "VarChar(255)")]
        public string MacroHabitat {
            get {
                return this._MacroHabitat;
            }
            set {
                if ((this._MacroHabitat != value)) {
                    this._MacroHabitat = value;
                }
            }
        }

        [Column(Storage = "_MicroHabitat", DbType = "VarChar(255)")]
        public string MicroHabitat {
            get {
                return this._MicroHabitat;
            }
            set {
                if ((this._MicroHabitat != value)) {
                    this._MicroHabitat = value;
                }
            }
        }

        [Column(Storage = "_Locality", DbType = "VarChar(255)")]
        public string Locality {
            get {
                return this._Locality;
            }
            set {
                if ((this._Locality != value)) {
                    this._Locality = value;
                }
            }
        }

        [Column(Storage = "_Elevation", DbType = "Float")]
        public System.Nullable<double> Elevation {
            get {
                return this._Elevation;
            }
            set {
                if ((this._Elevation != value)) {
                    this._Elevation = value;
                }
            }
        }

        [Column(Storage = "_Date", DbType = "Int")]
        public System.Nullable<int> Date {
            get {
                return this._Date;
            }
            set {
                if ((this._Date != value)) {
                    this._Date = value;
                }
            }
        }

        [Column(Storage = "_Collector", DbType = "VarChar(255)")]
        public string Collector {
            get {
                return this._Collector;
            }
            set {
                if ((this._Collector != value)) {
                    this._Collector = value;
                }
            }
        }

        [Column(Storage = "_AccessionNo", DbType = "VarChar(50)")]
        public string AccessionNo {
            get {
                return this._AccessionNo;
            }
            set {
                if ((this._AccessionNo != value)) {
                    this._AccessionNo = value;
                }
            }
        }
    }

    public partial class SpCollectorListDistinctResult {

        private System.Nullable<int> _ID;

        private string _Collectors;

        public SpCollectorListDistinctResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Collectors", DbType = "VarChar(255)")]
        public string Collectors {
            get {
                return this._Collectors;
            }
            set {
                if ((this._Collectors != value)) {
                    this._Collectors = value;
                }
            }
        }
    }

    public partial class SpCommonNameGetResult {

        private System.Nullable<int> _IntCommonNameID;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrCommonName;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtNotes;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrRefCode;

        private System.Nullable<int> _Changes;

        public SpCommonNameGetResult() {
        }

        [Column(Name = "intCommonNameID", Storage = "_IntCommonNameID", DbType = "Int")]
        public System.Nullable<int> IntCommonNameID {
            get {
                return this._IntCommonNameID;
            }
            set {
                if ((this._IntCommonNameID != value)) {
                    this._IntCommonNameID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrCommonName", Storage = "_VchrCommonName", DbType = "VarChar(100)")]
        public string VchrCommonName {
            get {
                return this._VchrCommonName;
            }
            set {
                if ((this._VchrCommonName != value)) {
                    this._VchrCommonName = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpCommonNameImportResult {

        private System.Nullable<int> _IntCommonNameID;

        public SpCommonNameImportResult() {
        }

        [Column(Name = "intCommonNameID", Storage = "_IntCommonNameID", DbType = "Int")]
        public System.Nullable<int> IntCommonNameID {
            get {
                return this._IntCommonNameID;
            }
            set {
                if ((this._IntCommonNameID != value)) {
                    this._IntCommonNameID = value;
                }
            }
        }
    }

    public partial class SpCommonNameInsertResult {

        private System.Nullable<decimal> _NewCommonNameID;

        public SpCommonNameInsertResult() {
        }

        [Column(Storage = "_NewCommonNameID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewCommonNameID {
            get {
                return this._NewCommonNameID;
            }
            set {
                if ((this._NewCommonNameID != value)) {
                    this._NewCommonNameID = value;
                }
            }
        }
    }

    public partial class SpContactGetResult {

        private System.Nullable<int> _IntContactID;

        private string _VchrName;

        private string _VchrTitle;

        private string _VchrGivenName;

        private string _VchrPostalAddress;

        private string _VchrStreetAddress;

        private string _VchrInstitution;

        private string _VchrJobTitle;

        private string _VchrWorkPh;

        private string _VchrWorkFax;

        private string _VchrHomePh;

        private string _VchrEMail;

        private System.Nullable<System.Guid> _GUID;

        public SpContactGetResult() {
        }

        [Column(Name = "intContactID", Storage = "_IntContactID", DbType = "Int")]
        public System.Nullable<int> IntContactID {
            get {
                return this._IntContactID;
            }
            set {
                if ((this._IntContactID != value)) {
                    this._IntContactID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrTitle", Storage = "_VchrTitle", DbType = "VarChar(50)")]
        public string VchrTitle {
            get {
                return this._VchrTitle;
            }
            set {
                if ((this._VchrTitle != value)) {
                    this._VchrTitle = value;
                }
            }
        }

        [Column(Name = "vchrGivenName", Storage = "_VchrGivenName", DbType = "VarChar(255)")]
        public string VchrGivenName {
            get {
                return this._VchrGivenName;
            }
            set {
                if ((this._VchrGivenName != value)) {
                    this._VchrGivenName = value;
                }
            }
        }

        [Column(Name = "vchrPostalAddress", Storage = "_VchrPostalAddress", DbType = "VarChar(1000)")]
        public string VchrPostalAddress {
            get {
                return this._VchrPostalAddress;
            }
            set {
                if ((this._VchrPostalAddress != value)) {
                    this._VchrPostalAddress = value;
                }
            }
        }

        [Column(Name = "vchrStreetAddress", Storage = "_VchrStreetAddress", DbType = "VarChar(1000)")]
        public string VchrStreetAddress {
            get {
                return this._VchrStreetAddress;
            }
            set {
                if ((this._VchrStreetAddress != value)) {
                    this._VchrStreetAddress = value;
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_VchrInstitution", DbType = "VarChar(255)")]
        public string VchrInstitution {
            get {
                return this._VchrInstitution;
            }
            set {
                if ((this._VchrInstitution != value)) {
                    this._VchrInstitution = value;
                }
            }
        }

        [Column(Name = "vchrJobTitle", Storage = "_VchrJobTitle", DbType = "VarChar(255)")]
        public string VchrJobTitle {
            get {
                return this._VchrJobTitle;
            }
            set {
                if ((this._VchrJobTitle != value)) {
                    this._VchrJobTitle = value;
                }
            }
        }

        [Column(Name = "vchrWorkPh", Storage = "_VchrWorkPh", DbType = "VarChar(50)")]
        public string VchrWorkPh {
            get {
                return this._VchrWorkPh;
            }
            set {
                if ((this._VchrWorkPh != value)) {
                    this._VchrWorkPh = value;
                }
            }
        }

        [Column(Name = "vchrWorkFax", Storage = "_VchrWorkFax", DbType = "VarChar(50)")]
        public string VchrWorkFax {
            get {
                return this._VchrWorkFax;
            }
            set {
                if ((this._VchrWorkFax != value)) {
                    this._VchrWorkFax = value;
                }
            }
        }

        [Column(Name = "vchrHomePh", Storage = "_VchrHomePh", DbType = "VarChar(50)")]
        public string VchrHomePh {
            get {
                return this._VchrHomePh;
            }
            set {
                if ((this._VchrHomePh != value)) {
                    this._VchrHomePh = value;
                }
            }
        }

        [Column(Name = "vchrEMail", Storage = "_VchrEMail", DbType = "VarChar(255)")]
        public string VchrEMail {
            get {
                return this._VchrEMail;
            }
            set {
                if ((this._VchrEMail != value)) {
                    this._VchrEMail = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpContactInsertResult {

        private System.Nullable<decimal> _NewContactID;

        public SpContactInsertResult() {
        }

        [Column(Storage = "_NewContactID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewContactID {
            get {
                return this._NewContactID;
            }
            set {
                if ((this._NewContactID != value)) {
                    this._NewContactID = value;
                }
            }
        }
    }

    public partial class SpContactLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpContactLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(562)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpCurationEventGetResult {

        private System.Nullable<int> _IntCurationEventID;

        private System.Nullable<int> _IntMaterialID;

        private string _VchrSubpartName;

        private string _VchrWho;

        private System.Nullable<System.DateTime> _DtWhen;

        private string _VchrEventType;

        private string _TxtEventDesc;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _Changes;

        public SpCurationEventGetResult() {
        }

        [Column(Name = "intCurationEventID", Storage = "_IntCurationEventID", DbType = "Int")]
        public System.Nullable<int> IntCurationEventID {
            get {
                return this._IntCurationEventID;
            }
            set {
                if ((this._IntCurationEventID != value)) {
                    this._IntCurationEventID = value;
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "vchrSubpartName", Storage = "_VchrSubpartName", DbType = "VarChar(255)")]
        public string VchrSubpartName {
            get {
                return this._VchrSubpartName;
            }
            set {
                if ((this._VchrSubpartName != value)) {
                    this._VchrSubpartName = value;
                }
            }
        }

        [Column(Name = "vchrWho", Storage = "_VchrWho", DbType = "VarChar(50)")]
        public string VchrWho {
            get {
                return this._VchrWho;
            }
            set {
                if ((this._VchrWho != value)) {
                    this._VchrWho = value;
                }
            }
        }

        [Column(Name = "dtWhen", Storage = "_DtWhen", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtWhen {
            get {
                return this._DtWhen;
            }
            set {
                if ((this._DtWhen != value)) {
                    this._DtWhen = value;
                }
            }
        }

        [Column(Name = "vchrEventType", Storage = "_VchrEventType", DbType = "VarChar(100)")]
        public string VchrEventType {
            get {
                return this._VchrEventType;
            }
            set {
                if ((this._VchrEventType != value)) {
                    this._VchrEventType = value;
                }
            }
        }

        [Column(Name = "txtEventDesc", Storage = "_TxtEventDesc", DbType = "Text")]
        public string TxtEventDesc {
            get {
                return this._TxtEventDesc;
            }
            set {
                if ((this._TxtEventDesc != value)) {
                    this._TxtEventDesc = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpDichotomousProjectGetResult {

        private System.Nullable<int> _IntDKItemID;

        private System.Nullable<int> _IntMorphologyProjectID;

        private System.Nullable<int> _IntParentDKItemID;

        private string _ChrType;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrDescription;

        private System.Nullable<int> _IntImageID;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrHistoryDesc;

        private System.Nullable<int> _Changes;

        private string _Description;

        private System.Nullable<int> _ImageFile;

        private System.Data.Linq.Binary _Image;

        private System.Nullable<int> _ImageSize;

        private string _ImageExt;

        public SpDichotomousProjectGetResult() {
        }

        [Column(Name = "intDKItemID", Storage = "_IntDKItemID", DbType = "Int")]
        public System.Nullable<int> IntDKItemID {
            get {
                return this._IntDKItemID;
            }
            set {
                if ((this._IntDKItemID != value)) {
                    this._IntDKItemID = value;
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Name = "intParentDKItemID", Storage = "_IntParentDKItemID", DbType = "Int")]
        public System.Nullable<int> IntParentDKItemID {
            get {
                return this._IntParentDKItemID;
            }
            set {
                if ((this._IntParentDKItemID != value)) {
                    this._IntParentDKItemID = value;
                }
            }
        }

        [Column(Name = "chrType", Storage = "_ChrType", DbType = "Char(1)")]
        public string ChrType {
            get {
                return this._ChrType;
            }
            set {
                if ((this._ChrType != value)) {
                    this._ChrType = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(1000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "intImageID", Storage = "_IntImageID", DbType = "Int")]
        public System.Nullable<int> IntImageID {
            get {
                return this._IntImageID;
            }
            set {
                if ((this._IntImageID != value)) {
                    this._IntImageID = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrHistoryDesc", Storage = "_VchrHistoryDesc", DbType = "VarChar(1000)")]
        public string VchrHistoryDesc {
            get {
                return this._VchrHistoryDesc;
            }
            set {
                if ((this._VchrHistoryDesc != value)) {
                    this._VchrHistoryDesc = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_Description", DbType = "VarChar(1000)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this._Description = value;
                }
            }
        }

        [Column(Storage = "_ImageFile", DbType = "Int")]
        public System.Nullable<int> ImageFile {
            get {
                return this._ImageFile;
            }
            set {
                if ((this._ImageFile != value)) {
                    this._ImageFile = value;
                }
            }
        }

        [Column(Storage = "_Image", DbType = "Image", CanBeNull = true)]
        public System.Data.Linq.Binary Image {
            get {
                return this._Image;
            }
            set {
                if ((this._Image != value)) {
                    this._Image = value;
                }
            }
        }

        [Column(Storage = "_ImageSize", DbType = "Int")]
        public System.Nullable<int> ImageSize {
            get {
                return this._ImageSize;
            }
            set {
                if ((this._ImageSize != value)) {
                    this._ImageSize = value;
                }
            }
        }

        [Column(Storage = "_ImageExt", DbType = "VarChar(20)")]
        public string ImageExt {
            get {
                return this._ImageExt;
            }
            set {
                if ((this._ImageExt != value)) {
                    this._ImageExt = value;
                }
            }
        }
    }

    public partial class SpDistRegionFindResult {

        private System.Nullable<int> _DistRegionID;

        private System.Nullable<int> _DistRegionParentID;

        private string _DistRegionName;

        private System.Nullable<int> _NumChildren;

        public SpDistRegionFindResult() {
        }

        [Column(Storage = "_DistRegionID", DbType = "Int")]
        public System.Nullable<int> DistRegionID {
            get {
                return this._DistRegionID;
            }
            set {
                if ((this._DistRegionID != value)) {
                    this._DistRegionID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionParentID", DbType = "Int")]
        public System.Nullable<int> DistRegionParentID {
            get {
                return this._DistRegionParentID;
            }
            set {
                if ((this._DistRegionParentID != value)) {
                    this._DistRegionParentID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionName", DbType = "VarChar(50)")]
        public string DistRegionName {
            get {
                return this._DistRegionName;
            }
            set {
                if ((this._DistRegionName != value)) {
                    this._DistRegionName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpDistRegionGetParentageResult {

        private string _VchrParentage;

        public SpDistRegionGetParentageResult() {
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }
    }

    public partial class SpDistRegionInsertResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpDistRegionInsertResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpDistRegionListResult {

        private System.Nullable<int> _DistRegionID;

        private System.Nullable<int> _DistRegionParentID;

        private string _DistRegionName;

        private System.Nullable<int> _NumChildren;

        public SpDistRegionListResult() {
        }

        [Column(Storage = "_DistRegionID", DbType = "Int")]
        public System.Nullable<int> DistRegionID {
            get {
                return this._DistRegionID;
            }
            set {
                if ((this._DistRegionID != value)) {
                    this._DistRegionID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionParentID", DbType = "Int")]
        public System.Nullable<int> DistRegionParentID {
            get {
                return this._DistRegionParentID;
            }
            set {
                if ((this._DistRegionParentID != value)) {
                    this._DistRegionParentID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionName", DbType = "VarChar(50)")]
        public string DistRegionName {
            get {
                return this._DistRegionName;
            }
            set {
                if ((this._DistRegionName != value)) {
                    this._DistRegionName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpDistRegionListFullTreeResult {

        private System.Nullable<int> _DistRegionID;

        private System.Nullable<int> _DistRegionParentID;

        private string _DistRegionName;

        private string _NumChildren;

        public SpDistRegionListFullTreeResult() {
        }

        [Column(Storage = "_DistRegionID", DbType = "Int")]
        public System.Nullable<int> DistRegionID {
            get {
                return this._DistRegionID;
            }
            set {
                if ((this._DistRegionID != value)) {
                    this._DistRegionID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionParentID", DbType = "Int")]
        public System.Nullable<int> DistRegionParentID {
            get {
                return this._DistRegionParentID;
            }
            set {
                if ((this._DistRegionParentID != value)) {
                    this._DistRegionParentID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionName", DbType = "VarChar(50)")]
        public string DistRegionName {
            get {
                return this._DistRegionName;
            }
            set {
                if ((this._DistRegionName != value)) {
                    this._DistRegionName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "VarChar(2)")]
        public string NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpDistRegionListTopResult {

        private System.Nullable<int> _DistRegionID;

        private System.Nullable<int> _DistRegionParentID;

        private string _DistRegionName;

        private System.Nullable<int> _NumChildren;

        public SpDistRegionListTopResult() {
        }

        [Column(Storage = "_DistRegionID", DbType = "Int")]
        public System.Nullable<int> DistRegionID {
            get {
                return this._DistRegionID;
            }
            set {
                if ((this._DistRegionID != value)) {
                    this._DistRegionID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionParentID", DbType = "Int")]
        public System.Nullable<int> DistRegionParentID {
            get {
                return this._DistRegionParentID;
            }
            set {
                if ((this._DistRegionParentID != value)) {
                    this._DistRegionParentID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionName", DbType = "VarChar(50)")]
        public string DistRegionName {
            get {
                return this._DistRegionName;
            }
            set {
                if ((this._DistRegionName != value)) {
                    this._DistRegionName = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpDistRegionOKToDeleteResult {

        private string _Column1;

        public SpDistRegionOKToDeleteResult() {
        }

        [Column(Name = "", Storage = "_Column1", DbType = "VarChar(1)")]
        public string Column1 {
            get {
                return this._Column1;
            }
            set {
                if ((this._Column1 != value)) {
                    this._Column1 = value;
                }
            }
        }
    }

    public partial class SpExportMaterialGetResult {

        private System.Nullable<int> _IntMaterialID;

        private System.Nullable<byte> _TintTemplate;

        private string _VchrMaterialName;

        private System.Nullable<int> _IntSiteVisitID;

        private string _VchrAccessionNo;

        private string _VchrRegNo;

        private string _VchrCollectorNo;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrIDBy;

        private System.Nullable<System.DateTime> _DtIDDate;

        private System.Nullable<int> _IntIDRefID;

        private string _VchrIDMethod;

        private string _VchrIDAccuracy;

        private string _VchrIDNameQual;

        private string _VchrIDNotes;

        private string _VchrInstitution;

        private string _VchrCollectionMethod;

        private string _VchrAbundance;

        private string _VchrMacroHabitat;

        private string _VchrMicroHabitat;

        private string _VchrSource;

        private System.Nullable<int> _IntAssociateOf;

        private string _VchrSpecialLabel;

        private string _VchrOriginalLabel;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntTrapID;

        private string _VchrIDRefPage;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.Guid> _SiteVisitGUID;

        private System.Nullable<System.Guid> _SiteGUID;

        private System.Nullable<System.Guid> _TrapGUID;

        private System.Nullable<System.Guid> _BiotaGUID;

        public SpExportMaterialGetResult() {
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_VchrMaterialName", DbType = "VarChar(255)")]
        public string VchrMaterialName {
            get {
                return this._VchrMaterialName;
            }
            set {
                if ((this._VchrMaterialName != value)) {
                    this._VchrMaterialName = value;
                }
            }
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }

        [Column(Name = "vchrAccessionNo", Storage = "_VchrAccessionNo", DbType = "VarChar(50)")]
        public string VchrAccessionNo {
            get {
                return this._VchrAccessionNo;
            }
            set {
                if ((this._VchrAccessionNo != value)) {
                    this._VchrAccessionNo = value;
                }
            }
        }

        [Column(Name = "vchrRegNo", Storage = "_VchrRegNo", DbType = "VarChar(50)")]
        public string VchrRegNo {
            get {
                return this._VchrRegNo;
            }
            set {
                if ((this._VchrRegNo != value)) {
                    this._VchrRegNo = value;
                }
            }
        }

        [Column(Name = "vchrCollectorNo", Storage = "_VchrCollectorNo", DbType = "VarChar(50)")]
        public string VchrCollectorNo {
            get {
                return this._VchrCollectorNo;
            }
            set {
                if ((this._VchrCollectorNo != value)) {
                    this._VchrCollectorNo = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrIDBy", Storage = "_VchrIDBy", DbType = "VarChar(50)")]
        public string VchrIDBy {
            get {
                return this._VchrIDBy;
            }
            set {
                if ((this._VchrIDBy != value)) {
                    this._VchrIDBy = value;
                }
            }
        }

        [Column(Name = "dtIDDate", Storage = "_DtIDDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtIDDate {
            get {
                return this._DtIDDate;
            }
            set {
                if ((this._DtIDDate != value)) {
                    this._DtIDDate = value;
                }
            }
        }

        [Column(Name = "intIDRefID", Storage = "_IntIDRefID", DbType = "Int")]
        public System.Nullable<int> IntIDRefID {
            get {
                return this._IntIDRefID;
            }
            set {
                if ((this._IntIDRefID != value)) {
                    this._IntIDRefID = value;
                }
            }
        }

        [Column(Name = "vchrIDMethod", Storage = "_VchrIDMethod", DbType = "VarChar(255)")]
        public string VchrIDMethod {
            get {
                return this._VchrIDMethod;
            }
            set {
                if ((this._VchrIDMethod != value)) {
                    this._VchrIDMethod = value;
                }
            }
        }

        [Column(Name = "vchrIDAccuracy", Storage = "_VchrIDAccuracy", DbType = "VarChar(50)")]
        public string VchrIDAccuracy {
            get {
                return this._VchrIDAccuracy;
            }
            set {
                if ((this._VchrIDAccuracy != value)) {
                    this._VchrIDAccuracy = value;
                }
            }
        }

        [Column(Name = "vchrIDNameQual", Storage = "_VchrIDNameQual", DbType = "VarChar(255)")]
        public string VchrIDNameQual {
            get {
                return this._VchrIDNameQual;
            }
            set {
                if ((this._VchrIDNameQual != value)) {
                    this._VchrIDNameQual = value;
                }
            }
        }

        [Column(Name = "vchrIDNotes", Storage = "_VchrIDNotes", DbType = "VarChar(255)")]
        public string VchrIDNotes {
            get {
                return this._VchrIDNotes;
            }
            set {
                if ((this._VchrIDNotes != value)) {
                    this._VchrIDNotes = value;
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_VchrInstitution", DbType = "VarChar(100)")]
        public string VchrInstitution {
            get {
                return this._VchrInstitution;
            }
            set {
                if ((this._VchrInstitution != value)) {
                    this._VchrInstitution = value;
                }
            }
        }

        [Column(Name = "vchrCollectionMethod", Storage = "_VchrCollectionMethod", DbType = "VarChar(50)")]
        public string VchrCollectionMethod {
            get {
                return this._VchrCollectionMethod;
            }
            set {
                if ((this._VchrCollectionMethod != value)) {
                    this._VchrCollectionMethod = value;
                }
            }
        }

        [Column(Name = "vchrAbundance", Storage = "_VchrAbundance", DbType = "VarChar(255)")]
        public string VchrAbundance {
            get {
                return this._VchrAbundance;
            }
            set {
                if ((this._VchrAbundance != value)) {
                    this._VchrAbundance = value;
                }
            }
        }

        [Column(Name = "vchrMacroHabitat", Storage = "_VchrMacroHabitat", DbType = "VarChar(255)")]
        public string VchrMacroHabitat {
            get {
                return this._VchrMacroHabitat;
            }
            set {
                if ((this._VchrMacroHabitat != value)) {
                    this._VchrMacroHabitat = value;
                }
            }
        }

        [Column(Name = "vchrMicroHabitat", Storage = "_VchrMicroHabitat", DbType = "VarChar(255)")]
        public string VchrMicroHabitat {
            get {
                return this._VchrMicroHabitat;
            }
            set {
                if ((this._VchrMicroHabitat != value)) {
                    this._VchrMicroHabitat = value;
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_VchrSource", DbType = "VarChar(50)")]
        public string VchrSource {
            get {
                return this._VchrSource;
            }
            set {
                if ((this._VchrSource != value)) {
                    this._VchrSource = value;
                }
            }
        }

        [Column(Name = "intAssociateOf", Storage = "_IntAssociateOf", DbType = "Int")]
        public System.Nullable<int> IntAssociateOf {
            get {
                return this._IntAssociateOf;
            }
            set {
                if ((this._IntAssociateOf != value)) {
                    this._IntAssociateOf = value;
                }
            }
        }

        [Column(Name = "vchrSpecialLabel", Storage = "_VchrSpecialLabel", DbType = "VarChar(500)")]
        public string VchrSpecialLabel {
            get {
                return this._VchrSpecialLabel;
            }
            set {
                if ((this._VchrSpecialLabel != value)) {
                    this._VchrSpecialLabel = value;
                }
            }
        }

        [Column(Name = "vchrOriginalLabel", Storage = "_VchrOriginalLabel", DbType = "VarChar(500)")]
        public string VchrOriginalLabel {
            get {
                return this._VchrOriginalLabel;
            }
            set {
                if ((this._VchrOriginalLabel != value)) {
                    this._VchrOriginalLabel = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }

        [Column(Name = "vchrIDRefPage", Storage = "_VchrIDRefPage", DbType = "VarChar(100)")]
        public string VchrIDRefPage {
            get {
                return this._VchrIDRefPage;
            }
            set {
                if ((this._VchrIDRefPage != value)) {
                    this._VchrIDRefPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_SiteVisitGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> SiteVisitGUID {
            get {
                return this._SiteVisitGUID;
            }
            set {
                if ((this._SiteVisitGUID != value)) {
                    this._SiteVisitGUID = value;
                }
            }
        }

        [Column(Storage = "_SiteGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> SiteGUID {
            get {
                return this._SiteGUID;
            }
            set {
                if ((this._SiteGUID != value)) {
                    this._SiteGUID = value;
                }
            }
        }

        [Column(Storage = "_TrapGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> TrapGUID {
            get {
                return this._TrapGUID;
            }
            set {
                if ((this._TrapGUID != value)) {
                    this._TrapGUID = value;
                }
            }
        }

        [Column(Storage = "_BiotaGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> BiotaGUID {
            get {
                return this._BiotaGUID;
            }
            set {
                if ((this._BiotaGUID != value)) {
                    this._BiotaGUID = value;
                }
            }
        }
    }

    public partial class SpExportRegionGetResult {

        private System.Nullable<int> _IntPoliticalRegionID;

        private string _VchrName;

        private System.Nullable<int> _IntParentID;

        private System.Nullable<int> _IntOrder;

        private string _VchrParentage;

        private string _VchrRank;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrFullName;

        private System.Nullable<System.Guid> _ParentGUID;

        public SpExportRegionGetResult() {
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_IntPoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> IntPoliticalRegionID {
            get {
                return this._IntPoliticalRegionID;
            }
            set {
                if ((this._IntPoliticalRegionID != value)) {
                    this._IntPoliticalRegionID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(50)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_IntParentID", DbType = "Int")]
        public System.Nullable<int> IntParentID {
            get {
                return this._IntParentID;
            }
            set {
                if ((this._IntParentID != value)) {
                    this._IntParentID = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(255)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(2000)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Storage = "_ParentGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> ParentGUID {
            get {
                return this._ParentGUID;
            }
            set {
                if ((this._ParentGUID != value)) {
                    this._ParentGUID = value;
                }
            }
        }
    }

    public partial class SpExportSiteGetResult {

        private System.Nullable<int> _IntSiteID;

        private string _VchrSiteName;

        private System.Nullable<int> _IntPoliticalRegionID;

        private System.Nullable<int> _IntSiteGroupID;

        private System.Nullable<byte> _TintLocalType;

        private string _VchrLocal;

        private string _VchrDistanceFromPlace;

        private string _VchrDirFromPlace;

        private string _VchrInformalLocal;

        private System.Nullable<byte> _TintPosCoordinates;

        private System.Nullable<byte> _TintPosAreaType;

        private System.Nullable<double> _FltPosY1;

        private System.Nullable<double> _FltPosX1;

        private System.Nullable<double> _FltPosX2;

        private System.Nullable<double> _FltPosY2;

        private System.Nullable<byte> _TintPosXYDisplayFormat;

        private string _VchrPosSource;

        private string _VchrPosError;

        private string _VchrPosWho;

        private string _VchrPosDate;

        private string _VchrPosOriginal;

        private string _VchrPosUTMSource;

        private string _VchrPosUTMMapProj;

        private string _VchrPosUTMMapName;

        private string _VchrPosUTMMapVer;

        private System.Nullable<byte> _TintElevType;

        private System.Nullable<double> _FltElevUpper;

        private System.Nullable<double> _FltElevLower;

        private System.Nullable<double> _FltElevDepth;

        private string _VchrElevUnits;

        private string _VchrElevSource;

        private string _VchrElevError;

        private string _VchrGeoEra;

        private string _VchrGeoState;

        private string _VchrGeoPlate;

        private string _VchrGeoFormation;

        private string _VchrGeoMember;

        private string _VchrGeoBed;

        private string _VchrGeoName;

        private string _VchrGeoAgeBottom;

        private string _VchrGeoAgeTop;

        private string _VchrGeoNotes;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.Guid> _RegionGUID;

        public SpExportSiteGetResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrSiteName", Storage = "_VchrSiteName", DbType = "VarChar(100)")]
        public string VchrSiteName {
            get {
                return this._VchrSiteName;
            }
            set {
                if ((this._VchrSiteName != value)) {
                    this._VchrSiteName = value;
                }
            }
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_IntPoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> IntPoliticalRegionID {
            get {
                return this._IntPoliticalRegionID;
            }
            set {
                if ((this._IntPoliticalRegionID != value)) {
                    this._IntPoliticalRegionID = value;
                }
            }
        }

        [Column(Name = "intSiteGroupID", Storage = "_IntSiteGroupID", DbType = "Int")]
        public System.Nullable<int> IntSiteGroupID {
            get {
                return this._IntSiteGroupID;
            }
            set {
                if ((this._IntSiteGroupID != value)) {
                    this._IntSiteGroupID = value;
                }
            }
        }

        [Column(Name = "tintLocalType", Storage = "_TintLocalType", DbType = "TinyInt")]
        public System.Nullable<byte> TintLocalType {
            get {
                return this._TintLocalType;
            }
            set {
                if ((this._TintLocalType != value)) {
                    this._TintLocalType = value;
                }
            }
        }

        [Column(Name = "vchrLocal", Storage = "_VchrLocal", DbType = "VarChar(255)")]
        public string VchrLocal {
            get {
                return this._VchrLocal;
            }
            set {
                if ((this._VchrLocal != value)) {
                    this._VchrLocal = value;
                }
            }
        }

        [Column(Name = "vchrDistanceFromPlace", Storage = "_VchrDistanceFromPlace", DbType = "VarChar(50)")]
        public string VchrDistanceFromPlace {
            get {
                return this._VchrDistanceFromPlace;
            }
            set {
                if ((this._VchrDistanceFromPlace != value)) {
                    this._VchrDistanceFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrDirFromPlace", Storage = "_VchrDirFromPlace", DbType = "VarChar(10)")]
        public string VchrDirFromPlace {
            get {
                return this._VchrDirFromPlace;
            }
            set {
                if ((this._VchrDirFromPlace != value)) {
                    this._VchrDirFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrInformalLocal", Storage = "_VchrInformalLocal", DbType = "VarChar(255)")]
        public string VchrInformalLocal {
            get {
                return this._VchrInformalLocal;
            }
            set {
                if ((this._VchrInformalLocal != value)) {
                    this._VchrInformalLocal = value;
                }
            }
        }

        [Column(Name = "tintPosCoordinates", Storage = "_TintPosCoordinates", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosCoordinates {
            get {
                return this._TintPosCoordinates;
            }
            set {
                if ((this._TintPosCoordinates != value)) {
                    this._TintPosCoordinates = value;
                }
            }
        }

        [Column(Name = "tintPosAreaType", Storage = "_TintPosAreaType", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosAreaType {
            get {
                return this._TintPosAreaType;
            }
            set {
                if ((this._TintPosAreaType != value)) {
                    this._TintPosAreaType = value;
                }
            }
        }

        [Column(Name = "fltPosY1", Storage = "_FltPosY1", DbType = "Float")]
        public System.Nullable<double> FltPosY1 {
            get {
                return this._FltPosY1;
            }
            set {
                if ((this._FltPosY1 != value)) {
                    this._FltPosY1 = value;
                }
            }
        }

        [Column(Name = "fltPosX1", Storage = "_FltPosX1", DbType = "Float")]
        public System.Nullable<double> FltPosX1 {
            get {
                return this._FltPosX1;
            }
            set {
                if ((this._FltPosX1 != value)) {
                    this._FltPosX1 = value;
                }
            }
        }

        [Column(Name = "fltPosX2", Storage = "_FltPosX2", DbType = "Float")]
        public System.Nullable<double> FltPosX2 {
            get {
                return this._FltPosX2;
            }
            set {
                if ((this._FltPosX2 != value)) {
                    this._FltPosX2 = value;
                }
            }
        }

        [Column(Name = "fltPosY2", Storage = "_FltPosY2", DbType = "Float")]
        public System.Nullable<double> FltPosY2 {
            get {
                return this._FltPosY2;
            }
            set {
                if ((this._FltPosY2 != value)) {
                    this._FltPosY2 = value;
                }
            }
        }

        [Column(Name = "tintPosXYDisplayFormat", Storage = "_TintPosXYDisplayFormat", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosXYDisplayFormat {
            get {
                return this._TintPosXYDisplayFormat;
            }
            set {
                if ((this._TintPosXYDisplayFormat != value)) {
                    this._TintPosXYDisplayFormat = value;
                }
            }
        }

        [Column(Name = "vchrPosSource", Storage = "_VchrPosSource", DbType = "VarChar(50)")]
        public string VchrPosSource {
            get {
                return this._VchrPosSource;
            }
            set {
                if ((this._VchrPosSource != value)) {
                    this._VchrPosSource = value;
                }
            }
        }

        [Column(Name = "vchrPosError", Storage = "_VchrPosError", DbType = "VarChar(20)")]
        public string VchrPosError {
            get {
                return this._VchrPosError;
            }
            set {
                if ((this._VchrPosError != value)) {
                    this._VchrPosError = value;
                }
            }
        }

        [Column(Name = "vchrPosWho", Storage = "_VchrPosWho", DbType = "VarChar(20)")]
        public string VchrPosWho {
            get {
                return this._VchrPosWho;
            }
            set {
                if ((this._VchrPosWho != value)) {
                    this._VchrPosWho = value;
                }
            }
        }

        [Column(Name = "vchrPosDate", Storage = "_VchrPosDate", DbType = "VarChar(20)")]
        public string VchrPosDate {
            get {
                return this._VchrPosDate;
            }
            set {
                if ((this._VchrPosDate != value)) {
                    this._VchrPosDate = value;
                }
            }
        }

        [Column(Name = "vchrPosOriginal", Storage = "_VchrPosOriginal", DbType = "VarChar(20)")]
        public string VchrPosOriginal {
            get {
                return this._VchrPosOriginal;
            }
            set {
                if ((this._VchrPosOriginal != value)) {
                    this._VchrPosOriginal = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMSource", Storage = "_VchrPosUTMSource", DbType = "VarChar(255)")]
        public string VchrPosUTMSource {
            get {
                return this._VchrPosUTMSource;
            }
            set {
                if ((this._VchrPosUTMSource != value)) {
                    this._VchrPosUTMSource = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapProj", Storage = "_VchrPosUTMMapProj", DbType = "VarChar(255)")]
        public string VchrPosUTMMapProj {
            get {
                return this._VchrPosUTMMapProj;
            }
            set {
                if ((this._VchrPosUTMMapProj != value)) {
                    this._VchrPosUTMMapProj = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapName", Storage = "_VchrPosUTMMapName", DbType = "VarChar(255)")]
        public string VchrPosUTMMapName {
            get {
                return this._VchrPosUTMMapName;
            }
            set {
                if ((this._VchrPosUTMMapName != value)) {
                    this._VchrPosUTMMapName = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapVer", Storage = "_VchrPosUTMMapVer", DbType = "VarChar(255)")]
        public string VchrPosUTMMapVer {
            get {
                return this._VchrPosUTMMapVer;
            }
            set {
                if ((this._VchrPosUTMMapVer != value)) {
                    this._VchrPosUTMMapVer = value;
                }
            }
        }

        [Column(Name = "tintElevType", Storage = "_TintElevType", DbType = "TinyInt")]
        public System.Nullable<byte> TintElevType {
            get {
                return this._TintElevType;
            }
            set {
                if ((this._TintElevType != value)) {
                    this._TintElevType = value;
                }
            }
        }

        [Column(Name = "fltElevUpper", Storage = "_FltElevUpper", DbType = "Float")]
        public System.Nullable<double> FltElevUpper {
            get {
                return this._FltElevUpper;
            }
            set {
                if ((this._FltElevUpper != value)) {
                    this._FltElevUpper = value;
                }
            }
        }

        [Column(Name = "fltElevLower", Storage = "_FltElevLower", DbType = "Float")]
        public System.Nullable<double> FltElevLower {
            get {
                return this._FltElevLower;
            }
            set {
                if ((this._FltElevLower != value)) {
                    this._FltElevLower = value;
                }
            }
        }

        [Column(Name = "fltElevDepth", Storage = "_FltElevDepth", DbType = "Float")]
        public System.Nullable<double> FltElevDepth {
            get {
                return this._FltElevDepth;
            }
            set {
                if ((this._FltElevDepth != value)) {
                    this._FltElevDepth = value;
                }
            }
        }

        [Column(Name = "vchrElevUnits", Storage = "_VchrElevUnits", DbType = "VarChar(20)")]
        public string VchrElevUnits {
            get {
                return this._VchrElevUnits;
            }
            set {
                if ((this._VchrElevUnits != value)) {
                    this._VchrElevUnits = value;
                }
            }
        }

        [Column(Name = "vchrElevSource", Storage = "_VchrElevSource", DbType = "VarChar(50)")]
        public string VchrElevSource {
            get {
                return this._VchrElevSource;
            }
            set {
                if ((this._VchrElevSource != value)) {
                    this._VchrElevSource = value;
                }
            }
        }

        [Column(Name = "vchrElevError", Storage = "_VchrElevError", DbType = "VarChar(20)")]
        public string VchrElevError {
            get {
                return this._VchrElevError;
            }
            set {
                if ((this._VchrElevError != value)) {
                    this._VchrElevError = value;
                }
            }
        }

        [Column(Name = "vchrGeoEra", Storage = "_VchrGeoEra", DbType = "VarChar(50)")]
        public string VchrGeoEra {
            get {
                return this._VchrGeoEra;
            }
            set {
                if ((this._VchrGeoEra != value)) {
                    this._VchrGeoEra = value;
                }
            }
        }

        [Column(Name = "vchrGeoState", Storage = "_VchrGeoState", DbType = "VarChar(50)")]
        public string VchrGeoState {
            get {
                return this._VchrGeoState;
            }
            set {
                if ((this._VchrGeoState != value)) {
                    this._VchrGeoState = value;
                }
            }
        }

        [Column(Name = "vchrGeoPlate", Storage = "_VchrGeoPlate", DbType = "VarChar(50)")]
        public string VchrGeoPlate {
            get {
                return this._VchrGeoPlate;
            }
            set {
                if ((this._VchrGeoPlate != value)) {
                    this._VchrGeoPlate = value;
                }
            }
        }

        [Column(Name = "vchrGeoFormation", Storage = "_VchrGeoFormation", DbType = "VarChar(50)")]
        public string VchrGeoFormation {
            get {
                return this._VchrGeoFormation;
            }
            set {
                if ((this._VchrGeoFormation != value)) {
                    this._VchrGeoFormation = value;
                }
            }
        }

        [Column(Name = "vchrGeoMember", Storage = "_VchrGeoMember", DbType = "VarChar(50)")]
        public string VchrGeoMember {
            get {
                return this._VchrGeoMember;
            }
            set {
                if ((this._VchrGeoMember != value)) {
                    this._VchrGeoMember = value;
                }
            }
        }

        [Column(Name = "vchrGeoBed", Storage = "_VchrGeoBed", DbType = "VarChar(50)")]
        public string VchrGeoBed {
            get {
                return this._VchrGeoBed;
            }
            set {
                if ((this._VchrGeoBed != value)) {
                    this._VchrGeoBed = value;
                }
            }
        }

        [Column(Name = "vchrGeoName", Storage = "_VchrGeoName", DbType = "VarChar(50)")]
        public string VchrGeoName {
            get {
                return this._VchrGeoName;
            }
            set {
                if ((this._VchrGeoName != value)) {
                    this._VchrGeoName = value;
                }
            }
        }

        [Column(Name = "vchrGeoAgeBottom", Storage = "_VchrGeoAgeBottom", DbType = "VarChar(50)")]
        public string VchrGeoAgeBottom {
            get {
                return this._VchrGeoAgeBottom;
            }
            set {
                if ((this._VchrGeoAgeBottom != value)) {
                    this._VchrGeoAgeBottom = value;
                }
            }
        }

        [Column(Name = "vchrGeoAgeTop", Storage = "_VchrGeoAgeTop", DbType = "VarChar(50)")]
        public string VchrGeoAgeTop {
            get {
                return this._VchrGeoAgeTop;
            }
            set {
                if ((this._VchrGeoAgeTop != value)) {
                    this._VchrGeoAgeTop = value;
                }
            }
        }

        [Column(Name = "vchrGeoNotes", Storage = "_VchrGeoNotes", DbType = "VarChar(255)")]
        public string VchrGeoNotes {
            get {
                return this._VchrGeoNotes;
            }
            set {
                if ((this._VchrGeoNotes != value)) {
                    this._VchrGeoNotes = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_RegionGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> RegionGUID {
            get {
                return this._RegionGUID;
            }
            set {
                if ((this._RegionGUID != value)) {
                    this._RegionGUID = value;
                }
            }
        }
    }

    public partial class SpExportSiteVisitGetResult {

        private System.Nullable<int> _IntSiteVisitID;

        private System.Nullable<int> _IntSiteID;

        private string _VchrSiteVisitName;

        private string _VchrFieldNumber;

        private string _VchrCollector;

        private System.Nullable<byte> _TintDateType;

        private System.Nullable<int> _IntDateStart;

        private System.Nullable<int> _IntDateEnd;

        private System.Nullable<int> _IntTimeStart;

        private System.Nullable<int> _IntTimeEnd;

        private string _VchrCasualTime;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.Guid> _SiteGUID;

        public SpExportSiteVisitGetResult() {
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrSiteVisitName", Storage = "_VchrSiteVisitName", DbType = "VarChar(255)")]
        public string VchrSiteVisitName {
            get {
                return this._VchrSiteVisitName;
            }
            set {
                if ((this._VchrSiteVisitName != value)) {
                    this._VchrSiteVisitName = value;
                }
            }
        }

        [Column(Name = "vchrFieldNumber", Storage = "_VchrFieldNumber", DbType = "VarChar(50)")]
        public string VchrFieldNumber {
            get {
                return this._VchrFieldNumber;
            }
            set {
                if ((this._VchrFieldNumber != value)) {
                    this._VchrFieldNumber = value;
                }
            }
        }

        [Column(Name = "vchrCollector", Storage = "_VchrCollector", DbType = "VarChar(255)")]
        public string VchrCollector {
            get {
                return this._VchrCollector;
            }
            set {
                if ((this._VchrCollector != value)) {
                    this._VchrCollector = value;
                }
            }
        }

        [Column(Name = "tintDateType", Storage = "_TintDateType", DbType = "TinyInt")]
        public System.Nullable<byte> TintDateType {
            get {
                return this._TintDateType;
            }
            set {
                if ((this._TintDateType != value)) {
                    this._TintDateType = value;
                }
            }
        }

        [Column(Name = "intDateStart", Storage = "_IntDateStart", DbType = "Int")]
        public System.Nullable<int> IntDateStart {
            get {
                return this._IntDateStart;
            }
            set {
                if ((this._IntDateStart != value)) {
                    this._IntDateStart = value;
                }
            }
        }

        [Column(Name = "intDateEnd", Storage = "_IntDateEnd", DbType = "Int")]
        public System.Nullable<int> IntDateEnd {
            get {
                return this._IntDateEnd;
            }
            set {
                if ((this._IntDateEnd != value)) {
                    this._IntDateEnd = value;
                }
            }
        }

        [Column(Name = "intTimeStart", Storage = "_IntTimeStart", DbType = "Int")]
        public System.Nullable<int> IntTimeStart {
            get {
                return this._IntTimeStart;
            }
            set {
                if ((this._IntTimeStart != value)) {
                    this._IntTimeStart = value;
                }
            }
        }

        [Column(Name = "intTimeEnd", Storage = "_IntTimeEnd", DbType = "Int")]
        public System.Nullable<int> IntTimeEnd {
            get {
                return this._IntTimeEnd;
            }
            set {
                if ((this._IntTimeEnd != value)) {
                    this._IntTimeEnd = value;
                }
            }
        }

        [Column(Name = "vchrCasualTime", Storage = "_VchrCasualTime", DbType = "VarChar(255)")]
        public string VchrCasualTime {
            get {
                return this._VchrCasualTime;
            }
            set {
                if ((this._VchrCasualTime != value)) {
                    this._VchrCasualTime = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_SiteGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> SiteGUID {
            get {
                return this._SiteGUID;
            }
            set {
                if ((this._SiteGUID != value)) {
                    this._SiteGUID = value;
                }
            }
        }
    }

    public partial class SpFavoriteInsertResult {

        private System.Nullable<decimal> _IntNewFavoriteID;

        public SpFavoriteInsertResult() {
        }

        [Column(Name = "intNewFavoriteID", Storage = "_IntNewFavoriteID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> IntNewFavoriteID {
            get {
                return this._IntNewFavoriteID;
            }
            set {
                if ((this._IntNewFavoriteID != value)) {
                    this._IntNewFavoriteID = value;
                }
            }
        }
    }

    public partial class SpGANGetResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private System.Nullable<short> _SintDesignation;

        private string _VchrTSFixationMethod;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrTypeSpecies;

        private string _VchrRefCode;

        private string _VchrAvailableNameStatus;

        private System.Nullable<int> _Changes;

        public SpGANGetResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "sintDesignation", Storage = "_SintDesignation", DbType = "SmallInt")]
        public System.Nullable<short> SintDesignation {
            get {
                return this._SintDesignation;
            }
            set {
                if ((this._SintDesignation != value)) {
                    this._SintDesignation = value;
                }
            }
        }

        [Column(Name = "vchrTSFixationMethod", Storage = "_VchrTSFixationMethod", DbType = "VarChar(255)")]
        public string VchrTSFixationMethod {
            get {
                return this._VchrTSFixationMethod;
            }
            set {
                if ((this._VchrTSFixationMethod != value)) {
                    this._VchrTSFixationMethod = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrTypeSpecies", Storage = "_VchrTypeSpecies", DbType = "VarChar(500)")]
        public string VchrTypeSpecies {
            get {
                return this._VchrTypeSpecies;
            }
            set {
                if ((this._VchrTypeSpecies != value)) {
                    this._VchrTypeSpecies = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpGANIncludedSpeciesGetResult {

        private System.Nullable<int> _IntGANISID;

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrIncludedSpecies;

        private System.Nullable<int> _Changes;

        public SpGANIncludedSpeciesGetResult() {
        }

        [Column(Name = "intGANISID", Storage = "_IntGANISID", DbType = "Int")]
        public System.Nullable<int> IntGANISID {
            get {
                return this._IntGANISID;
            }
            set {
                if ((this._IntGANISID != value)) {
                    this._IntGANISID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrIncludedSpecies", Storage = "_VchrIncludedSpecies", DbType = "VarChar(255)")]
        public string VchrIncludedSpecies {
            get {
                return this._VchrIncludedSpecies;
            }
            set {
                if ((this._VchrIncludedSpecies != value)) {
                    this._VchrIncludedSpecies = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpGetRoughTableCountResult {

        private System.Nullable<int> _MaxRows;

        private string _TableName;

        public SpGetRoughTableCountResult() {
        }

        [Column(Storage = "_MaxRows", DbType = "Int")]
        public System.Nullable<int> MaxRows {
            get {
                return this._MaxRows;
            }
            set {
                if ((this._MaxRows != value)) {
                    this._MaxRows = value;
                }
            }
        }

        [Column(Storage = "_TableName", DbType = "NVarChar(128)")]
        public string TableName {
            get {
                return this._TableName;
            }
            set {
                if ((this._TableName != value)) {
                    this._TableName = value;
                }
            }
        }
    }

    public partial class SpGroupInsertResult {

        private System.Nullable<decimal> _IntNewGroupID;

        public SpGroupInsertResult() {
        }

        [Column(Name = "intNewGroupID", Storage = "_IntNewGroupID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> IntNewGroupID {
            get {
                return this._IntNewGroupID;
            }
            set {
                if ((this._IntNewGroupID != value)) {
                    this._IntNewGroupID = value;
                }
            }
        }
    }

    public partial class SpGroupListResult {

        private System.Nullable<int> _GroupID;

        private string _GroupName;

        public SpGroupListResult() {
        }

        [Column(Name = "Group ID", Storage = "_GroupID", DbType = "Int")]
        public System.Nullable<int> GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this._GroupID = value;
                }
            }
        }

        [Column(Name = "Group Name", Storage = "_GroupName", DbType = "VarChar(30)")]
        public string GroupName {
            get {
                return this._GroupName;
            }
            set {
                if ((this._GroupName != value)) {
                    this._GroupName = value;
                }
            }
        }
    }

    public partial class SpIICharacterDetailGetResult {

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private string _VchrType;

        private string _VchrGridText;

        private string _VchrDescription;

        private System.Nullable<byte> _TintReliability;

        private System.Nullable<int> _IntImportedWithProjectID;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntCharacterGroupID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrAlias;

        public SpIICharacterDetailGetResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(10)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "vchrGridText", Storage = "_VchrGridText", DbType = "VarChar(50)")]
        public string VchrGridText {
            get {
                return this._VchrGridText;
            }
            set {
                if ((this._VchrGridText != value)) {
                    this._VchrGridText = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "tintReliability", Storage = "_TintReliability", DbType = "TinyInt")]
        public System.Nullable<byte> TintReliability {
            get {
                return this._TintReliability;
            }
            set {
                if ((this._TintReliability != value)) {
                    this._TintReliability = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intCharacterGroupID", Storage = "_IntCharacterGroupID", DbType = "Int")]
        public System.Nullable<int> IntCharacterGroupID {
            get {
                return this._IntCharacterGroupID;
            }
            set {
                if ((this._IntCharacterGroupID != value)) {
                    this._IntCharacterGroupID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(1000)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }
    }

    public partial class SpIICharacterListForProjectResult {

        private System.Nullable<int> _IntCharacterID;

        public SpIICharacterListForProjectResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }
    }

    public partial class SpIICharacterNumericDetailListResult {

        private System.Nullable<int> _IntCharacterNumericID;

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private System.Nullable<byte> _TintType;

        private System.Nullable<float> _NumMaximum;

        private System.Nullable<float> _NumMinimum;

        private string _VchrUnits;

        private System.Nullable<int> _IntOrder;

        private string _VchrDescription;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        public SpIICharacterNumericDetailListResult() {
        }

        [Column(Name = "intCharacterNumericID", Storage = "_IntCharacterNumericID", DbType = "Int")]
        public System.Nullable<int> IntCharacterNumericID {
            get {
                return this._IntCharacterNumericID;
            }
            set {
                if ((this._IntCharacterNumericID != value)) {
                    this._IntCharacterNumericID = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "tintType", Storage = "_TintType", DbType = "TinyInt")]
        public System.Nullable<byte> TintType {
            get {
                return this._TintType;
            }
            set {
                if ((this._TintType != value)) {
                    this._TintType = value;
                }
            }
        }

        [Column(Name = "numMaximum", Storage = "_NumMaximum", DbType = "Real")]
        public System.Nullable<float> NumMaximum {
            get {
                return this._NumMaximum;
            }
            set {
                if ((this._NumMaximum != value)) {
                    this._NumMaximum = value;
                }
            }
        }

        [Column(Name = "numMinimum", Storage = "_NumMinimum", DbType = "Real")]
        public System.Nullable<float> NumMinimum {
            get {
                return this._NumMinimum;
            }
            set {
                if ((this._NumMinimum != value)) {
                    this._NumMinimum = value;
                }
            }
        }

        [Column(Name = "vchrUnits", Storage = "_VchrUnits", DbType = "VarChar(255)")]
        public string VchrUnits {
            get {
                return this._VchrUnits;
            }
            set {
                if ((this._VchrUnits != value)) {
                    this._VchrUnits = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }
    }

    public partial class SpIICharacterStateDetailListResult {

        private System.Nullable<int> _IntCharacterStateID;

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<int> _IntOriginalDeltaNumber;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrAlias;

        public SpIICharacterStateDetailListResult() {
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_IntOriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> IntOriginalDeltaNumber {
            get {
                return this._IntOriginalDeltaNumber;
            }
            set {
                if ((this._IntOriginalDeltaNumber != value)) {
                    this._IntOriginalDeltaNumber = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(1000)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }
    }

    public partial class SpIIEntityDetailGetResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntParentID;

        private string _VchrEpithet;

        private string _VchrFullName;

        private string _VchrYearOfPub;

        private string _VchrAuthor;

        private string _VchrNameQualifier;

        private string _ChrElemType;

        private string _VchrRank;

        private string _ChrKingdomCode;

        private System.Nullable<int> _IntOrder;

        private string _VchrParentage;

        private System.Nullable<bool> _BitChangedComb;

        private System.Nullable<bool> _BitShadowed;

        private System.Nullable<bool> _BitUnplaced;

        private System.Nullable<bool> _BitUnverified;

        private System.Nullable<bool> _BitAvailableName;

        private System.Nullable<bool> _BitLiteratureName;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _TxtDistQual;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntImportedWithProjectID;

        private string _VchrAvailableNameStatus;

        public SpIIEntityDetailGetResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intParentID", Storage = "_IntParentID", DbType = "Int")]
        public System.Nullable<int> IntParentID {
            get {
                return this._IntParentID;
            }
            set {
                if ((this._IntParentID != value)) {
                    this._IntParentID = value;
                }
            }
        }

        [Column(Name = "vchrEpithet", Storage = "_VchrEpithet", DbType = "VarChar(200)")]
        public string VchrEpithet {
            get {
                return this._VchrEpithet;
            }
            set {
                if ((this._VchrEpithet != value)) {
                    this._VchrEpithet = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(50)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(100)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrNameQualifier", Storage = "_VchrNameQualifier", DbType = "VarChar(15)")]
        public string VchrNameQualifier {
            get {
                return this._VchrNameQualifier;
            }
            set {
                if ((this._VchrNameQualifier != value)) {
                    this._VchrNameQualifier = value;
                }
            }
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5)")]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this._ChrElemType = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(50)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "chrKingdomCode", Storage = "_ChrKingdomCode", DbType = "Char(2)")]
        public string ChrKingdomCode {
            get {
                return this._ChrKingdomCode;
            }
            set {
                if ((this._ChrKingdomCode != value)) {
                    this._ChrKingdomCode = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }

        [Column(Name = "bitChangedComb", Storage = "_BitChangedComb", DbType = "Bit")]
        public System.Nullable<bool> BitChangedComb {
            get {
                return this._BitChangedComb;
            }
            set {
                if ((this._BitChangedComb != value)) {
                    this._BitChangedComb = value;
                }
            }
        }

        [Column(Name = "bitShadowed", Storage = "_BitShadowed", DbType = "Bit")]
        public System.Nullable<bool> BitShadowed {
            get {
                return this._BitShadowed;
            }
            set {
                if ((this._BitShadowed != value)) {
                    this._BitShadowed = value;
                }
            }
        }

        [Column(Name = "bitUnplaced", Storage = "_BitUnplaced", DbType = "Bit")]
        public System.Nullable<bool> BitUnplaced {
            get {
                return this._BitUnplaced;
            }
            set {
                if ((this._BitUnplaced != value)) {
                    this._BitUnplaced = value;
                }
            }
        }

        [Column(Name = "bitUnverified", Storage = "_BitUnverified", DbType = "Bit")]
        public System.Nullable<bool> BitUnverified {
            get {
                return this._BitUnverified;
            }
            set {
                if ((this._BitUnverified != value)) {
                    this._BitUnverified = value;
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_BitAvailableName", DbType = "Bit")]
        public System.Nullable<bool> BitAvailableName {
            get {
                return this._BitAvailableName;
            }
            set {
                if ((this._BitAvailableName != value)) {
                    this._BitAvailableName = value;
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_BitLiteratureName", DbType = "Bit")]
        public System.Nullable<bool> BitLiteratureName {
            get {
                return this._BitLiteratureName;
            }
            set {
                if ((this._BitLiteratureName != value)) {
                    this._BitLiteratureName = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "txtDistQual", Storage = "_TxtDistQual", DbType = "Text")]
        public string TxtDistQual {
            get {
                return this._TxtDistQual;
            }
            set {
                if ((this._TxtDistQual != value)) {
                    this._TxtDistQual = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }
    }

    public partial class SpIIEntityListForProjectResult {

        private System.Nullable<int> _IntMorphologyEntityID;

        public SpIIEntityListForProjectResult() {
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_IntMorphologyEntityID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyEntityID {
            get {
                return this._IntMorphologyEntityID;
            }
            set {
                if ((this._IntMorphologyEntityID != value)) {
                    this._IntMorphologyEntityID = value;
                }
            }
        }
    }

    public partial class SpIIHistoryNumericImpactBiotaResult {

        private string _NumericName;

        private System.Nullable<decimal> _StartRange;

        private System.Nullable<decimal> _EndRange;

        public SpIIHistoryNumericImpactBiotaResult() {
        }

        [Column(Storage = "_NumericName", DbType = "VarChar(255)")]
        public string NumericName {
            get {
                return this._NumericName;
            }
            set {
                if ((this._NumericName != value)) {
                    this._NumericName = value;
                }
            }
        }

        [Column(Storage = "_StartRange", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> StartRange {
            get {
                return this._StartRange;
            }
            set {
                if ((this._StartRange != value)) {
                    this._StartRange = value;
                }
            }
        }

        [Column(Storage = "_EndRange", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> EndRange {
            get {
                return this._EndRange;
            }
            set {
                if ((this._EndRange != value)) {
                    this._EndRange = value;
                }
            }
        }
    }

    public partial class SpIINoteListResult {

        private System.Nullable<int> _IntNoteID;

        private System.Nullable<int> _IntNoteTypeID;

        private System.Nullable<int> _IntCatID;

        private System.Nullable<int> _IntIntraCatID;

        private string _TxtNote;

        private System.Nullable<bool> _BitUseInReports;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrAuthor;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPages;

        private string _TxtComments;

        private string _NoteType;

        private string _TxtFullRTF;

        public SpIINoteListResult() {
        }

        [Column(Name = "intNoteID", Storage = "_IntNoteID", DbType = "Int")]
        public System.Nullable<int> IntNoteID {
            get {
                return this._IntNoteID;
            }
            set {
                if ((this._IntNoteID != value)) {
                    this._IntNoteID = value;
                }
            }
        }

        [Column(Name = "intNoteTypeID", Storage = "_IntNoteTypeID", DbType = "Int")]
        public System.Nullable<int> IntNoteTypeID {
            get {
                return this._IntNoteTypeID;
            }
            set {
                if ((this._IntNoteTypeID != value)) {
                    this._IntNoteTypeID = value;
                }
            }
        }

        [Column(Name = "intCatID", Storage = "_IntCatID", DbType = "Int")]
        public System.Nullable<int> IntCatID {
            get {
                return this._IntCatID;
            }
            set {
                if ((this._IntCatID != value)) {
                    this._IntCatID = value;
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntIntraCatID", DbType = "Int")]
        public System.Nullable<int> IntIntraCatID {
            get {
                return this._IntIntraCatID;
            }
            set {
                if ((this._IntIntraCatID != value)) {
                    this._IntIntraCatID = value;
                }
            }
        }

        [Column(Name = "txtNote", Storage = "_TxtNote", DbType = "Text")]
        public string TxtNote {
            get {
                return this._TxtNote;
            }
            set {
                if ((this._TxtNote != value)) {
                    this._TxtNote = value;
                }
            }
        }

        [Column(Name = "bitUseInReports", Storage = "_BitUseInReports", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReports {
            get {
                return this._BitUseInReports;
            }
            set {
                if ((this._BitUseInReports != value)) {
                    this._BitUseInReports = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(255)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPages", Storage = "_VchrRefPages", DbType = "VarChar(100)")]
        public string VchrRefPages {
            get {
                return this._VchrRefPages;
            }
            set {
                if ((this._VchrRefPages != value)) {
                    this._VchrRefPages = value;
                }
            }
        }

        [Column(Name = "txtComments", Storage = "_TxtComments", DbType = "Text")]
        public string TxtComments {
            get {
                return this._TxtComments;
            }
            set {
                if ((this._TxtComments != value)) {
                    this._TxtComments = value;
                }
            }
        }

        [Column(Storage = "_NoteType", DbType = "VarChar(255)")]
        public string NoteType {
            get {
                return this._NoteType;
            }
            set {
                if ((this._NoteType != value)) {
                    this._NoteType = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }
    }

    public partial class SpIINumericDetailResult {

        private System.Nullable<int> _IntCharacterNumericID;

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private System.Nullable<byte> _TintType;

        private System.Nullable<float> _NumMaximum;

        private System.Nullable<float> _NumMinimum;

        private string _VchrUnits;

        private System.Nullable<int> _IntOrder;

        private string _VchrDescription;

        private System.Nullable<bool> _BitDefault;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        public SpIINumericDetailResult() {
        }

        [Column(Name = "intCharacterNumericID", Storage = "_IntCharacterNumericID", DbType = "Int")]
        public System.Nullable<int> IntCharacterNumericID {
            get {
                return this._IntCharacterNumericID;
            }
            set {
                if ((this._IntCharacterNumericID != value)) {
                    this._IntCharacterNumericID = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "tintType", Storage = "_TintType", DbType = "TinyInt")]
        public System.Nullable<byte> TintType {
            get {
                return this._TintType;
            }
            set {
                if ((this._TintType != value)) {
                    this._TintType = value;
                }
            }
        }

        [Column(Name = "numMaximum", Storage = "_NumMaximum", DbType = "Real")]
        public System.Nullable<float> NumMaximum {
            get {
                return this._NumMaximum;
            }
            set {
                if ((this._NumMaximum != value)) {
                    this._NumMaximum = value;
                }
            }
        }

        [Column(Name = "numMinimum", Storage = "_NumMinimum", DbType = "Real")]
        public System.Nullable<float> NumMinimum {
            get {
                return this._NumMinimum;
            }
            set {
                if ((this._NumMinimum != value)) {
                    this._NumMinimum = value;
                }
            }
        }

        [Column(Name = "vchrUnits", Storage = "_VchrUnits", DbType = "VarChar(255)")]
        public string VchrUnits {
            get {
                return this._VchrUnits;
            }
            set {
                if ((this._VchrUnits != value)) {
                    this._VchrUnits = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }
    }

    public partial class SpIIProjectGetResult {

        private System.Nullable<int> _IntMorphologyProjectID;

        private string _VchrName;

        private string _TxtDescription;

        private System.Nullable<int> _IntMorphologyProjectGroupID;

        private System.Nullable<bool> _BitCreatedByImport;

        private System.Nullable<short> _SintImportSourceType;

        private string _VchrDatetimeImported;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _ChrProjectType;

        public SpIIProjectGetResult() {
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_TxtDescription", DbType = "Text")]
        public string TxtDescription {
            get {
                return this._TxtDescription;
            }
            set {
                if ((this._TxtDescription != value)) {
                    this._TxtDescription = value;
                }
            }
        }

        [Column(Name = "intMorphologyProjectGroupID", Storage = "_IntMorphologyProjectGroupID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectGroupID {
            get {
                return this._IntMorphologyProjectGroupID;
            }
            set {
                if ((this._IntMorphologyProjectGroupID != value)) {
                    this._IntMorphologyProjectGroupID = value;
                }
            }
        }

        [Column(Name = "bitCreatedByImport", Storage = "_BitCreatedByImport", DbType = "Bit")]
        public System.Nullable<bool> BitCreatedByImport {
            get {
                return this._BitCreatedByImport;
            }
            set {
                if ((this._BitCreatedByImport != value)) {
                    this._BitCreatedByImport = value;
                }
            }
        }

        [Column(Name = "sintImportSourceType", Storage = "_SintImportSourceType", DbType = "SmallInt")]
        public System.Nullable<short> SintImportSourceType {
            get {
                return this._SintImportSourceType;
            }
            set {
                if ((this._SintImportSourceType != value)) {
                    this._SintImportSourceType = value;
                }
            }
        }

        [Column(Name = "vchrDatetimeImported", Storage = "_VchrDatetimeImported", DbType = "VarChar(50)")]
        public string VchrDatetimeImported {
            get {
                return this._VchrDatetimeImported;
            }
            set {
                if ((this._VchrDatetimeImported != value)) {
                    this._VchrDatetimeImported = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "chrProjectType", Storage = "_ChrProjectType", DbType = "Char(1)")]
        public string ChrProjectType {
            get {
                return this._ChrProjectType;
            }
            set {
                if ((this._ChrProjectType != value)) {
                    this._ChrProjectType = value;
                }
            }
        }
    }

    public partial class SpIIRefLinkListResult {

        private System.Nullable<int> _IntRefLinkID;

        private string _RefLink;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefCode;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private string _TxtFullRTF;

        private System.Nullable<int> _IntStartPage;

        private System.Nullable<int> _IntEndPage;

        private System.Nullable<int> _IntOrder;

        public SpIIRefLinkListResult() {
        }

        [Column(Name = "intRefLinkID", Storage = "_IntRefLinkID", DbType = "Int")]
        public System.Nullable<int> IntRefLinkID {
            get {
                return this._IntRefLinkID;
            }
            set {
                if ((this._IntRefLinkID != value)) {
                    this._IntRefLinkID = value;
                }
            }
        }

        [Column(Storage = "_RefLink", DbType = "VarChar(255)")]
        public string RefLink {
            get {
                return this._RefLink;
            }
            set {
                if ((this._RefLink != value)) {
                    this._RefLink = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_IntStartPage", DbType = "Int")]
        public System.Nullable<int> IntStartPage {
            get {
                return this._IntStartPage;
            }
            set {
                if ((this._IntStartPage != value)) {
                    this._IntStartPage = value;
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_IntEndPage", DbType = "Int")]
        public System.Nullable<int> IntEndPage {
            get {
                return this._IntEndPage;
            }
            set {
                if ((this._IntEndPage != value)) {
                    this._IntEndPage = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }
    }

    public partial class SpJournalFindResult {

        private System.Nullable<int> _IntJournalID;

        private string _VchrAbbrevName;

        private string _VchrAbbrevName2;

        private string _VchrAlias;

        private string _VchrFullName;

        private string _TxtNotes;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        public SpJournalFindResult() {
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName", Storage = "_VchrAbbrevName", DbType = "VarChar(100)")]
        public string VchrAbbrevName {
            get {
                return this._VchrAbbrevName;
            }
            set {
                if ((this._VchrAbbrevName != value)) {
                    this._VchrAbbrevName = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName2", Storage = "_VchrAbbrevName2", DbType = "VarChar(100)")]
        public string VchrAbbrevName2 {
            get {
                return this._VchrAbbrevName2;
            }
            set {
                if ((this._VchrAbbrevName2 != value)) {
                    this._VchrAbbrevName2 = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(100)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(900)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }
    }

    public partial class SpJournalGetResult {

        private System.Nullable<int> _IntJournalID;

        private string _VchrAbbrevName;

        private string _VchrAbbrevName2;

        private string _VchrAlias;

        private string _VchrFullName;

        private string _TxtNotes;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        public SpJournalGetResult() {
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName", Storage = "_VchrAbbrevName", DbType = "VarChar(100)")]
        public string VchrAbbrevName {
            get {
                return this._VchrAbbrevName;
            }
            set {
                if ((this._VchrAbbrevName != value)) {
                    this._VchrAbbrevName = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName2", Storage = "_VchrAbbrevName2", DbType = "VarChar(100)")]
        public string VchrAbbrevName2 {
            get {
                return this._VchrAbbrevName2;
            }
            set {
                if ((this._VchrAbbrevName2 != value)) {
                    this._VchrAbbrevName2 = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(100)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(900)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }
    }

    public partial class SpJournalInsertResult {

        private System.Nullable<decimal> _NewJournalID;

        public SpJournalInsertResult() {
        }

        [Column(Storage = "_NewJournalID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewJournalID {
            get {
                return this._NewJournalID;
            }
            set {
                if ((this._NewJournalID != value)) {
                    this._NewJournalID = value;
                }
            }
        }
    }

    public partial class SpJournalLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpJournalLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(100)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpKeywordInsertResult {

        private System.Nullable<decimal> _NewKeywordID;

        public SpKeywordInsertResult() {
        }

        [Column(Storage = "_NewKeywordID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewKeywordID {
            get {
                return this._NewKeywordID;
            }
            set {
                if ((this._NewKeywordID != value)) {
                    this._NewKeywordID = value;
                }
            }
        }
    }

    public partial class SpKeywordListResult {

        private System.Nullable<int> _IntKeywordID;

        private string _Keyword;

        private string _VchrValue;

        private string _TxtValueQual;

        private System.Nullable<bool> _BitUseInReport;

        private System.Nullable<int> _Changes;

        private System.Nullable<System.Guid> _GUID;

        public SpKeywordListResult() {
        }

        [Column(Name = "intKeywordID", Storage = "_IntKeywordID", DbType = "Int")]
        public System.Nullable<int> IntKeywordID {
            get {
                return this._IntKeywordID;
            }
            set {
                if ((this._IntKeywordID != value)) {
                    this._IntKeywordID = value;
                }
            }
        }

        [Column(Storage = "_Keyword", DbType = "VarChar(255)")]
        public string Keyword {
            get {
                return this._Keyword;
            }
            set {
                if ((this._Keyword != value)) {
                    this._Keyword = value;
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_VchrValue", DbType = "VarChar(255)")]
        public string VchrValue {
            get {
                return this._VchrValue;
            }
            set {
                if ((this._VchrValue != value)) {
                    this._VchrValue = value;
                }
            }
        }

        [Column(Name = "txtValueQual", Storage = "_TxtValueQual", DbType = "Text")]
        public string TxtValueQual {
            get {
                return this._TxtValueQual;
            }
            set {
                if ((this._TxtValueQual != value)) {
                    this._TxtValueQual = value;
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_BitUseInReport", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReport {
            get {
                return this._BitUseInReport;
            }
            set {
                if ((this._BitUseInReport != value)) {
                    this._BitUseInReport = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpKeywordTypeListForCategoryResult {

        private string _Keyword;

        public SpKeywordTypeListForCategoryResult() {
        }

        [Column(Storage = "_Keyword", DbType = "VarChar(255)")]
        public string Keyword {
            get {
                return this._Keyword;
            }
            set {
                if ((this._Keyword != value)) {
                    this._Keyword = value;
                }
            }
        }
    }

    public partial class SpKeywordValueListResult {

        private System.Nullable<int> _Column1;

        private string _VchrValue;

        public SpKeywordValueListResult() {
        }

        [Column(Name = "", Storage = "_Column1", DbType = "Int")]
        public System.Nullable<int> Column1 {
            get {
                return this._Column1;
            }
            set {
                if ((this._Column1 != value)) {
                    this._Column1 = value;
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_VchrValue", DbType = "VarChar(255)")]
        public string VchrValue {
            get {
                return this._VchrValue;
            }
            set {
                if ((this._VchrValue != value)) {
                    this._VchrValue = value;
                }
            }
        }
    }

    public partial class SpLabelSetInsertResult {

        private System.Nullable<decimal> _NewLabelSet;

        public SpLabelSetInsertResult() {
        }

        [Column(Storage = "_NewLabelSet", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewLabelSet {
            get {
                return this._NewLabelSet;
            }
            set {
                if ((this._NewLabelSet != value)) {
                    this._NewLabelSet = value;
                }
            }
        }
    }

    public partial class SpLabelSetItemInsertResult {

        private System.Nullable<decimal> _NewLabelSetID;

        public SpLabelSetItemInsertResult() {
        }

        [Column(Storage = "_NewLabelSetID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewLabelSetID {
            get {
                return this._NewLabelSetID;
            }
            set {
                if ((this._NewLabelSetID != value)) {
                    this._NewLabelSetID = value;
                }
            }
        }
    }

    public partial class SpLabelSetItemListResult {

        private System.Nullable<int> _SetID;

        private System.Nullable<int> _LabelItemID;

        private System.Nullable<int> _ItemID;

        private string _ItemType;

        private System.Nullable<int> _SiteID;

        private System.Nullable<int> _VisitID;

        private System.Nullable<int> _MaterialID;

        private string _Region;

        private System.Nullable<byte> _LocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private System.Nullable<byte> _AreaType;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long2;

        private System.Nullable<double> _Lat2;

        private string _Collectors;

        private System.Nullable<byte> _DateType;

        private System.Nullable<int> _StartDate;

        private System.Nullable<int> _EndDate;

        private string _CasualDate;

        private string _AccessionNo;

        private string _TaxaFullName;

        private System.Nullable<int> _PrintOrder;

        private System.Nullable<int> _IntNumCopies;

        public SpLabelSetItemListResult() {
        }

        [Column(Storage = "_SetID", DbType = "Int")]
        public System.Nullable<int> SetID {
            get {
                return this._SetID;
            }
            set {
                if ((this._SetID != value)) {
                    this._SetID = value;
                }
            }
        }

        [Column(Storage = "_LabelItemID", DbType = "Int")]
        public System.Nullable<int> LabelItemID {
            get {
                return this._LabelItemID;
            }
            set {
                if ((this._LabelItemID != value)) {
                    this._LabelItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemType", DbType = "VarChar(15)")]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this._ItemType = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_VisitID", DbType = "Int")]
        public System.Nullable<int> VisitID {
            get {
                return this._VisitID;
            }
            set {
                if ((this._VisitID != value)) {
                    this._VisitID = value;
                }
            }
        }

        [Column(Storage = "_MaterialID", DbType = "Int")]
        public System.Nullable<int> MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this._MaterialID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this._Local = value;
                }
            }
        }

        [Column(Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this._DistanceFromPlace = value;
                }
            }
        }

        [Column(Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this._DirFromPlace = value;
                }
            }
        }

        [Column(Storage = "_AreaType", DbType = "TinyInt")]
        public System.Nullable<byte> AreaType {
            get {
                return this._AreaType;
            }
            set {
                if ((this._AreaType != value)) {
                    this._AreaType = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }

        [Column(Storage = "_Collectors", DbType = "VarChar(255)")]
        public string Collectors {
            get {
                return this._Collectors;
            }
            set {
                if ((this._Collectors != value)) {
                    this._Collectors = value;
                }
            }
        }

        [Column(Storage = "_DateType", DbType = "TinyInt")]
        public System.Nullable<byte> DateType {
            get {
                return this._DateType;
            }
            set {
                if ((this._DateType != value)) {
                    this._DateType = value;
                }
            }
        }

        [Column(Storage = "_StartDate", DbType = "Int")]
        public System.Nullable<int> StartDate {
            get {
                return this._StartDate;
            }
            set {
                if ((this._StartDate != value)) {
                    this._StartDate = value;
                }
            }
        }

        [Column(Storage = "_EndDate", DbType = "Int")]
        public System.Nullable<int> EndDate {
            get {
                return this._EndDate;
            }
            set {
                if ((this._EndDate != value)) {
                    this._EndDate = value;
                }
            }
        }

        [Column(Storage = "_CasualDate", DbType = "VarChar(255)")]
        public string CasualDate {
            get {
                return this._CasualDate;
            }
            set {
                if ((this._CasualDate != value)) {
                    this._CasualDate = value;
                }
            }
        }

        [Column(Storage = "_AccessionNo", DbType = "VarChar(50)")]
        public string AccessionNo {
            get {
                return this._AccessionNo;
            }
            set {
                if ((this._AccessionNo != value)) {
                    this._AccessionNo = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }

        [Column(Storage = "_PrintOrder", DbType = "Int")]
        public System.Nullable<int> PrintOrder {
            get {
                return this._PrintOrder;
            }
            set {
                if ((this._PrintOrder != value)) {
                    this._PrintOrder = value;
                }
            }
        }

        [Column(Name = "intNumCopies", Storage = "_IntNumCopies", DbType = "Int")]
        public System.Nullable<int> IntNumCopies {
            get {
                return this._IntNumCopies;
            }
            set {
                if ((this._IntNumCopies != value)) {
                    this._IntNumCopies = value;
                }
            }
        }
    }

    public partial class SpLabelSetItemListOneResult1 {

        private System.Nullable<int> _ItemID;

        private string _ItemType;

        private System.Nullable<int> _SiteID;

        private string _Region;

        private System.Nullable<byte> _LocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private System.Nullable<byte> _AreaType;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long2;

        private System.Nullable<double> _Lat2;

        public SpLabelSetItemListOneResult1() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemType", DbType = "VarChar(20)")]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this._ItemType = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this._Local = value;
                }
            }
        }

        [Column(Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this._DistanceFromPlace = value;
                }
            }
        }

        [Column(Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this._DirFromPlace = value;
                }
            }
        }

        [Column(Storage = "_AreaType", DbType = "TinyInt")]
        public System.Nullable<byte> AreaType {
            get {
                return this._AreaType;
            }
            set {
                if ((this._AreaType != value)) {
                    this._AreaType = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }
    }

    public partial class SpLabelSetItemListOneResult2 {

        private System.Nullable<int> _ItemID;

        private string _ItemType;

        private System.Nullable<int> _SiteID;

        private System.Nullable<int> _VisitID;

        private string _Region;

        private System.Nullable<byte> _LocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private System.Nullable<byte> _AreaType;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long2;

        private System.Nullable<double> _Lat2;

        private string _Collectors;

        private System.Nullable<byte> _DateType;

        private System.Nullable<int> _StartDate;

        private System.Nullable<int> _EndDate;

        private string _CasualDate;

        public SpLabelSetItemListOneResult2() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemType", DbType = "VarChar(20)")]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this._ItemType = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_VisitID", DbType = "Int")]
        public System.Nullable<int> VisitID {
            get {
                return this._VisitID;
            }
            set {
                if ((this._VisitID != value)) {
                    this._VisitID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this._Local = value;
                }
            }
        }

        [Column(Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this._DistanceFromPlace = value;
                }
            }
        }

        [Column(Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this._DirFromPlace = value;
                }
            }
        }

        [Column(Storage = "_AreaType", DbType = "TinyInt")]
        public System.Nullable<byte> AreaType {
            get {
                return this._AreaType;
            }
            set {
                if ((this._AreaType != value)) {
                    this._AreaType = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }

        [Column(Storage = "_Collectors", DbType = "VarChar(255)")]
        public string Collectors {
            get {
                return this._Collectors;
            }
            set {
                if ((this._Collectors != value)) {
                    this._Collectors = value;
                }
            }
        }

        [Column(Storage = "_DateType", DbType = "TinyInt")]
        public System.Nullable<byte> DateType {
            get {
                return this._DateType;
            }
            set {
                if ((this._DateType != value)) {
                    this._DateType = value;
                }
            }
        }

        [Column(Storage = "_StartDate", DbType = "Int")]
        public System.Nullable<int> StartDate {
            get {
                return this._StartDate;
            }
            set {
                if ((this._StartDate != value)) {
                    this._StartDate = value;
                }
            }
        }

        [Column(Storage = "_EndDate", DbType = "Int")]
        public System.Nullable<int> EndDate {
            get {
                return this._EndDate;
            }
            set {
                if ((this._EndDate != value)) {
                    this._EndDate = value;
                }
            }
        }

        [Column(Storage = "_CasualDate", DbType = "VarChar(255)")]
        public string CasualDate {
            get {
                return this._CasualDate;
            }
            set {
                if ((this._CasualDate != value)) {
                    this._CasualDate = value;
                }
            }
        }
    }

    public partial class SpLabelSetItemListOneResult3 {

        private System.Nullable<int> _ItemID;

        private string _ItemType;

        private System.Nullable<int> _SiteID;

        private System.Nullable<int> _VisitID;

        private System.Nullable<int> _MaterialID;

        private string _Region;

        private System.Nullable<byte> _LocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private System.Nullable<byte> _AreaType;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long2;

        private System.Nullable<double> _Lat2;

        private string _Collectors;

        private System.Nullable<byte> _DateType;

        private System.Nullable<int> _StartDate;

        private System.Nullable<int> _EndDate;

        private string _CasualDate;

        private string _AccessionNo;

        private string _TaxaFullName;

        public SpLabelSetItemListOneResult3() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemType", DbType = "VarChar(20)")]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this._ItemType = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_VisitID", DbType = "Int")]
        public System.Nullable<int> VisitID {
            get {
                return this._VisitID;
            }
            set {
                if ((this._VisitID != value)) {
                    this._VisitID = value;
                }
            }
        }

        [Column(Storage = "_MaterialID", DbType = "Int")]
        public System.Nullable<int> MaterialID {
            get {
                return this._MaterialID;
            }
            set {
                if ((this._MaterialID != value)) {
                    this._MaterialID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this._Local = value;
                }
            }
        }

        [Column(Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this._DistanceFromPlace = value;
                }
            }
        }

        [Column(Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this._DirFromPlace = value;
                }
            }
        }

        [Column(Storage = "_AreaType", DbType = "TinyInt")]
        public System.Nullable<byte> AreaType {
            get {
                return this._AreaType;
            }
            set {
                if ((this._AreaType != value)) {
                    this._AreaType = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }

        [Column(Storage = "_Collectors", DbType = "VarChar(255)")]
        public string Collectors {
            get {
                return this._Collectors;
            }
            set {
                if ((this._Collectors != value)) {
                    this._Collectors = value;
                }
            }
        }

        [Column(Storage = "_DateType", DbType = "TinyInt")]
        public System.Nullable<byte> DateType {
            get {
                return this._DateType;
            }
            set {
                if ((this._DateType != value)) {
                    this._DateType = value;
                }
            }
        }

        [Column(Storage = "_StartDate", DbType = "Int")]
        public System.Nullable<int> StartDate {
            get {
                return this._StartDate;
            }
            set {
                if ((this._StartDate != value)) {
                    this._StartDate = value;
                }
            }
        }

        [Column(Storage = "_EndDate", DbType = "Int")]
        public System.Nullable<int> EndDate {
            get {
                return this._EndDate;
            }
            set {
                if ((this._EndDate != value)) {
                    this._EndDate = value;
                }
            }
        }

        [Column(Storage = "_CasualDate", DbType = "VarChar(255)")]
        public string CasualDate {
            get {
                return this._CasualDate;
            }
            set {
                if ((this._CasualDate != value)) {
                    this._CasualDate = value;
                }
            }
        }

        [Column(Storage = "_AccessionNo", DbType = "VarChar(50)")]
        public string AccessionNo {
            get {
                return this._AccessionNo;
            }
            set {
                if ((this._AccessionNo != value)) {
                    this._AccessionNo = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }
    }

    public partial class SpLabelSetItemListUserPeriodResult {

        private System.Nullable<int> _ItemID;

        private string _ItemType;

        private System.Nullable<int> _SiteID;

        private System.Nullable<int> _VisitID;

        private System.Nullable<int> _Material;

        private string _Region;

        private System.Nullable<byte> _LocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private System.Nullable<byte> _AreaType;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long2;

        private System.Nullable<double> _Lat2;

        private string _Collectors;

        private System.Nullable<byte> _DateType;

        private System.Nullable<int> _StartDate;

        private System.Nullable<int> _EndDate;

        private string _CasualDate;

        private string _AccessionNo;

        private string _TaxaFullName;

        public SpLabelSetItemListUserPeriodResult() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemType", DbType = "VarChar(8)")]
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                if ((this._ItemType != value)) {
                    this._ItemType = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_VisitID", DbType = "Int")]
        public System.Nullable<int> VisitID {
            get {
                return this._VisitID;
            }
            set {
                if ((this._VisitID != value)) {
                    this._VisitID = value;
                }
            }
        }

        [Column(Storage = "_Material", DbType = "Int")]
        public System.Nullable<int> Material {
            get {
                return this._Material;
            }
            set {
                if ((this._Material != value)) {
                    this._Material = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this._Local = value;
                }
            }
        }

        [Column(Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this._DistanceFromPlace = value;
                }
            }
        }

        [Column(Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this._DirFromPlace = value;
                }
            }
        }

        [Column(Storage = "_AreaType", DbType = "TinyInt")]
        public System.Nullable<byte> AreaType {
            get {
                return this._AreaType;
            }
            set {
                if ((this._AreaType != value)) {
                    this._AreaType = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }

        [Column(Storage = "_Collectors", DbType = "VarChar(255)")]
        public string Collectors {
            get {
                return this._Collectors;
            }
            set {
                if ((this._Collectors != value)) {
                    this._Collectors = value;
                }
            }
        }

        [Column(Storage = "_DateType", DbType = "TinyInt")]
        public System.Nullable<byte> DateType {
            get {
                return this._DateType;
            }
            set {
                if ((this._DateType != value)) {
                    this._DateType = value;
                }
            }
        }

        [Column(Storage = "_StartDate", DbType = "Int")]
        public System.Nullable<int> StartDate {
            get {
                return this._StartDate;
            }
            set {
                if ((this._StartDate != value)) {
                    this._StartDate = value;
                }
            }
        }

        [Column(Storage = "_EndDate", DbType = "Int")]
        public System.Nullable<int> EndDate {
            get {
                return this._EndDate;
            }
            set {
                if ((this._EndDate != value)) {
                    this._EndDate = value;
                }
            }
        }

        [Column(Storage = "_CasualDate", DbType = "VarChar(255)")]
        public string CasualDate {
            get {
                return this._CasualDate;
            }
            set {
                if ((this._CasualDate != value)) {
                    this._CasualDate = value;
                }
            }
        }

        [Column(Storage = "_AccessionNo", DbType = "VarChar(50)")]
        public string AccessionNo {
            get {
                return this._AccessionNo;
            }
            set {
                if ((this._AccessionNo != value)) {
                    this._AccessionNo = value;
                }
            }
        }

        [Column(Storage = "_TaxaFullName", DbType = "VarChar(255)")]
        public string TaxaFullName {
            get {
                return this._TaxaFullName;
            }
            set {
                if ((this._TaxaFullName != value)) {
                    this._TaxaFullName = value;
                }
            }
        }
    }

    public partial class SpLabelSetListResult {

        private System.Nullable<int> _ID;

        private string _Name;

        private string _Delimited;

        public SpLabelSetListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(200)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Delimited", DbType = "Text")]
        public string Delimited {
            get {
                return this._Delimited;
            }
            set {
                if ((this._Delimited != value)) {
                    this._Delimited = value;
                }
            }
        }
    }

    public partial class SpLoanCorrListResult {

        private System.Nullable<int> _IntLoanCorrespondenceID;

        private System.Nullable<int> _IntLoanID;

        private string _VchrType;

        private System.Nullable<System.DateTime> _DtDate;

        private System.Nullable<int> _IntSenderID;

        private System.Nullable<int> _IntRecipientID;

        private string _TxtDescription;

        private string _VchrRefNo;

        private System.Nullable<System.Guid> _GUID;

        private string _SenderTitle;

        private string _SenderGivenName;

        private string _SenderName;

        private string _RecipientTitle;

        private string _RecipientGivenName;

        private string _RecipientName;

        private System.Nullable<int> _Changes;

        public SpLoanCorrListResult() {
        }

        [Column(Name = "intLoanCorrespondenceID", Storage = "_IntLoanCorrespondenceID", DbType = "Int")]
        public System.Nullable<int> IntLoanCorrespondenceID {
            get {
                return this._IntLoanCorrespondenceID;
            }
            set {
                if ((this._IntLoanCorrespondenceID != value)) {
                    this._IntLoanCorrespondenceID = value;
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(50)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "dtDate", Storage = "_DtDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDate {
            get {
                return this._DtDate;
            }
            set {
                if ((this._DtDate != value)) {
                    this._DtDate = value;
                }
            }
        }

        [Column(Name = "intSenderID", Storage = "_IntSenderID", DbType = "Int")]
        public System.Nullable<int> IntSenderID {
            get {
                return this._IntSenderID;
            }
            set {
                if ((this._IntSenderID != value)) {
                    this._IntSenderID = value;
                }
            }
        }

        [Column(Name = "intRecipientID", Storage = "_IntRecipientID", DbType = "Int")]
        public System.Nullable<int> IntRecipientID {
            get {
                return this._IntRecipientID;
            }
            set {
                if ((this._IntRecipientID != value)) {
                    this._IntRecipientID = value;
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_TxtDescription", DbType = "Text")]
        public string TxtDescription {
            get {
                return this._TxtDescription;
            }
            set {
                if ((this._TxtDescription != value)) {
                    this._TxtDescription = value;
                }
            }
        }

        [Column(Name = "vchrRefNo", Storage = "_VchrRefNo", DbType = "VarChar(50)")]
        public string VchrRefNo {
            get {
                return this._VchrRefNo;
            }
            set {
                if ((this._VchrRefNo != value)) {
                    this._VchrRefNo = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_SenderTitle", DbType = "VarChar(50)")]
        public string SenderTitle {
            get {
                return this._SenderTitle;
            }
            set {
                if ((this._SenderTitle != value)) {
                    this._SenderTitle = value;
                }
            }
        }

        [Column(Storage = "_SenderGivenName", DbType = "VarChar(255)")]
        public string SenderGivenName {
            get {
                return this._SenderGivenName;
            }
            set {
                if ((this._SenderGivenName != value)) {
                    this._SenderGivenName = value;
                }
            }
        }

        [Column(Storage = "_SenderName", DbType = "VarChar(255)")]
        public string SenderName {
            get {
                return this._SenderName;
            }
            set {
                if ((this._SenderName != value)) {
                    this._SenderName = value;
                }
            }
        }

        [Column(Storage = "_RecipientTitle", DbType = "VarChar(50)")]
        public string RecipientTitle {
            get {
                return this._RecipientTitle;
            }
            set {
                if ((this._RecipientTitle != value)) {
                    this._RecipientTitle = value;
                }
            }
        }

        [Column(Storage = "_RecipientGivenName", DbType = "VarChar(255)")]
        public string RecipientGivenName {
            get {
                return this._RecipientGivenName;
            }
            set {
                if ((this._RecipientGivenName != value)) {
                    this._RecipientGivenName = value;
                }
            }
        }

        [Column(Storage = "_RecipientName", DbType = "VarChar(255)")]
        public string RecipientName {
            get {
                return this._RecipientName;
            }
            set {
                if ((this._RecipientName != value)) {
                    this._RecipientName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpLoanFindResult {

        private System.Nullable<int> _IntLoanID;

        private string _VchrLoanNumber;

        private System.Nullable<int> _IntRequestorID;

        private System.Nullable<int> _IntReceiverID;

        private System.Nullable<int> _IntOriginatorID;

        private System.Nullable<System.DateTime> _DtDateInitiated;

        private System.Nullable<System.DateTime> _DtDateDue;

        private string _VchrMethodOfTransfer;

        private string _VchrPermitNumber;

        private string _VchrTypeOfReturn;

        private string _VchrRestrictions;

        private System.Nullable<System.DateTime> _DtDateClosed;

        private System.Nullable<bool> _BitLoanClosed;

        private System.Nullable<System.Guid> _GUID;

        private string _RequestorTitle;

        private string _RequestorGivenName;

        private string _RequestorName;

        private string _ReceiverTitle;

        private string _ReceiverGivenName;

        private string _ReceiverName;

        private string _OriginatorTitle;

        private string _OriginatorGivenName;

        private string _OriginatorName;

        public SpLoanFindResult() {
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "vchrLoanNumber", Storage = "_VchrLoanNumber", DbType = "VarChar(50)")]
        public string VchrLoanNumber {
            get {
                return this._VchrLoanNumber;
            }
            set {
                if ((this._VchrLoanNumber != value)) {
                    this._VchrLoanNumber = value;
                }
            }
        }

        [Column(Name = "intRequestorID", Storage = "_IntRequestorID", DbType = "Int")]
        public System.Nullable<int> IntRequestorID {
            get {
                return this._IntRequestorID;
            }
            set {
                if ((this._IntRequestorID != value)) {
                    this._IntRequestorID = value;
                }
            }
        }

        [Column(Name = "intReceiverID", Storage = "_IntReceiverID", DbType = "Int")]
        public System.Nullable<int> IntReceiverID {
            get {
                return this._IntReceiverID;
            }
            set {
                if ((this._IntReceiverID != value)) {
                    this._IntReceiverID = value;
                }
            }
        }

        [Column(Name = "intOriginatorID", Storage = "_IntOriginatorID", DbType = "Int")]
        public System.Nullable<int> IntOriginatorID {
            get {
                return this._IntOriginatorID;
            }
            set {
                if ((this._IntOriginatorID != value)) {
                    this._IntOriginatorID = value;
                }
            }
        }

        [Column(Name = "dtDateInitiated", Storage = "_DtDateInitiated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateInitiated {
            get {
                return this._DtDateInitiated;
            }
            set {
                if ((this._DtDateInitiated != value)) {
                    this._DtDateInitiated = value;
                }
            }
        }

        [Column(Name = "dtDateDue", Storage = "_DtDateDue", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateDue {
            get {
                return this._DtDateDue;
            }
            set {
                if ((this._DtDateDue != value)) {
                    this._DtDateDue = value;
                }
            }
        }

        [Column(Name = "vchrMethodOfTransfer", Storage = "_VchrMethodOfTransfer", DbType = "VarChar(255)")]
        public string VchrMethodOfTransfer {
            get {
                return this._VchrMethodOfTransfer;
            }
            set {
                if ((this._VchrMethodOfTransfer != value)) {
                    this._VchrMethodOfTransfer = value;
                }
            }
        }

        [Column(Name = "vchrPermitNumber", Storage = "_VchrPermitNumber", DbType = "VarChar(50)")]
        public string VchrPermitNumber {
            get {
                return this._VchrPermitNumber;
            }
            set {
                if ((this._VchrPermitNumber != value)) {
                    this._VchrPermitNumber = value;
                }
            }
        }

        [Column(Name = "vchrTypeOfReturn", Storage = "_VchrTypeOfReturn", DbType = "VarChar(50)")]
        public string VchrTypeOfReturn {
            get {
                return this._VchrTypeOfReturn;
            }
            set {
                if ((this._VchrTypeOfReturn != value)) {
                    this._VchrTypeOfReturn = value;
                }
            }
        }

        [Column(Name = "vchrRestrictions", Storage = "_VchrRestrictions", DbType = "VarChar(255)")]
        public string VchrRestrictions {
            get {
                return this._VchrRestrictions;
            }
            set {
                if ((this._VchrRestrictions != value)) {
                    this._VchrRestrictions = value;
                }
            }
        }

        [Column(Name = "dtDateClosed", Storage = "_DtDateClosed", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateClosed {
            get {
                return this._DtDateClosed;
            }
            set {
                if ((this._DtDateClosed != value)) {
                    this._DtDateClosed = value;
                }
            }
        }

        [Column(Name = "bitLoanClosed", Storage = "_BitLoanClosed", DbType = "Bit")]
        public System.Nullable<bool> BitLoanClosed {
            get {
                return this._BitLoanClosed;
            }
            set {
                if ((this._BitLoanClosed != value)) {
                    this._BitLoanClosed = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_RequestorTitle", DbType = "VarChar(50)")]
        public string RequestorTitle {
            get {
                return this._RequestorTitle;
            }
            set {
                if ((this._RequestorTitle != value)) {
                    this._RequestorTitle = value;
                }
            }
        }

        [Column(Storage = "_RequestorGivenName", DbType = "VarChar(255)")]
        public string RequestorGivenName {
            get {
                return this._RequestorGivenName;
            }
            set {
                if ((this._RequestorGivenName != value)) {
                    this._RequestorGivenName = value;
                }
            }
        }

        [Column(Storage = "_RequestorName", DbType = "VarChar(255)")]
        public string RequestorName {
            get {
                return this._RequestorName;
            }
            set {
                if ((this._RequestorName != value)) {
                    this._RequestorName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverTitle", DbType = "VarChar(50)")]
        public string ReceiverTitle {
            get {
                return this._ReceiverTitle;
            }
            set {
                if ((this._ReceiverTitle != value)) {
                    this._ReceiverTitle = value;
                }
            }
        }

        [Column(Storage = "_ReceiverGivenName", DbType = "VarChar(255)")]
        public string ReceiverGivenName {
            get {
                return this._ReceiverGivenName;
            }
            set {
                if ((this._ReceiverGivenName != value)) {
                    this._ReceiverGivenName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverName", DbType = "VarChar(255)")]
        public string ReceiverName {
            get {
                return this._ReceiverName;
            }
            set {
                if ((this._ReceiverName != value)) {
                    this._ReceiverName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorTitle", DbType = "VarChar(50)")]
        public string OriginatorTitle {
            get {
                return this._OriginatorTitle;
            }
            set {
                if ((this._OriginatorTitle != value)) {
                    this._OriginatorTitle = value;
                }
            }
        }

        [Column(Storage = "_OriginatorGivenName", DbType = "VarChar(255)")]
        public string OriginatorGivenName {
            get {
                return this._OriginatorGivenName;
            }
            set {
                if ((this._OriginatorGivenName != value)) {
                    this._OriginatorGivenName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorName", DbType = "VarChar(255)")]
        public string OriginatorName {
            get {
                return this._OriginatorName;
            }
            set {
                if ((this._OriginatorName != value)) {
                    this._OriginatorName = value;
                }
            }
        }
    }

    public partial class SpLoanGetResult {

        private System.Nullable<int> _IntLoanID;

        private string _VchrLoanNumber;

        private System.Nullable<int> _IntRequestorID;

        private System.Nullable<int> _IntReceiverID;

        private System.Nullable<int> _IntOriginatorID;

        private System.Nullable<System.DateTime> _DtDateInitiated;

        private System.Nullable<System.DateTime> _DtDateDue;

        private string _VchrMethodOfTransfer;

        private string _VchrPermitNumber;

        private string _VchrTypeOfReturn;

        private string _VchrRestrictions;

        private System.Nullable<System.DateTime> _DtDateClosed;

        private System.Nullable<bool> _BitLoanClosed;

        private System.Nullable<System.Guid> _GUID;

        private string _RequestorTitle;

        private string _RequestorGivenName;

        private string _RequestorName;

        private string _RequestorPostalAddress;

        private string _RequestorStreetAddress;

        private string _ReceiverTitle;

        private string _ReceiverGivenName;

        private string _ReceiverName;

        private string _ReceiverPostalAddress;

        private string _ReceiverStreetAddress;

        private string _OriginatorTitle;

        private string _OriginatorGivenName;

        private string _OriginatorName;

        private string _OriginatorPostalAddress;

        private string _OriginatorStreetAddress;

        public SpLoanGetResult() {
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "vchrLoanNumber", Storage = "_VchrLoanNumber", DbType = "VarChar(50)")]
        public string VchrLoanNumber {
            get {
                return this._VchrLoanNumber;
            }
            set {
                if ((this._VchrLoanNumber != value)) {
                    this._VchrLoanNumber = value;
                }
            }
        }

        [Column(Name = "intRequestorID", Storage = "_IntRequestorID", DbType = "Int")]
        public System.Nullable<int> IntRequestorID {
            get {
                return this._IntRequestorID;
            }
            set {
                if ((this._IntRequestorID != value)) {
                    this._IntRequestorID = value;
                }
            }
        }

        [Column(Name = "intReceiverID", Storage = "_IntReceiverID", DbType = "Int")]
        public System.Nullable<int> IntReceiverID {
            get {
                return this._IntReceiverID;
            }
            set {
                if ((this._IntReceiverID != value)) {
                    this._IntReceiverID = value;
                }
            }
        }

        [Column(Name = "intOriginatorID", Storage = "_IntOriginatorID", DbType = "Int")]
        public System.Nullable<int> IntOriginatorID {
            get {
                return this._IntOriginatorID;
            }
            set {
                if ((this._IntOriginatorID != value)) {
                    this._IntOriginatorID = value;
                }
            }
        }

        [Column(Name = "dtDateInitiated", Storage = "_DtDateInitiated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateInitiated {
            get {
                return this._DtDateInitiated;
            }
            set {
                if ((this._DtDateInitiated != value)) {
                    this._DtDateInitiated = value;
                }
            }
        }

        [Column(Name = "dtDateDue", Storage = "_DtDateDue", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateDue {
            get {
                return this._DtDateDue;
            }
            set {
                if ((this._DtDateDue != value)) {
                    this._DtDateDue = value;
                }
            }
        }

        [Column(Name = "vchrMethodOfTransfer", Storage = "_VchrMethodOfTransfer", DbType = "VarChar(255)")]
        public string VchrMethodOfTransfer {
            get {
                return this._VchrMethodOfTransfer;
            }
            set {
                if ((this._VchrMethodOfTransfer != value)) {
                    this._VchrMethodOfTransfer = value;
                }
            }
        }

        [Column(Name = "vchrPermitNumber", Storage = "_VchrPermitNumber", DbType = "VarChar(50)")]
        public string VchrPermitNumber {
            get {
                return this._VchrPermitNumber;
            }
            set {
                if ((this._VchrPermitNumber != value)) {
                    this._VchrPermitNumber = value;
                }
            }
        }

        [Column(Name = "vchrTypeOfReturn", Storage = "_VchrTypeOfReturn", DbType = "VarChar(50)")]
        public string VchrTypeOfReturn {
            get {
                return this._VchrTypeOfReturn;
            }
            set {
                if ((this._VchrTypeOfReturn != value)) {
                    this._VchrTypeOfReturn = value;
                }
            }
        }

        [Column(Name = "vchrRestrictions", Storage = "_VchrRestrictions", DbType = "VarChar(255)")]
        public string VchrRestrictions {
            get {
                return this._VchrRestrictions;
            }
            set {
                if ((this._VchrRestrictions != value)) {
                    this._VchrRestrictions = value;
                }
            }
        }

        [Column(Name = "dtDateClosed", Storage = "_DtDateClosed", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateClosed {
            get {
                return this._DtDateClosed;
            }
            set {
                if ((this._DtDateClosed != value)) {
                    this._DtDateClosed = value;
                }
            }
        }

        [Column(Name = "bitLoanClosed", Storage = "_BitLoanClosed", DbType = "Bit")]
        public System.Nullable<bool> BitLoanClosed {
            get {
                return this._BitLoanClosed;
            }
            set {
                if ((this._BitLoanClosed != value)) {
                    this._BitLoanClosed = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_RequestorTitle", DbType = "VarChar(50)")]
        public string RequestorTitle {
            get {
                return this._RequestorTitle;
            }
            set {
                if ((this._RequestorTitle != value)) {
                    this._RequestorTitle = value;
                }
            }
        }

        [Column(Storage = "_RequestorGivenName", DbType = "VarChar(255)")]
        public string RequestorGivenName {
            get {
                return this._RequestorGivenName;
            }
            set {
                if ((this._RequestorGivenName != value)) {
                    this._RequestorGivenName = value;
                }
            }
        }

        [Column(Storage = "_RequestorName", DbType = "VarChar(255)")]
        public string RequestorName {
            get {
                return this._RequestorName;
            }
            set {
                if ((this._RequestorName != value)) {
                    this._RequestorName = value;
                }
            }
        }

        [Column(Storage = "_RequestorPostalAddress", DbType = "VarChar(1000)")]
        public string RequestorPostalAddress {
            get {
                return this._RequestorPostalAddress;
            }
            set {
                if ((this._RequestorPostalAddress != value)) {
                    this._RequestorPostalAddress = value;
                }
            }
        }

        [Column(Storage = "_RequestorStreetAddress", DbType = "VarChar(1000)")]
        public string RequestorStreetAddress {
            get {
                return this._RequestorStreetAddress;
            }
            set {
                if ((this._RequestorStreetAddress != value)) {
                    this._RequestorStreetAddress = value;
                }
            }
        }

        [Column(Storage = "_ReceiverTitle", DbType = "VarChar(50)")]
        public string ReceiverTitle {
            get {
                return this._ReceiverTitle;
            }
            set {
                if ((this._ReceiverTitle != value)) {
                    this._ReceiverTitle = value;
                }
            }
        }

        [Column(Storage = "_ReceiverGivenName", DbType = "VarChar(255)")]
        public string ReceiverGivenName {
            get {
                return this._ReceiverGivenName;
            }
            set {
                if ((this._ReceiverGivenName != value)) {
                    this._ReceiverGivenName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverName", DbType = "VarChar(255)")]
        public string ReceiverName {
            get {
                return this._ReceiverName;
            }
            set {
                if ((this._ReceiverName != value)) {
                    this._ReceiverName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverPostalAddress", DbType = "VarChar(1000)")]
        public string ReceiverPostalAddress {
            get {
                return this._ReceiverPostalAddress;
            }
            set {
                if ((this._ReceiverPostalAddress != value)) {
                    this._ReceiverPostalAddress = value;
                }
            }
        }

        [Column(Storage = "_ReceiverStreetAddress", DbType = "VarChar(1000)")]
        public string ReceiverStreetAddress {
            get {
                return this._ReceiverStreetAddress;
            }
            set {
                if ((this._ReceiverStreetAddress != value)) {
                    this._ReceiverStreetAddress = value;
                }
            }
        }

        [Column(Storage = "_OriginatorTitle", DbType = "VarChar(50)")]
        public string OriginatorTitle {
            get {
                return this._OriginatorTitle;
            }
            set {
                if ((this._OriginatorTitle != value)) {
                    this._OriginatorTitle = value;
                }
            }
        }

        [Column(Storage = "_OriginatorGivenName", DbType = "VarChar(255)")]
        public string OriginatorGivenName {
            get {
                return this._OriginatorGivenName;
            }
            set {
                if ((this._OriginatorGivenName != value)) {
                    this._OriginatorGivenName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorName", DbType = "VarChar(255)")]
        public string OriginatorName {
            get {
                return this._OriginatorName;
            }
            set {
                if ((this._OriginatorName != value)) {
                    this._OriginatorName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorPostalAddress", DbType = "VarChar(1000)")]
        public string OriginatorPostalAddress {
            get {
                return this._OriginatorPostalAddress;
            }
            set {
                if ((this._OriginatorPostalAddress != value)) {
                    this._OriginatorPostalAddress = value;
                }
            }
        }

        [Column(Storage = "_OriginatorStreetAddress", DbType = "VarChar(1000)")]
        public string OriginatorStreetAddress {
            get {
                return this._OriginatorStreetAddress;
            }
            set {
                if ((this._OriginatorStreetAddress != value)) {
                    this._OriginatorStreetAddress = value;
                }
            }
        }
    }

    public partial class SpLoanInsertResult {

        private System.Nullable<decimal> _NewLoanID;

        public SpLoanInsertResult() {
        }

        [Column(Storage = "_NewLoanID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewLoanID {
            get {
                return this._NewLoanID;
            }
            set {
                if ((this._NewLoanID != value)) {
                    this._NewLoanID = value;
                }
            }
        }
    }

    public partial class SpLoanListForContactResult {

        private System.Nullable<int> _IntLoanID;

        private string _VchrLoanNumber;

        private System.Nullable<int> _IntRequestorID;

        private System.Nullable<int> _IntReceiverID;

        private System.Nullable<int> _IntOriginatorID;

        private System.Nullable<System.DateTime> _DtDateInitiated;

        private System.Nullable<System.DateTime> _DtDateDue;

        private string _VchrMethodOfTransfer;

        private string _VchrPermitNumber;

        private string _VchrTypeOfReturn;

        private string _VchrRestrictions;

        private System.Nullable<System.DateTime> _DtDateClosed;

        private System.Nullable<bool> _BitLoanClosed;

        private System.Nullable<System.Guid> _GUID;

        private string _RequestorTitle;

        private string _RequestorGivenName;

        private string _RequestorName;

        private string _ReceiverTitle;

        private string _ReceiverGivenName;

        private string _ReceiverName;

        private string _OriginatorTitle;

        private string _OriginatorGivenName;

        private string _OriginatorName;

        public SpLoanListForContactResult() {
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "vchrLoanNumber", Storage = "_VchrLoanNumber", DbType = "VarChar(50)")]
        public string VchrLoanNumber {
            get {
                return this._VchrLoanNumber;
            }
            set {
                if ((this._VchrLoanNumber != value)) {
                    this._VchrLoanNumber = value;
                }
            }
        }

        [Column(Name = "intRequestorID", Storage = "_IntRequestorID", DbType = "Int")]
        public System.Nullable<int> IntRequestorID {
            get {
                return this._IntRequestorID;
            }
            set {
                if ((this._IntRequestorID != value)) {
                    this._IntRequestorID = value;
                }
            }
        }

        [Column(Name = "intReceiverID", Storage = "_IntReceiverID", DbType = "Int")]
        public System.Nullable<int> IntReceiverID {
            get {
                return this._IntReceiverID;
            }
            set {
                if ((this._IntReceiverID != value)) {
                    this._IntReceiverID = value;
                }
            }
        }

        [Column(Name = "intOriginatorID", Storage = "_IntOriginatorID", DbType = "Int")]
        public System.Nullable<int> IntOriginatorID {
            get {
                return this._IntOriginatorID;
            }
            set {
                if ((this._IntOriginatorID != value)) {
                    this._IntOriginatorID = value;
                }
            }
        }

        [Column(Name = "dtDateInitiated", Storage = "_DtDateInitiated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateInitiated {
            get {
                return this._DtDateInitiated;
            }
            set {
                if ((this._DtDateInitiated != value)) {
                    this._DtDateInitiated = value;
                }
            }
        }

        [Column(Name = "dtDateDue", Storage = "_DtDateDue", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateDue {
            get {
                return this._DtDateDue;
            }
            set {
                if ((this._DtDateDue != value)) {
                    this._DtDateDue = value;
                }
            }
        }

        [Column(Name = "vchrMethodOfTransfer", Storage = "_VchrMethodOfTransfer", DbType = "VarChar(255)")]
        public string VchrMethodOfTransfer {
            get {
                return this._VchrMethodOfTransfer;
            }
            set {
                if ((this._VchrMethodOfTransfer != value)) {
                    this._VchrMethodOfTransfer = value;
                }
            }
        }

        [Column(Name = "vchrPermitNumber", Storage = "_VchrPermitNumber", DbType = "VarChar(50)")]
        public string VchrPermitNumber {
            get {
                return this._VchrPermitNumber;
            }
            set {
                if ((this._VchrPermitNumber != value)) {
                    this._VchrPermitNumber = value;
                }
            }
        }

        [Column(Name = "vchrTypeOfReturn", Storage = "_VchrTypeOfReturn", DbType = "VarChar(50)")]
        public string VchrTypeOfReturn {
            get {
                return this._VchrTypeOfReturn;
            }
            set {
                if ((this._VchrTypeOfReturn != value)) {
                    this._VchrTypeOfReturn = value;
                }
            }
        }

        [Column(Name = "vchrRestrictions", Storage = "_VchrRestrictions", DbType = "VarChar(255)")]
        public string VchrRestrictions {
            get {
                return this._VchrRestrictions;
            }
            set {
                if ((this._VchrRestrictions != value)) {
                    this._VchrRestrictions = value;
                }
            }
        }

        [Column(Name = "dtDateClosed", Storage = "_DtDateClosed", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateClosed {
            get {
                return this._DtDateClosed;
            }
            set {
                if ((this._DtDateClosed != value)) {
                    this._DtDateClosed = value;
                }
            }
        }

        [Column(Name = "bitLoanClosed", Storage = "_BitLoanClosed", DbType = "Bit")]
        public System.Nullable<bool> BitLoanClosed {
            get {
                return this._BitLoanClosed;
            }
            set {
                if ((this._BitLoanClosed != value)) {
                    this._BitLoanClosed = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_RequestorTitle", DbType = "VarChar(50)")]
        public string RequestorTitle {
            get {
                return this._RequestorTitle;
            }
            set {
                if ((this._RequestorTitle != value)) {
                    this._RequestorTitle = value;
                }
            }
        }

        [Column(Storage = "_RequestorGivenName", DbType = "VarChar(255)")]
        public string RequestorGivenName {
            get {
                return this._RequestorGivenName;
            }
            set {
                if ((this._RequestorGivenName != value)) {
                    this._RequestorGivenName = value;
                }
            }
        }

        [Column(Storage = "_RequestorName", DbType = "VarChar(255)")]
        public string RequestorName {
            get {
                return this._RequestorName;
            }
            set {
                if ((this._RequestorName != value)) {
                    this._RequestorName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverTitle", DbType = "VarChar(50)")]
        public string ReceiverTitle {
            get {
                return this._ReceiverTitle;
            }
            set {
                if ((this._ReceiverTitle != value)) {
                    this._ReceiverTitle = value;
                }
            }
        }

        [Column(Storage = "_ReceiverGivenName", DbType = "VarChar(255)")]
        public string ReceiverGivenName {
            get {
                return this._ReceiverGivenName;
            }
            set {
                if ((this._ReceiverGivenName != value)) {
                    this._ReceiverGivenName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverName", DbType = "VarChar(255)")]
        public string ReceiverName {
            get {
                return this._ReceiverName;
            }
            set {
                if ((this._ReceiverName != value)) {
                    this._ReceiverName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorTitle", DbType = "VarChar(50)")]
        public string OriginatorTitle {
            get {
                return this._OriginatorTitle;
            }
            set {
                if ((this._OriginatorTitle != value)) {
                    this._OriginatorTitle = value;
                }
            }
        }

        [Column(Storage = "_OriginatorGivenName", DbType = "VarChar(255)")]
        public string OriginatorGivenName {
            get {
                return this._OriginatorGivenName;
            }
            set {
                if ((this._OriginatorGivenName != value)) {
                    this._OriginatorGivenName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorName", DbType = "VarChar(255)")]
        public string OriginatorName {
            get {
                return this._OriginatorName;
            }
            set {
                if ((this._OriginatorName != value)) {
                    this._OriginatorName = value;
                }
            }
        }
    }

    public partial class SpLoanListForMaterialResult {

        private System.Nullable<int> _IntLoanID;

        private string _VchrLoanNumber;

        private System.Nullable<int> _IntRequestorID;

        private System.Nullable<int> _IntReceiverID;

        private System.Nullable<int> _IntOriginatorID;

        private System.Nullable<System.DateTime> _DtDateInitiated;

        private System.Nullable<System.DateTime> _DtDateDue;

        private string _VchrMethodOfTransfer;

        private string _VchrPermitNumber;

        private string _VchrTypeOfReturn;

        private string _VchrRestrictions;

        private System.Nullable<System.DateTime> _DtDateClosed;

        private System.Nullable<bool> _BitLoanClosed;

        private System.Nullable<System.Guid> _GUID;

        private string _RequestorTitle;

        private string _RequestorGivenName;

        private string _RequestorName;

        private string _ReceiverTitle;

        private string _ReceiverGivenName;

        private string _ReceiverName;

        private string _OriginatorTitle;

        private string _OriginatorGivenName;

        private string _OriginatorName;

        public SpLoanListForMaterialResult() {
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "vchrLoanNumber", Storage = "_VchrLoanNumber", DbType = "VarChar(50)")]
        public string VchrLoanNumber {
            get {
                return this._VchrLoanNumber;
            }
            set {
                if ((this._VchrLoanNumber != value)) {
                    this._VchrLoanNumber = value;
                }
            }
        }

        [Column(Name = "intRequestorID", Storage = "_IntRequestorID", DbType = "Int")]
        public System.Nullable<int> IntRequestorID {
            get {
                return this._IntRequestorID;
            }
            set {
                if ((this._IntRequestorID != value)) {
                    this._IntRequestorID = value;
                }
            }
        }

        [Column(Name = "intReceiverID", Storage = "_IntReceiverID", DbType = "Int")]
        public System.Nullable<int> IntReceiverID {
            get {
                return this._IntReceiverID;
            }
            set {
                if ((this._IntReceiverID != value)) {
                    this._IntReceiverID = value;
                }
            }
        }

        [Column(Name = "intOriginatorID", Storage = "_IntOriginatorID", DbType = "Int")]
        public System.Nullable<int> IntOriginatorID {
            get {
                return this._IntOriginatorID;
            }
            set {
                if ((this._IntOriginatorID != value)) {
                    this._IntOriginatorID = value;
                }
            }
        }

        [Column(Name = "dtDateInitiated", Storage = "_DtDateInitiated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateInitiated {
            get {
                return this._DtDateInitiated;
            }
            set {
                if ((this._DtDateInitiated != value)) {
                    this._DtDateInitiated = value;
                }
            }
        }

        [Column(Name = "dtDateDue", Storage = "_DtDateDue", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateDue {
            get {
                return this._DtDateDue;
            }
            set {
                if ((this._DtDateDue != value)) {
                    this._DtDateDue = value;
                }
            }
        }

        [Column(Name = "vchrMethodOfTransfer", Storage = "_VchrMethodOfTransfer", DbType = "VarChar(255)")]
        public string VchrMethodOfTransfer {
            get {
                return this._VchrMethodOfTransfer;
            }
            set {
                if ((this._VchrMethodOfTransfer != value)) {
                    this._VchrMethodOfTransfer = value;
                }
            }
        }

        [Column(Name = "vchrPermitNumber", Storage = "_VchrPermitNumber", DbType = "VarChar(50)")]
        public string VchrPermitNumber {
            get {
                return this._VchrPermitNumber;
            }
            set {
                if ((this._VchrPermitNumber != value)) {
                    this._VchrPermitNumber = value;
                }
            }
        }

        [Column(Name = "vchrTypeOfReturn", Storage = "_VchrTypeOfReturn", DbType = "VarChar(50)")]
        public string VchrTypeOfReturn {
            get {
                return this._VchrTypeOfReturn;
            }
            set {
                if ((this._VchrTypeOfReturn != value)) {
                    this._VchrTypeOfReturn = value;
                }
            }
        }

        [Column(Name = "vchrRestrictions", Storage = "_VchrRestrictions", DbType = "VarChar(255)")]
        public string VchrRestrictions {
            get {
                return this._VchrRestrictions;
            }
            set {
                if ((this._VchrRestrictions != value)) {
                    this._VchrRestrictions = value;
                }
            }
        }

        [Column(Name = "dtDateClosed", Storage = "_DtDateClosed", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateClosed {
            get {
                return this._DtDateClosed;
            }
            set {
                if ((this._DtDateClosed != value)) {
                    this._DtDateClosed = value;
                }
            }
        }

        [Column(Name = "bitLoanClosed", Storage = "_BitLoanClosed", DbType = "Bit")]
        public System.Nullable<bool> BitLoanClosed {
            get {
                return this._BitLoanClosed;
            }
            set {
                if ((this._BitLoanClosed != value)) {
                    this._BitLoanClosed = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_RequestorTitle", DbType = "VarChar(50)")]
        public string RequestorTitle {
            get {
                return this._RequestorTitle;
            }
            set {
                if ((this._RequestorTitle != value)) {
                    this._RequestorTitle = value;
                }
            }
        }

        [Column(Storage = "_RequestorGivenName", DbType = "VarChar(255)")]
        public string RequestorGivenName {
            get {
                return this._RequestorGivenName;
            }
            set {
                if ((this._RequestorGivenName != value)) {
                    this._RequestorGivenName = value;
                }
            }
        }

        [Column(Storage = "_RequestorName", DbType = "VarChar(255)")]
        public string RequestorName {
            get {
                return this._RequestorName;
            }
            set {
                if ((this._RequestorName != value)) {
                    this._RequestorName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverTitle", DbType = "VarChar(50)")]
        public string ReceiverTitle {
            get {
                return this._ReceiverTitle;
            }
            set {
                if ((this._ReceiverTitle != value)) {
                    this._ReceiverTitle = value;
                }
            }
        }

        [Column(Storage = "_ReceiverGivenName", DbType = "VarChar(255)")]
        public string ReceiverGivenName {
            get {
                return this._ReceiverGivenName;
            }
            set {
                if ((this._ReceiverGivenName != value)) {
                    this._ReceiverGivenName = value;
                }
            }
        }

        [Column(Storage = "_ReceiverName", DbType = "VarChar(255)")]
        public string ReceiverName {
            get {
                return this._ReceiverName;
            }
            set {
                if ((this._ReceiverName != value)) {
                    this._ReceiverName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorTitle", DbType = "VarChar(50)")]
        public string OriginatorTitle {
            get {
                return this._OriginatorTitle;
            }
            set {
                if ((this._OriginatorTitle != value)) {
                    this._OriginatorTitle = value;
                }
            }
        }

        [Column(Storage = "_OriginatorGivenName", DbType = "VarChar(255)")]
        public string OriginatorGivenName {
            get {
                return this._OriginatorGivenName;
            }
            set {
                if ((this._OriginatorGivenName != value)) {
                    this._OriginatorGivenName = value;
                }
            }
        }

        [Column(Storage = "_OriginatorName", DbType = "VarChar(255)")]
        public string OriginatorName {
            get {
                return this._OriginatorName;
            }
            set {
                if ((this._OriginatorName != value)) {
                    this._OriginatorName = value;
                }
            }
        }
    }

    public partial class SpLoanMaterialGetResult {

        private System.Nullable<int> _IntLoanMaterialID;

        private System.Nullable<int> _IntLoanID;

        private System.Nullable<int> _IntMaterialID;

        private string _VchrNumSpecimens;

        private string _VchrTaxonName;

        private string _VchrMaterialDescription;

        private System.Nullable<System.DateTime> _DtDateAdded;

        private System.Nullable<System.DateTime> _DtDateReturned;

        private System.Nullable<bool> _BitReturned;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrMaterialName;

        private System.Nullable<int> _Changes;

        public SpLoanMaterialGetResult() {
        }

        [Column(Name = "intLoanMaterialID", Storage = "_IntLoanMaterialID", DbType = "Int")]
        public System.Nullable<int> IntLoanMaterialID {
            get {
                return this._IntLoanMaterialID;
            }
            set {
                if ((this._IntLoanMaterialID != value)) {
                    this._IntLoanMaterialID = value;
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "vchrNumSpecimens", Storage = "_VchrNumSpecimens", DbType = "VarChar(50)")]
        public string VchrNumSpecimens {
            get {
                return this._VchrNumSpecimens;
            }
            set {
                if ((this._VchrNumSpecimens != value)) {
                    this._VchrNumSpecimens = value;
                }
            }
        }

        [Column(Name = "vchrTaxonName", Storage = "_VchrTaxonName", DbType = "VarChar(100)")]
        public string VchrTaxonName {
            get {
                return this._VchrTaxonName;
            }
            set {
                if ((this._VchrTaxonName != value)) {
                    this._VchrTaxonName = value;
                }
            }
        }

        [Column(Name = "vchrMaterialDescription", Storage = "_VchrMaterialDescription", DbType = "VarChar(255)")]
        public string VchrMaterialDescription {
            get {
                return this._VchrMaterialDescription;
            }
            set {
                if ((this._VchrMaterialDescription != value)) {
                    this._VchrMaterialDescription = value;
                }
            }
        }

        [Column(Name = "dtDateAdded", Storage = "_DtDateAdded", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateAdded {
            get {
                return this._DtDateAdded;
            }
            set {
                if ((this._DtDateAdded != value)) {
                    this._DtDateAdded = value;
                }
            }
        }

        [Column(Name = "dtDateReturned", Storage = "_DtDateReturned", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateReturned {
            get {
                return this._DtDateReturned;
            }
            set {
                if ((this._DtDateReturned != value)) {
                    this._DtDateReturned = value;
                }
            }
        }

        [Column(Name = "bitReturned", Storage = "_BitReturned", DbType = "Bit")]
        public System.Nullable<bool> BitReturned {
            get {
                return this._BitReturned;
            }
            set {
                if ((this._BitReturned != value)) {
                    this._BitReturned = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_VchrMaterialName", DbType = "VarChar(255)")]
        public string VchrMaterialName {
            get {
                return this._VchrMaterialName;
            }
            set {
                if ((this._VchrMaterialName != value)) {
                    this._VchrMaterialName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpLoanMaterialInsertResult {

        private System.Nullable<decimal> _NewLoanMaterialID;

        public SpLoanMaterialInsertResult() {
        }

        [Column(Storage = "_NewLoanMaterialID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewLoanMaterialID {
            get {
                return this._NewLoanMaterialID;
            }
            set {
                if ((this._NewLoanMaterialID != value)) {
                    this._NewLoanMaterialID = value;
                }
            }
        }
    }

    public partial class SpLoanMaterialListResult {

        private System.Nullable<int> _IntLoanMaterialID;

        private System.Nullable<int> _IntLoanID;

        private System.Nullable<int> _IntMaterialID;

        private string _VchrNumSpecimens;

        private string _VchrTaxonName;

        private string _VchrMaterialDescription;

        private System.Nullable<System.DateTime> _DtDateAdded;

        private System.Nullable<System.DateTime> _DtDateReturned;

        private System.Nullable<bool> _BitReturned;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrMaterialName;

        private System.Nullable<int> _Changes;

        public SpLoanMaterialListResult() {
        }

        [Column(Name = "intLoanMaterialID", Storage = "_IntLoanMaterialID", DbType = "Int")]
        public System.Nullable<int> IntLoanMaterialID {
            get {
                return this._IntLoanMaterialID;
            }
            set {
                if ((this._IntLoanMaterialID != value)) {
                    this._IntLoanMaterialID = value;
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "vchrNumSpecimens", Storage = "_VchrNumSpecimens", DbType = "VarChar(50)")]
        public string VchrNumSpecimens {
            get {
                return this._VchrNumSpecimens;
            }
            set {
                if ((this._VchrNumSpecimens != value)) {
                    this._VchrNumSpecimens = value;
                }
            }
        }

        [Column(Name = "vchrTaxonName", Storage = "_VchrTaxonName", DbType = "VarChar(100)")]
        public string VchrTaxonName {
            get {
                return this._VchrTaxonName;
            }
            set {
                if ((this._VchrTaxonName != value)) {
                    this._VchrTaxonName = value;
                }
            }
        }

        [Column(Name = "vchrMaterialDescription", Storage = "_VchrMaterialDescription", DbType = "VarChar(255)")]
        public string VchrMaterialDescription {
            get {
                return this._VchrMaterialDescription;
            }
            set {
                if ((this._VchrMaterialDescription != value)) {
                    this._VchrMaterialDescription = value;
                }
            }
        }

        [Column(Name = "dtDateAdded", Storage = "_DtDateAdded", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateAdded {
            get {
                return this._DtDateAdded;
            }
            set {
                if ((this._DtDateAdded != value)) {
                    this._DtDateAdded = value;
                }
            }
        }

        [Column(Name = "dtDateReturned", Storage = "_DtDateReturned", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateReturned {
            get {
                return this._DtDateReturned;
            }
            set {
                if ((this._DtDateReturned != value)) {
                    this._DtDateReturned = value;
                }
            }
        }

        [Column(Name = "bitReturned", Storage = "_BitReturned", DbType = "Bit")]
        public System.Nullable<bool> BitReturned {
            get {
                return this._BitReturned;
            }
            set {
                if ((this._BitReturned != value)) {
                    this._BitReturned = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_VchrMaterialName", DbType = "VarChar(255)")]
        public string VchrMaterialName {
            get {
                return this._VchrMaterialName;
            }
            set {
                if ((this._VchrMaterialName != value)) {
                    this._VchrMaterialName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpLoanReminderDueResult {

        private System.Nullable<int> _IntLoanReminderID;

        private System.Nullable<int> _IntLoanID;

        private System.Nullable<System.DateTime> _DtDate;

        private System.Nullable<bool> _BitClosed;

        private string _TxtDescription;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrLoanNumber;

        private System.Nullable<System.DateTime> _DtDateInitiated;

        public SpLoanReminderDueResult() {
        }

        [Column(Name = "intLoanReminderID", Storage = "_IntLoanReminderID", DbType = "Int")]
        public System.Nullable<int> IntLoanReminderID {
            get {
                return this._IntLoanReminderID;
            }
            set {
                if ((this._IntLoanReminderID != value)) {
                    this._IntLoanReminderID = value;
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "dtDate", Storage = "_DtDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDate {
            get {
                return this._DtDate;
            }
            set {
                if ((this._DtDate != value)) {
                    this._DtDate = value;
                }
            }
        }

        [Column(Name = "bitClosed", Storage = "_BitClosed", DbType = "Bit")]
        public System.Nullable<bool> BitClosed {
            get {
                return this._BitClosed;
            }
            set {
                if ((this._BitClosed != value)) {
                    this._BitClosed = value;
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_TxtDescription", DbType = "Text")]
        public string TxtDescription {
            get {
                return this._TxtDescription;
            }
            set {
                if ((this._TxtDescription != value)) {
                    this._TxtDescription = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrLoanNumber", Storage = "_VchrLoanNumber", DbType = "VarChar(50)")]
        public string VchrLoanNumber {
            get {
                return this._VchrLoanNumber;
            }
            set {
                if ((this._VchrLoanNumber != value)) {
                    this._VchrLoanNumber = value;
                }
            }
        }

        [Column(Name = "dtDateInitiated", Storage = "_DtDateInitiated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateInitiated {
            get {
                return this._DtDateInitiated;
            }
            set {
                if ((this._DtDateInitiated != value)) {
                    this._DtDateInitiated = value;
                }
            }
        }
    }

    public partial class SpLoanReminderInsertResult {

        private System.Nullable<decimal> _NewLoanReminderID;

        public SpLoanReminderInsertResult() {
        }

        [Column(Storage = "_NewLoanReminderID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewLoanReminderID {
            get {
                return this._NewLoanReminderID;
            }
            set {
                if ((this._NewLoanReminderID != value)) {
                    this._NewLoanReminderID = value;
                }
            }
        }
    }

    public partial class SpLoanReminderListResult {

        private System.Nullable<int> _IntLoanReminderID;

        private System.Nullable<int> _IntLoanID;

        private System.Nullable<System.DateTime> _DtDate;

        private System.Nullable<bool> _BitClosed;

        private string _TxtDescription;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _Changes;

        public SpLoanReminderListResult() {
        }

        [Column(Name = "intLoanReminderID", Storage = "_IntLoanReminderID", DbType = "Int")]
        public System.Nullable<int> IntLoanReminderID {
            get {
                return this._IntLoanReminderID;
            }
            set {
                if ((this._IntLoanReminderID != value)) {
                    this._IntLoanReminderID = value;
                }
            }
        }

        [Column(Name = "intLoanID", Storage = "_IntLoanID", DbType = "Int")]
        public System.Nullable<int> IntLoanID {
            get {
                return this._IntLoanID;
            }
            set {
                if ((this._IntLoanID != value)) {
                    this._IntLoanID = value;
                }
            }
        }

        [Column(Name = "dtDate", Storage = "_DtDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDate {
            get {
                return this._DtDate;
            }
            set {
                if ((this._DtDate != value)) {
                    this._DtDate = value;
                }
            }
        }

        [Column(Name = "bitClosed", Storage = "_BitClosed", DbType = "Bit")]
        public System.Nullable<bool> BitClosed {
            get {
                return this._BitClosed;
            }
            set {
                if ((this._BitClosed != value)) {
                    this._BitClosed = value;
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_TxtDescription", DbType = "Text")]
        public string TxtDescription {
            get {
                return this._TxtDescription;
            }
            set {
                if ((this._TxtDescription != value)) {
                    this._TxtDescription = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpMaterialFindTemplatesResult {

        private System.Nullable<int> _ID;

        private string _Material;

        public SpMaterialFindTemplatesResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Material", DbType = "VarChar(255)")]
        public string Material {
            get {
                return this._Material;
            }
            set {
                if ((this._Material != value)) {
                    this._Material = value;
                }
            }
        }
    }

    public partial class SpMaterialGetResult {

        private System.Nullable<int> _IntMaterialID;

        private System.Nullable<byte> _TintTemplate;

        private string _VchrMaterialName;

        private System.Nullable<int> _IntSiteVisitID;

        private string _VchrAccessionNo;

        private string _VchrRegNo;

        private string _VchrCollectorNo;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrIDBy;

        private System.Nullable<System.DateTime> _DtIDDate;

        private System.Nullable<int> _IntIDRefID;

        private string _VchrIDMethod;

        private string _VchrIDAccuracy;

        private string _VchrIDNameQual;

        private string _VchrIDNotes;

        private string _VchrInstitution;

        private string _VchrCollectionMethod;

        private string _VchrAbundance;

        private string _VchrMacroHabitat;

        private string _VchrMicroHabitat;

        private string _VchrSource;

        private System.Nullable<int> _IntAssociateOf;

        private string _VchrSpecialLabel;

        private string _VchrOriginalLabel;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntTrapID;

        private string _VchrIDRefPage;

        private System.Nullable<System.Guid> _GUID;

        private string _TaxaDesc;

        private System.Nullable<int> _SiteID;

        private string _SiteName;

        private string _SiteVisitName;

        private string _VchrRefCode;

        private string _VchrTrapName;

        private System.Nullable<int> _LoanID;

        private string _TypeData;

        public SpMaterialGetResult() {
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_VchrMaterialName", DbType = "VarChar(255)")]
        public string VchrMaterialName {
            get {
                return this._VchrMaterialName;
            }
            set {
                if ((this._VchrMaterialName != value)) {
                    this._VchrMaterialName = value;
                }
            }
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }

        [Column(Name = "vchrAccessionNo", Storage = "_VchrAccessionNo", DbType = "VarChar(50)")]
        public string VchrAccessionNo {
            get {
                return this._VchrAccessionNo;
            }
            set {
                if ((this._VchrAccessionNo != value)) {
                    this._VchrAccessionNo = value;
                }
            }
        }

        [Column(Name = "vchrRegNo", Storage = "_VchrRegNo", DbType = "VarChar(50)")]
        public string VchrRegNo {
            get {
                return this._VchrRegNo;
            }
            set {
                if ((this._VchrRegNo != value)) {
                    this._VchrRegNo = value;
                }
            }
        }

        [Column(Name = "vchrCollectorNo", Storage = "_VchrCollectorNo", DbType = "VarChar(50)")]
        public string VchrCollectorNo {
            get {
                return this._VchrCollectorNo;
            }
            set {
                if ((this._VchrCollectorNo != value)) {
                    this._VchrCollectorNo = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrIDBy", Storage = "_VchrIDBy", DbType = "VarChar(50)")]
        public string VchrIDBy {
            get {
                return this._VchrIDBy;
            }
            set {
                if ((this._VchrIDBy != value)) {
                    this._VchrIDBy = value;
                }
            }
        }

        [Column(Name = "dtIDDate", Storage = "_DtIDDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtIDDate {
            get {
                return this._DtIDDate;
            }
            set {
                if ((this._DtIDDate != value)) {
                    this._DtIDDate = value;
                }
            }
        }

        [Column(Name = "intIDRefID", Storage = "_IntIDRefID", DbType = "Int")]
        public System.Nullable<int> IntIDRefID {
            get {
                return this._IntIDRefID;
            }
            set {
                if ((this._IntIDRefID != value)) {
                    this._IntIDRefID = value;
                }
            }
        }

        [Column(Name = "vchrIDMethod", Storage = "_VchrIDMethod", DbType = "VarChar(255)")]
        public string VchrIDMethod {
            get {
                return this._VchrIDMethod;
            }
            set {
                if ((this._VchrIDMethod != value)) {
                    this._VchrIDMethod = value;
                }
            }
        }

        [Column(Name = "vchrIDAccuracy", Storage = "_VchrIDAccuracy", DbType = "VarChar(50)")]
        public string VchrIDAccuracy {
            get {
                return this._VchrIDAccuracy;
            }
            set {
                if ((this._VchrIDAccuracy != value)) {
                    this._VchrIDAccuracy = value;
                }
            }
        }

        [Column(Name = "vchrIDNameQual", Storage = "_VchrIDNameQual", DbType = "VarChar(255)")]
        public string VchrIDNameQual {
            get {
                return this._VchrIDNameQual;
            }
            set {
                if ((this._VchrIDNameQual != value)) {
                    this._VchrIDNameQual = value;
                }
            }
        }

        [Column(Name = "vchrIDNotes", Storage = "_VchrIDNotes", DbType = "VarChar(255)")]
        public string VchrIDNotes {
            get {
                return this._VchrIDNotes;
            }
            set {
                if ((this._VchrIDNotes != value)) {
                    this._VchrIDNotes = value;
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_VchrInstitution", DbType = "VarChar(100)")]
        public string VchrInstitution {
            get {
                return this._VchrInstitution;
            }
            set {
                if ((this._VchrInstitution != value)) {
                    this._VchrInstitution = value;
                }
            }
        }

        [Column(Name = "vchrCollectionMethod", Storage = "_VchrCollectionMethod", DbType = "VarChar(50)")]
        public string VchrCollectionMethod {
            get {
                return this._VchrCollectionMethod;
            }
            set {
                if ((this._VchrCollectionMethod != value)) {
                    this._VchrCollectionMethod = value;
                }
            }
        }

        [Column(Name = "vchrAbundance", Storage = "_VchrAbundance", DbType = "VarChar(255)")]
        public string VchrAbundance {
            get {
                return this._VchrAbundance;
            }
            set {
                if ((this._VchrAbundance != value)) {
                    this._VchrAbundance = value;
                }
            }
        }

        [Column(Name = "vchrMacroHabitat", Storage = "_VchrMacroHabitat", DbType = "VarChar(255)")]
        public string VchrMacroHabitat {
            get {
                return this._VchrMacroHabitat;
            }
            set {
                if ((this._VchrMacroHabitat != value)) {
                    this._VchrMacroHabitat = value;
                }
            }
        }

        [Column(Name = "vchrMicroHabitat", Storage = "_VchrMicroHabitat", DbType = "VarChar(255)")]
        public string VchrMicroHabitat {
            get {
                return this._VchrMicroHabitat;
            }
            set {
                if ((this._VchrMicroHabitat != value)) {
                    this._VchrMicroHabitat = value;
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_VchrSource", DbType = "VarChar(50)")]
        public string VchrSource {
            get {
                return this._VchrSource;
            }
            set {
                if ((this._VchrSource != value)) {
                    this._VchrSource = value;
                }
            }
        }

        [Column(Name = "intAssociateOf", Storage = "_IntAssociateOf", DbType = "Int")]
        public System.Nullable<int> IntAssociateOf {
            get {
                return this._IntAssociateOf;
            }
            set {
                if ((this._IntAssociateOf != value)) {
                    this._IntAssociateOf = value;
                }
            }
        }

        [Column(Name = "vchrSpecialLabel", Storage = "_VchrSpecialLabel", DbType = "VarChar(500)")]
        public string VchrSpecialLabel {
            get {
                return this._VchrSpecialLabel;
            }
            set {
                if ((this._VchrSpecialLabel != value)) {
                    this._VchrSpecialLabel = value;
                }
            }
        }

        [Column(Name = "vchrOriginalLabel", Storage = "_VchrOriginalLabel", DbType = "VarChar(500)")]
        public string VchrOriginalLabel {
            get {
                return this._VchrOriginalLabel;
            }
            set {
                if ((this._VchrOriginalLabel != value)) {
                    this._VchrOriginalLabel = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }

        [Column(Name = "vchrIDRefPage", Storage = "_VchrIDRefPage", DbType = "VarChar(100)")]
        public string VchrIDRefPage {
            get {
                return this._VchrIDRefPage;
            }
            set {
                if ((this._VchrIDRefPage != value)) {
                    this._VchrIDRefPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_TaxaDesc", DbType = "VarChar(255)")]
        public string TaxaDesc {
            get {
                return this._TaxaDesc;
            }
            set {
                if ((this._TaxaDesc != value)) {
                    this._TaxaDesc = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_SiteName", DbType = "VarChar(100)")]
        public string SiteName {
            get {
                return this._SiteName;
            }
            set {
                if ((this._SiteName != value)) {
                    this._SiteName = value;
                }
            }
        }

        [Column(Storage = "_SiteVisitName", DbType = "VarChar(255)")]
        public string SiteVisitName {
            get {
                return this._SiteVisitName;
            }
            set {
                if ((this._SiteVisitName != value)) {
                    this._SiteVisitName = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrTrapName", Storage = "_VchrTrapName", DbType = "VarChar(100)")]
        public string VchrTrapName {
            get {
                return this._VchrTrapName;
            }
            set {
                if ((this._VchrTrapName != value)) {
                    this._VchrTrapName = value;
                }
            }
        }

        [Column(Storage = "_LoanID", DbType = "Int")]
        public System.Nullable<int> LoanID {
            get {
                return this._LoanID;
            }
            set {
                if ((this._LoanID != value)) {
                    this._LoanID = value;
                }
            }
        }

        [Column(Storage = "_TypeData", DbType = "VarChar(8000)")]
        public string TypeData {
            get {
                return this._TypeData;
            }
            set {
                if ((this._TypeData != value)) {
                    this._TypeData = value;
                }
            }
        }
    }

    public partial class SpMaterialGetBiotaNameResult {

        private string _BiotaFullName;

        public SpMaterialGetBiotaNameResult() {
        }

        [Column(Storage = "_BiotaFullName", DbType = "VarChar(500)")]
        public string BiotaFullName {
            get {
                return this._BiotaFullName;
            }
            set {
                if ((this._BiotaFullName != value)) {
                    this._BiotaFullName = value;
                }
            }
        }
    }

    public partial class SpMaterialGetSiteVisitIDResult {

        private System.Nullable<int> _IntSiteVisitID;

        public SpMaterialGetSiteVisitIDResult() {
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }
    }

    public partial class SpMaterialIDGetResult {

        private System.Nullable<int> _IntMaterialIdentID;

        private System.Nullable<int> _IntMaterialID;

        private string _VchrTaxa;

        private string _VchrIDBy;

        private System.Nullable<System.DateTime> _DtIDDate;

        private System.Nullable<int> _IntIDRefID;

        private string _VchrIDMethod;

        private string _VchrIDAccuracy;

        private string _VchrNameQual;

        private string _TxtIDNotes;

        private string _VchrIDRefPage;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntBasedOnID;

        private string _VchrRefCode;

        private System.Nullable<int> _Changes;

        public SpMaterialIDGetResult() {
        }

        [Column(Name = "intMaterialIdentID", Storage = "_IntMaterialIdentID", DbType = "Int")]
        public System.Nullable<int> IntMaterialIdentID {
            get {
                return this._IntMaterialIdentID;
            }
            set {
                if ((this._IntMaterialIdentID != value)) {
                    this._IntMaterialIdentID = value;
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "vchrTaxa", Storage = "_VchrTaxa", DbType = "VarChar(255)")]
        public string VchrTaxa {
            get {
                return this._VchrTaxa;
            }
            set {
                if ((this._VchrTaxa != value)) {
                    this._VchrTaxa = value;
                }
            }
        }

        [Column(Name = "vchrIDBy", Storage = "_VchrIDBy", DbType = "VarChar(50)")]
        public string VchrIDBy {
            get {
                return this._VchrIDBy;
            }
            set {
                if ((this._VchrIDBy != value)) {
                    this._VchrIDBy = value;
                }
            }
        }

        [Column(Name = "dtIDDate", Storage = "_DtIDDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtIDDate {
            get {
                return this._DtIDDate;
            }
            set {
                if ((this._DtIDDate != value)) {
                    this._DtIDDate = value;
                }
            }
        }

        [Column(Name = "intIDRefID", Storage = "_IntIDRefID", DbType = "Int")]
        public System.Nullable<int> IntIDRefID {
            get {
                return this._IntIDRefID;
            }
            set {
                if ((this._IntIDRefID != value)) {
                    this._IntIDRefID = value;
                }
            }
        }

        [Column(Name = "vchrIDMethod", Storage = "_VchrIDMethod", DbType = "VarChar(255)")]
        public string VchrIDMethod {
            get {
                return this._VchrIDMethod;
            }
            set {
                if ((this._VchrIDMethod != value)) {
                    this._VchrIDMethod = value;
                }
            }
        }

        [Column(Name = "vchrIDAccuracy", Storage = "_VchrIDAccuracy", DbType = "VarChar(50)")]
        public string VchrIDAccuracy {
            get {
                return this._VchrIDAccuracy;
            }
            set {
                if ((this._VchrIDAccuracy != value)) {
                    this._VchrIDAccuracy = value;
                }
            }
        }

        [Column(Name = "vchrNameQual", Storage = "_VchrNameQual", DbType = "VarChar(255)")]
        public string VchrNameQual {
            get {
                return this._VchrNameQual;
            }
            set {
                if ((this._VchrNameQual != value)) {
                    this._VchrNameQual = value;
                }
            }
        }

        [Column(Name = "txtIDNotes", Storage = "_TxtIDNotes", DbType = "Text")]
        public string TxtIDNotes {
            get {
                return this._TxtIDNotes;
            }
            set {
                if ((this._TxtIDNotes != value)) {
                    this._TxtIDNotes = value;
                }
            }
        }

        [Column(Name = "vchrIDRefPage", Storage = "_VchrIDRefPage", DbType = "VarChar(100)")]
        public string VchrIDRefPage {
            get {
                return this._VchrIDRefPage;
            }
            set {
                if ((this._VchrIDRefPage != value)) {
                    this._VchrIDRefPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intBasedOnID", Storage = "_IntBasedOnID", DbType = "Int")]
        public System.Nullable<int> IntBasedOnID {
            get {
                return this._IntBasedOnID;
            }
            set {
                if ((this._IntBasedOnID != value)) {
                    this._IntBasedOnID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpMaterialIDInsertResult {

        private System.Nullable<decimal> _NewMaterialIdentID;

        public SpMaterialIDInsertResult() {
        }

        [Column(Storage = "_NewMaterialIdentID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewMaterialIdentID {
            get {
                return this._NewMaterialIdentID;
            }
            set {
                if ((this._NewMaterialIdentID != value)) {
                    this._NewMaterialIdentID = value;
                }
            }
        }
    }

    public partial class SpMaterialIDListForTaxonResult {

        private System.Nullable<int> _IntMaterialID;

        private System.Nullable<System.Guid> _MaterialGUID;

        public SpMaterialIDListForTaxonResult() {
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Storage = "_MaterialGUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> MaterialGUID {
            get {
                return this._MaterialGUID;
            }
            set {
                if ((this._MaterialGUID != value)) {
                    this._MaterialGUID = value;
                }
            }
        }
    }

    public partial class SpMaterialInsertResult {

        private System.Nullable<int> _NewMaterialID;

        public SpMaterialInsertResult() {
        }

        [Column(Storage = "_NewMaterialID", DbType = "Int")]
        public System.Nullable<int> NewMaterialID {
            get {
                return this._NewMaterialID;
            }
            set {
                if ((this._NewMaterialID != value)) {
                    this._NewMaterialID = value;
                }
            }
        }
    }

    public partial class SpMaterialInsertTemplateResult {

        private System.Nullable<int> _NewMaterialID;

        public SpMaterialInsertTemplateResult() {
        }

        [Column(Storage = "_NewMaterialID", DbType = "Int")]
        public System.Nullable<int> NewMaterialID {
            get {
                return this._NewMaterialID;
            }
            set {
                if ((this._NewMaterialID != value)) {
                    this._NewMaterialID = value;
                }
            }
        }
    }

    public partial class SpMaterialListResult {

        private System.Nullable<int> _ID;

        private string _DisplayText;

        private string _ElemType;

        public SpMaterialListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_DisplayText", DbType = "VarChar(255)")]
        public string DisplayText {
            get {
                return this._DisplayText;
            }
            set {
                if ((this._DisplayText != value)) {
                    this._DisplayText = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(8)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }
    }

    public partial class SpMaterialListTemplatesResult {

        private System.Nullable<int> _ElemID;

        private string _Name;

        private string _ElemType;

        public SpMaterialListTemplatesResult() {
        }

        [Column(Storage = "_ElemID", DbType = "Int")]
        public System.Nullable<int> ElemID {
            get {
                return this._ElemID;
            }
            set {
                if ((this._ElemID != value)) {
                    this._ElemID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(8)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }
    }

    public partial class SpMaterialLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpMaterialLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpMaterialPartGetResult {

        private System.Nullable<int> _IntMaterialPartID;

        private System.Nullable<int> _IntMaterialID;

        private string _VchrPartName;

        private string _VchrSampleType;

        private System.Nullable<int> _IntNoSpecimens;

        private string _VchrNoSpecimensQual;

        private string _VchrLifestage;

        private string _VchrGender;

        private string _VchrRegNo;

        private string _VchrCondition;

        private string _VchrStorageSite;

        private string _VchrStorageMethod;

        private string _VchrCurationStatus;

        private string _VchrNoOfUnits;

        private string _TxtNotes;

        private System.Nullable<byte> _TintOnLoan;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntBasedOnID;

        private System.Nullable<int> _Changes;

        public SpMaterialPartGetResult() {
        }

        [Column(Name = "intMaterialPartID", Storage = "_IntMaterialPartID", DbType = "Int")]
        public System.Nullable<int> IntMaterialPartID {
            get {
                return this._IntMaterialPartID;
            }
            set {
                if ((this._IntMaterialPartID != value)) {
                    this._IntMaterialPartID = value;
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "vchrPartName", Storage = "_VchrPartName", DbType = "VarChar(255)")]
        public string VchrPartName {
            get {
                return this._VchrPartName;
            }
            set {
                if ((this._VchrPartName != value)) {
                    this._VchrPartName = value;
                }
            }
        }

        [Column(Name = "vchrSampleType", Storage = "_VchrSampleType", DbType = "VarChar(50)")]
        public string VchrSampleType {
            get {
                return this._VchrSampleType;
            }
            set {
                if ((this._VchrSampleType != value)) {
                    this._VchrSampleType = value;
                }
            }
        }

        [Column(Name = "intNoSpecimens", Storage = "_IntNoSpecimens", DbType = "Int")]
        public System.Nullable<int> IntNoSpecimens {
            get {
                return this._IntNoSpecimens;
            }
            set {
                if ((this._IntNoSpecimens != value)) {
                    this._IntNoSpecimens = value;
                }
            }
        }

        [Column(Name = "vchrNoSpecimensQual", Storage = "_VchrNoSpecimensQual", DbType = "VarChar(50)")]
        public string VchrNoSpecimensQual {
            get {
                return this._VchrNoSpecimensQual;
            }
            set {
                if ((this._VchrNoSpecimensQual != value)) {
                    this._VchrNoSpecimensQual = value;
                }
            }
        }

        [Column(Name = "vchrLifestage", Storage = "_VchrLifestage", DbType = "VarChar(50)")]
        public string VchrLifestage {
            get {
                return this._VchrLifestage;
            }
            set {
                if ((this._VchrLifestage != value)) {
                    this._VchrLifestage = value;
                }
            }
        }

        [Column(Name = "vchrGender", Storage = "_VchrGender", DbType = "VarChar(50)")]
        public string VchrGender {
            get {
                return this._VchrGender;
            }
            set {
                if ((this._VchrGender != value)) {
                    this._VchrGender = value;
                }
            }
        }

        [Column(Name = "vchrRegNo", Storage = "_VchrRegNo", DbType = "VarChar(50)")]
        public string VchrRegNo {
            get {
                return this._VchrRegNo;
            }
            set {
                if ((this._VchrRegNo != value)) {
                    this._VchrRegNo = value;
                }
            }
        }

        [Column(Name = "vchrCondition", Storage = "_VchrCondition", DbType = "VarChar(100)")]
        public string VchrCondition {
            get {
                return this._VchrCondition;
            }
            set {
                if ((this._VchrCondition != value)) {
                    this._VchrCondition = value;
                }
            }
        }

        [Column(Name = "vchrStorageSite", Storage = "_VchrStorageSite", DbType = "VarChar(100)")]
        public string VchrStorageSite {
            get {
                return this._VchrStorageSite;
            }
            set {
                if ((this._VchrStorageSite != value)) {
                    this._VchrStorageSite = value;
                }
            }
        }

        [Column(Name = "vchrStorageMethod", Storage = "_VchrStorageMethod", DbType = "VarChar(100)")]
        public string VchrStorageMethod {
            get {
                return this._VchrStorageMethod;
            }
            set {
                if ((this._VchrStorageMethod != value)) {
                    this._VchrStorageMethod = value;
                }
            }
        }

        [Column(Name = "vchrCurationStatus", Storage = "_VchrCurationStatus", DbType = "VarChar(100)")]
        public string VchrCurationStatus {
            get {
                return this._VchrCurationStatus;
            }
            set {
                if ((this._VchrCurationStatus != value)) {
                    this._VchrCurationStatus = value;
                }
            }
        }

        [Column(Name = "vchrNoOfUnits", Storage = "_VchrNoOfUnits", DbType = "VarChar(100)")]
        public string VchrNoOfUnits {
            get {
                return this._VchrNoOfUnits;
            }
            set {
                if ((this._VchrNoOfUnits != value)) {
                    this._VchrNoOfUnits = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Name = "tintOnLoan", Storage = "_TintOnLoan", DbType = "TinyInt")]
        public System.Nullable<byte> TintOnLoan {
            get {
                return this._TintOnLoan;
            }
            set {
                if ((this._TintOnLoan != value)) {
                    this._TintOnLoan = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intBasedOnID", Storage = "_IntBasedOnID", DbType = "Int")]
        public System.Nullable<int> IntBasedOnID {
            get {
                return this._IntBasedOnID;
            }
            set {
                if ((this._IntBasedOnID != value)) {
                    this._IntBasedOnID = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpMaterialPartInsertResult {

        private System.Nullable<decimal> _NewMaterialPartID;

        public SpMaterialPartInsertResult() {
        }

        [Column(Storage = "_NewMaterialPartID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewMaterialPartID {
            get {
                return this._NewMaterialPartID;
            }
            set {
                if ((this._NewMaterialPartID != value)) {
                    this._NewMaterialPartID = value;
                }
            }
        }
    }

    public partial class SpMaterialPartInsertRDEResult {

        private System.Nullable<decimal> _NewPartID;

        public SpMaterialPartInsertRDEResult() {
        }

        [Column(Storage = "_NewPartID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewPartID {
            get {
                return this._NewPartID;
            }
            set {
                if ((this._NewPartID != value)) {
                    this._NewPartID = value;
                }
            }
        }
    }

    public partial class SpMorphologyBiotaListFromFavoriteResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private string _Display;

        private System.Nullable<int> _Order;

        public SpMorphologyBiotaListFromFavoriteResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(1)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(255)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }
    }

    public partial class SpMorphologyCellIDGetResult {

        private System.Nullable<int> _CellID;

        public SpMorphologyCellIDGetResult() {
        }

        [Column(Storage = "_CellID", DbType = "Int")]
        public System.Nullable<int> CellID {
            get {
                return this._CellID;
            }
            set {
                if ((this._CellID != value)) {
                    this._CellID = value;
                }
            }
        }
    }

    public partial class SpMorphologyCellListForInheritanceResult {

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntMorphologyViewID;

        private System.Nullable<int> _IntMorphologyEntityID;

        private string _TxtValue;

        private System.Nullable<int> _IntFlags;

        public SpMorphologyCellListForInheritanceResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_IntMorphologyEntityID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyEntityID {
            get {
                return this._IntMorphologyEntityID;
            }
            set {
                if ((this._IntMorphologyEntityID != value)) {
                    this._IntMorphologyEntityID = value;
                }
            }
        }

        [Column(Name = "txtValue", Storage = "_TxtValue", DbType = "Text")]
        public string TxtValue {
            get {
                return this._TxtValue;
            }
            set {
                if ((this._TxtValue != value)) {
                    this._TxtValue = value;
                }
            }
        }

        [Column(Name = "intFlags", Storage = "_IntFlags", DbType = "Int")]
        public System.Nullable<int> IntFlags {
            get {
                return this._IntFlags;
            }
            set {
                if ((this._IntFlags != value)) {
                    this._IntFlags = value;
                }
            }
        }
    }

    public partial class SpMorphologyCharListFromCharResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private System.Nullable<int> _ParentID;

        private System.Nullable<int> _ParentType;

        private string _Display;

        private System.Nullable<int> _SourceID;

        private System.Nullable<int> _Order;

        public SpMorphologyCharListFromCharResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(1)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ParentType", DbType = "Int")]
        public System.Nullable<int> ParentType {
            get {
                return this._ParentType;
            }
            set {
                if ((this._ParentType != value)) {
                    this._ParentType = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(2000)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this._SourceID = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }
    }

    public partial class SpMorphologyCharListFromFavoriteResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private string _Display;

        private System.Nullable<int> _Order;

        public SpMorphologyCharListFromFavoriteResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(255)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(2000)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }
    }

    public partial class SpMorphologyCharListFromGroupResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private System.Nullable<int> _ParentID;

        private string _ParentType;

        private string _Display;

        private System.Nullable<int> _SourceID;

        private System.Nullable<int> _Order;

        public SpMorphologyCharListFromGroupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(2)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ParentType", DbType = "VarChar(2)")]
        public string ParentType {
            get {
                return this._ParentType;
            }
            set {
                if ((this._ParentType != value)) {
                    this._ParentType = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(2000)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this._SourceID = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }
    }

    public partial class SpMorphologyImportMapCharacterResult {

        private System.Nullable<int> _ItemID;

        private string _ItemDisplay;

        public SpMorphologyImportMapCharacterResult() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemDisplay", DbType = "VarChar(255)")]
        public string ItemDisplay {
            get {
                return this._ItemDisplay;
            }
            set {
                if ((this._ItemDisplay != value)) {
                    this._ItemDisplay = value;
                }
            }
        }
    }

    public partial class SpMorphologyImportMapCharacterStateResult {

        private System.Nullable<int> _ItemID;

        private string _ItemDisplay;

        public SpMorphologyImportMapCharacterStateResult() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemDisplay", DbType = "VarChar(255)")]
        public string ItemDisplay {
            get {
                return this._ItemDisplay;
            }
            set {
                if ((this._ItemDisplay != value)) {
                    this._ItemDisplay = value;
                }
            }
        }
    }

    public partial class SpMorphologyImportMapTaxonResult {

        private System.Nullable<int> _ItemID;

        private string _ItemDisplay;

        public SpMorphologyImportMapTaxonResult() {
        }

        [Column(Storage = "_ItemID", DbType = "Int")]
        public System.Nullable<int> ItemID {
            get {
                return this._ItemID;
            }
            set {
                if ((this._ItemID != value)) {
                    this._ItemID = value;
                }
            }
        }

        [Column(Storage = "_ItemDisplay", DbType = "VarChar(255)")]
        public string ItemDisplay {
            get {
                return this._ItemDisplay;
            }
            set {
                if ((this._ItemDisplay != value)) {
                    this._ItemDisplay = value;
                }
            }
        }
    }

    public partial class SpMorphologyMaterialFromBaseResult {

        private System.Nullable<int> _EntityID;

        private System.Nullable<int> _SourceID;

        private string _Parentage;

        private string _Name;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<int> _EntityType;

        public SpMorphologyMaterialFromBaseResult() {
        }

        [Column(Storage = "_EntityID", DbType = "Int")]
        public System.Nullable<int> EntityID {
            get {
                return this._EntityID;
            }
            set {
                if ((this._EntityID != value)) {
                    this._EntityID = value;
                }
            }
        }

        [Column(Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this._SourceID = value;
                }
            }
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(276)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Storage = "_EntityType", DbType = "Int")]
        public System.Nullable<int> EntityType {
            get {
                return this._EntityType;
            }
            set {
                if ((this._EntityType != value)) {
                    this._EntityType = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectCharacterAliasListResult {

        private string _Type;

        private System.Nullable<int> _ID;

        private System.Nullable<int> _IntMorphologyViewID;

        private string _Alias;

        private System.Nullable<int> _CharSourceID;

        public SpMorphologyProjectCharacterAliasListResult() {
        }

        [Column(Storage = "_Type", DbType = "VarChar(1)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Storage = "_Alias", DbType = "VarChar(1000)")]
        public string Alias {
            get {
                return this._Alias;
            }
            set {
                if ((this._Alias != value)) {
                    this._Alias = value;
                }
            }
        }

        [Column(Storage = "_CharSourceID", DbType = "Int")]
        public System.Nullable<int> CharSourceID {
            get {
                return this._CharSourceID;
            }
            set {
                if ((this._CharSourceID != value)) {
                    this._CharSourceID = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectCharacterListResult1 {

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private System.Nullable<int> _IntOrder;

        private string _VchrType;

        private System.Nullable<byte> _TintReliability;

        private string _VchrDescription;

        private System.Nullable<bool> _BitMandatory;

        private System.Nullable<int> _IntOriginalDeltaNumber;

        private System.Nullable<bool> _BitHidden;

        public SpMorphologyProjectCharacterListResult1() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(10)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "tintReliability", Storage = "_TintReliability", DbType = "TinyInt")]
        public System.Nullable<byte> TintReliability {
            get {
                return this._TintReliability;
            }
            set {
                if ((this._TintReliability != value)) {
                    this._TintReliability = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "bitMandatory", Storage = "_BitMandatory", DbType = "Bit")]
        public System.Nullable<bool> BitMandatory {
            get {
                return this._BitMandatory;
            }
            set {
                if ((this._BitMandatory != value)) {
                    this._BitMandatory = value;
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_IntOriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> IntOriginalDeltaNumber {
            get {
                return this._IntOriginalDeltaNumber;
            }
            set {
                if ((this._IntOriginalDeltaNumber != value)) {
                    this._IntOriginalDeltaNumber = value;
                }
            }
        }

        [Column(Name = "bitHidden", Storage = "_BitHidden", DbType = "Bit")]
        public System.Nullable<bool> BitHidden {
            get {
                return this._BitHidden;
            }
            set {
                if ((this._BitHidden != value)) {
                    this._BitHidden = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectCharacterListResult2 {

        private System.Nullable<int> _IntCharacterID;

        private string _VchrName;

        private string _VchrType;

        private System.Nullable<byte> _TintReliability;

        private string _VchrDescription;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<int> _BitHidden;

        private System.Nullable<int> _BitMandatory;

        public SpMorphologyProjectCharacterListResult2() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(10)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "tintReliability", Storage = "_TintReliability", DbType = "TinyInt")]
        public System.Nullable<byte> TintReliability {
            get {
                return this._TintReliability;
            }
            set {
                if ((this._TintReliability != value)) {
                    this._TintReliability = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitHidden", Storage = "_BitHidden", DbType = "Int")]
        public System.Nullable<int> BitHidden {
            get {
                return this._BitHidden;
            }
            set {
                if ((this._BitHidden != value)) {
                    this._BitHidden = value;
                }
            }
        }

        [Column(Name = "bitMandatory", Storage = "_BitMandatory", DbType = "Int")]
        public System.Nullable<int> BitMandatory {
            get {
                return this._BitMandatory;
            }
            set {
                if ((this._BitMandatory != value)) {
                    this._BitMandatory = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectCharacterNumericListResult {

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntCharacterNumericID;

        private string _VchrName;

        private System.Nullable<byte> _TintType;

        private System.Nullable<float> _NumMaximum;

        private System.Nullable<float> _NumMinimum;

        private string _VchrUnits;

        private System.Nullable<int> _IntOrder;

        private string _VchrDescription;

        public SpMorphologyProjectCharacterNumericListResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intCharacterNumericID", Storage = "_IntCharacterNumericID", DbType = "Int")]
        public System.Nullable<int> IntCharacterNumericID {
            get {
                return this._IntCharacterNumericID;
            }
            set {
                if ((this._IntCharacterNumericID != value)) {
                    this._IntCharacterNumericID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "tintType", Storage = "_TintType", DbType = "TinyInt")]
        public System.Nullable<byte> TintType {
            get {
                return this._TintType;
            }
            set {
                if ((this._TintType != value)) {
                    this._TintType = value;
                }
            }
        }

        [Column(Name = "numMaximum", Storage = "_NumMaximum", DbType = "Real")]
        public System.Nullable<float> NumMaximum {
            get {
                return this._NumMaximum;
            }
            set {
                if ((this._NumMaximum != value)) {
                    this._NumMaximum = value;
                }
            }
        }

        [Column(Name = "numMinimum", Storage = "_NumMinimum", DbType = "Real")]
        public System.Nullable<float> NumMinimum {
            get {
                return this._NumMinimum;
            }
            set {
                if ((this._NumMinimum != value)) {
                    this._NumMinimum = value;
                }
            }
        }

        [Column(Name = "vchrUnits", Storage = "_VchrUnits", DbType = "VarChar(255)")]
        public string VchrUnits {
            get {
                return this._VchrUnits;
            }
            set {
                if ((this._VchrUnits != value)) {
                    this._VchrUnits = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(2000)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectCharacterStateListResult1 {

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntCharacterStateID;

        private string _VchrName;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<int> _IntOriginalDeltaNumber;

        private System.Nullable<bool> _BitDefault;

        public SpMorphologyProjectCharacterStateListResult1() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "intOriginalDeltaNumber", Storage = "_IntOriginalDeltaNumber", DbType = "Int")]
        public System.Nullable<int> IntOriginalDeltaNumber {
            get {
                return this._IntOriginalDeltaNumber;
            }
            set {
                if ((this._IntOriginalDeltaNumber != value)) {
                    this._IntOriginalDeltaNumber = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectCharacterStateListResult2 {

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntCharacterStateID;

        private string _VchrName;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitDefault;

        public SpMorphologyProjectCharacterStateListResult2() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(2000)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitDefault", Storage = "_BitDefault", DbType = "Bit")]
        public System.Nullable<bool> BitDefault {
            get {
                return this._BitDefault;
            }
            set {
                if ((this._BitDefault != value)) {
                    this._BitDefault = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectDependancyListResult {

        private System.Nullable<int> _IntCharacterDependancyID;

        private System.Nullable<int> _ControllingStateID;

        private System.Nullable<int> _ControllingCharID;

        private System.Nullable<int> _ControlledCharID;

        private string _TxtNotes;

        public SpMorphologyProjectDependancyListResult() {
        }

        [Column(Name = "intCharacterDependancyID", Storage = "_IntCharacterDependancyID", DbType = "Int")]
        public System.Nullable<int> IntCharacterDependancyID {
            get {
                return this._IntCharacterDependancyID;
            }
            set {
                if ((this._IntCharacterDependancyID != value)) {
                    this._IntCharacterDependancyID = value;
                }
            }
        }

        [Column(Storage = "_ControllingStateID", DbType = "Int")]
        public System.Nullable<int> ControllingStateID {
            get {
                return this._ControllingStateID;
            }
            set {
                if ((this._ControllingStateID != value)) {
                    this._ControllingStateID = value;
                }
            }
        }

        [Column(Storage = "_ControllingCharID", DbType = "Int")]
        public System.Nullable<int> ControllingCharID {
            get {
                return this._ControllingCharID;
            }
            set {
                if ((this._ControllingCharID != value)) {
                    this._ControllingCharID = value;
                }
            }
        }

        [Column(Storage = "_ControlledCharID", DbType = "Int")]
        public System.Nullable<int> ControlledCharID {
            get {
                return this._ControlledCharID;
            }
            set {
                if ((this._ControlledCharID != value)) {
                    this._ControlledCharID = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectEntityListResult {

        private System.Nullable<int> _EntityID;

        private System.Nullable<int> _SourceID;

        private string _Parentage;

        private string _Name;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitHidden;

        private System.Nullable<byte> _EntityType;

        public SpMorphologyProjectEntityListResult() {
        }

        [Column(Storage = "_EntityID", DbType = "Int")]
        public System.Nullable<int> EntityID {
            get {
                return this._EntityID;
            }
            set {
                if ((this._EntityID != value)) {
                    this._EntityID = value;
                }
            }
        }

        [Column(Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this._SourceID = value;
                }
            }
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(276)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitHidden", Storage = "_BitHidden", DbType = "Bit")]
        public System.Nullable<bool> BitHidden {
            get {
                return this._BitHidden;
            }
            set {
                if ((this._BitHidden != value)) {
                    this._BitHidden = value;
                }
            }
        }

        [Column(Storage = "_EntityType", DbType = "TinyInt")]
        public System.Nullable<byte> EntityType {
            get {
                return this._EntityType;
            }
            set {
                if ((this._EntityType != value)) {
                    this._EntityType = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectGetResult {

        private System.Nullable<int> _IntMorphologyProjectID;

        private string _VchrName;

        private string _TxtDescription;

        private System.Nullable<int> _IntMorphologyProjectGroupID;

        private System.Nullable<bool> _BitCreatedByImport;

        private System.Nullable<short> _SintImportSourceType;

        private string _VchrDatetimeImported;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _ChrProjectType;

        public SpMorphologyProjectGetResult() {
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "txtDescription", Storage = "_TxtDescription", DbType = "Text")]
        public string TxtDescription {
            get {
                return this._TxtDescription;
            }
            set {
                if ((this._TxtDescription != value)) {
                    this._TxtDescription = value;
                }
            }
        }

        [Column(Name = "intMorphologyProjectGroupID", Storage = "_IntMorphologyProjectGroupID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectGroupID {
            get {
                return this._IntMorphologyProjectGroupID;
            }
            set {
                if ((this._IntMorphologyProjectGroupID != value)) {
                    this._IntMorphologyProjectGroupID = value;
                }
            }
        }

        [Column(Name = "bitCreatedByImport", Storage = "_BitCreatedByImport", DbType = "Bit")]
        public System.Nullable<bool> BitCreatedByImport {
            get {
                return this._BitCreatedByImport;
            }
            set {
                if ((this._BitCreatedByImport != value)) {
                    this._BitCreatedByImport = value;
                }
            }
        }

        [Column(Name = "sintImportSourceType", Storage = "_SintImportSourceType", DbType = "SmallInt")]
        public System.Nullable<short> SintImportSourceType {
            get {
                return this._SintImportSourceType;
            }
            set {
                if ((this._SintImportSourceType != value)) {
                    this._SintImportSourceType = value;
                }
            }
        }

        [Column(Name = "vchrDatetimeImported", Storage = "_VchrDatetimeImported", DbType = "VarChar(50)")]
        public string VchrDatetimeImported {
            get {
                return this._VchrDatetimeImported;
            }
            set {
                if ((this._VchrDatetimeImported != value)) {
                    this._VchrDatetimeImported = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "chrProjectType", Storage = "_ChrProjectType", DbType = "Char(1)")]
        public string ChrProjectType {
            get {
                return this._ChrProjectType;
            }
            set {
                if ((this._ChrProjectType != value)) {
                    this._ChrProjectType = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectGroupListResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private System.Nullable<int> _ParentID;

        private string _Display;

        private System.Nullable<int> _SourceID;

        private System.Nullable<int> _Order;

        private System.Nullable<int> _ReturnOrder;

        public SpMorphologyProjectGroupListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "Char(2)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(2000)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this._SourceID = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }

        [Column(Storage = "_ReturnOrder", DbType = "Int")]
        public System.Nullable<int> ReturnOrder {
            get {
                return this._ReturnOrder;
            }
            set {
                if ((this._ReturnOrder != value)) {
                    this._ReturnOrder = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectLookupResult {

        private System.Nullable<int> _IntMorphologyProjectID;

        private string _ProjectName;

        public SpMorphologyProjectLookupResult() {
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Name = "Project Name", Storage = "_ProjectName", DbType = "VarChar(255)")]
        public string ProjectName {
            get {
                return this._ProjectName;
            }
            set {
                if ((this._ProjectName != value)) {
                    this._ProjectName = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectMiscItemListResult {

        private System.Nullable<int> _IntMorphologyProjectMiscItemID;

        private System.Nullable<int> _IntMorphologyProjectID;

        private string _VchrCategory;

        private string _VchrValue;

        private System.Nullable<int> _IntOrder;

        public SpMorphologyProjectMiscItemListResult() {
        }

        [Column(Name = "intMorphologyProjectMiscItemID", Storage = "_IntMorphologyProjectMiscItemID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectMiscItemID {
            get {
                return this._IntMorphologyProjectMiscItemID;
            }
            set {
                if ((this._IntMorphologyProjectMiscItemID != value)) {
                    this._IntMorphologyProjectMiscItemID = value;
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Name = "vchrCategory", Storage = "_VchrCategory", DbType = "VarChar(255)")]
        public string VchrCategory {
            get {
                return this._VchrCategory;
            }
            set {
                if ((this._VchrCategory != value)) {
                    this._VchrCategory = value;
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_VchrValue", DbType = "VarChar(2000)")]
        public string VchrValue {
            get {
                return this._VchrValue;
            }
            set {
                if ((this._VchrValue != value)) {
                    this._VchrValue = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectsListResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private System.Nullable<int> _ParentID;

        private string _ParentType;

        private string _Display;

        private System.Nullable<int> _Order;

        public SpMorphologyProjectsListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(2)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ParentType", DbType = "VarChar(2)")]
        public string ParentType {
            get {
                return this._ParentType;
            }
            set {
                if ((this._ParentType != value)) {
                    this._ParentType = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(255)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }
    }

    public partial class SpMorphologyProjectViewListResult {

        private System.Nullable<int> _IntMorphologyViewID;

        private string _VchrName;

        public SpMorphologyProjectViewListResult() {
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }
    }

    public partial class SpMorphologyTaxonFromBaseResult {

        private System.Nullable<int> _EntityID;

        private System.Nullable<int> _SourceID;

        private string _Parentage;

        private string _Name;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<int> _EntityType;

        public SpMorphologyTaxonFromBaseResult() {
        }

        [Column(Storage = "_EntityID", DbType = "Int")]
        public System.Nullable<int> EntityID {
            get {
                return this._EntityID;
            }
            set {
                if ((this._EntityID != value)) {
                    this._EntityID = value;
                }
            }
        }

        [Column(Storage = "_SourceID", DbType = "Int")]
        public System.Nullable<int> SourceID {
            get {
                return this._SourceID;
            }
            set {
                if ((this._SourceID != value)) {
                    this._SourceID = value;
                }
            }
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Storage = "_EntityType", DbType = "Int")]
        public System.Nullable<int> EntityType {
            get {
                return this._EntityType;
            }
            set {
                if ((this._EntityType != value)) {
                    this._EntityType = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewAliasInsertResult {

        private System.Nullable<decimal> _NewViewAliasID;

        public SpMorphologyViewAliasInsertResult() {
        }

        [Column(Storage = "_NewViewAliasID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewViewAliasID {
            get {
                return this._NewViewAliasID;
            }
            set {
                if ((this._NewViewAliasID != value)) {
                    this._NewViewAliasID = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewAliasListResult {

        private System.Nullable<int> _IntMorphologyViewID;

        private string _ViewName;

        private System.Nullable<int> _IntMorphologyViewAliasID;

        private string _VchrAlias;

        private System.Nullable<int> _Changes;

        public SpMorphologyViewAliasListResult() {
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Storage = "_ViewName", DbType = "VarChar(255)")]
        public string ViewName {
            get {
                return this._ViewName;
            }
            set {
                if ((this._ViewName != value)) {
                    this._ViewName = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewAliasID", Storage = "_IntMorphologyViewAliasID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewAliasID {
            get {
                return this._IntMorphologyViewAliasID;
            }
            set {
                if ((this._IntMorphologyViewAliasID != value)) {
                    this._IntMorphologyViewAliasID = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(1000)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewAlreadyExistsResult {

        private System.Nullable<int> _IntMorphologyViewID;

        public SpMorphologyViewAlreadyExistsResult() {
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewGetResult {

        private System.Nullable<int> _IntMorphologyViewID;

        private System.Nullable<int> _IntMorphologyViewGroupID;

        private string _VchrName;

        private string _VchrType;

        private System.Nullable<int> _IntImportedWithProjectID;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<bool> _BitDefaultView;

        public SpMorphologyViewGetResult() {
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewGroupID", Storage = "_IntMorphologyViewGroupID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewGroupID {
            get {
                return this._IntMorphologyViewGroupID;
            }
            set {
                if ((this._IntMorphologyViewGroupID != value)) {
                    this._IntMorphologyViewGroupID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(10)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "bitDefaultView", Storage = "_BitDefaultView", DbType = "Bit")]
        public System.Nullable<bool> BitDefaultView {
            get {
                return this._BitDefaultView;
            }
            set {
                if ((this._BitDefaultView != value)) {
                    this._BitDefaultView = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewGetDefaultResult {

        private System.Nullable<int> _IntMorphologyViewID;

        private System.Nullable<int> _IntMorphologyViewGroupID;

        private string _VchrName;

        private string _VchrType;

        private System.Nullable<int> _IntImportedWithProjectID;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<bool> _BitDefaultView;

        public SpMorphologyViewGetDefaultResult() {
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewGroupID", Storage = "_IntMorphologyViewGroupID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewGroupID {
            get {
                return this._IntMorphologyViewGroupID;
            }
            set {
                if ((this._IntMorphologyViewGroupID != value)) {
                    this._IntMorphologyViewGroupID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(10)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "intImportedWithProjectID", Storage = "_IntImportedWithProjectID", DbType = "Int")]
        public System.Nullable<int> IntImportedWithProjectID {
            get {
                return this._IntImportedWithProjectID;
            }
            set {
                if ((this._IntImportedWithProjectID != value)) {
                    this._IntImportedWithProjectID = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "bitDefaultView", Storage = "_BitDefaultView", DbType = "Bit")]
        public System.Nullable<bool> BitDefaultView {
            get {
                return this._BitDefaultView;
            }
            set {
                if ((this._BitDefaultView != value)) {
                    this._BitDefaultView = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewLookupResult {

        private System.Nullable<int> _IntMorphologyViewID;

        private string _ViewName;

        public SpMorphologyViewLookupResult() {
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "View Name", Storage = "_ViewName", DbType = "VarChar(255)")]
        public string ViewName {
            get {
                return this._ViewName;
            }
            set {
                if ((this._ViewName != value)) {
                    this._ViewName = value;
                }
            }
        }
    }

    public partial class SpMorphologyViewsListResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private System.Nullable<int> _ParentID;

        private string _ParentType;

        private string _Display;

        private System.Nullable<int> _Order;

        public SpMorphologyViewsListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(2)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ParentType", DbType = "VarChar(2)")]
        public string ParentType {
            get {
                return this._ParentType;
            }
            set {
                if ((this._ParentType != value)) {
                    this._ParentType = value;
                }
            }
        }

        [Column(Storage = "_Display", DbType = "VarChar(255)")]
        public string Display {
            get {
                return this._Display;
            }
            set {
                if ((this._Display != value)) {
                    this._Display = value;
                }
            }
        }

        [Column(Storage = "_Order", DbType = "Int")]
        public System.Nullable<int> Order {
            get {
                return this._Order;
            }
            set {
                if ((this._Order != value)) {
                    this._Order = value;
                }
            }
        }
    }

    public partial class SpMultimediaArtistLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpMultimediaArtistLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpMultimediaExtensionsResult {

        private string _VchrFileExtension;

        public SpMultimediaExtensionsResult() {
        }

        [Column(Name = "vchrFileExtension", Storage = "_VchrFileExtension", DbType = "VarChar(20)")]
        public string VchrFileExtension {
            get {
                return this._VchrFileExtension;
            }
            set {
                if ((this._VchrFileExtension != value)) {
                    this._VchrFileExtension = value;
                }
            }
        }
    }

    public partial class SpMultimediaFindResult {

        private System.Nullable<int> _MultimediaID;

        private string _MultimediaLinkID;

        private string _MultimediaType;

        private string _Name;

        private string _Caption;

        private string _FileExtension;

        private System.Nullable<int> _SizeInBytes;

        private System.Nullable<int> _Changes;

        private System.Nullable<int> _BlobChanges;

        private string _TempFilename;

        public SpMultimediaFindResult() {
        }

        [Column(Storage = "_MultimediaID", DbType = "Int")]
        public System.Nullable<int> MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this._MultimediaID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaLinkID", DbType = "VarChar(2)")]
        public string MultimediaLinkID {
            get {
                return this._MultimediaLinkID;
            }
            set {
                if ((this._MultimediaLinkID != value)) {
                    this._MultimediaLinkID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaType", DbType = "VarChar(1)")]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this._MultimediaType = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Caption", DbType = "VarChar(1)")]
        public string Caption {
            get {
                return this._Caption;
            }
            set {
                if ((this._Caption != value)) {
                    this._Caption = value;
                }
            }
        }

        [Column(Storage = "_FileExtension", DbType = "VarChar(20)")]
        public string FileExtension {
            get {
                return this._FileExtension;
            }
            set {
                if ((this._FileExtension != value)) {
                    this._FileExtension = value;
                }
            }
        }

        [Column(Storage = "_SizeInBytes", DbType = "Int")]
        public System.Nullable<int> SizeInBytes {
            get {
                return this._SizeInBytes;
            }
            set {
                if ((this._SizeInBytes != value)) {
                    this._SizeInBytes = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_BlobChanges", DbType = "Int")]
        public System.Nullable<int> BlobChanges {
            get {
                return this._BlobChanges;
            }
            set {
                if ((this._BlobChanges != value)) {
                    this._BlobChanges = value;
                }
            }
        }

        [Column(Storage = "_TempFilename", DbType = "VarChar(1)")]
        public string TempFilename {
            get {
                return this._TempFilename;
            }
            set {
                if ((this._TempFilename != value)) {
                    this._TempFilename = value;
                }
            }
        }
    }

    public partial class SpMultimediaFindByNameResult {

        private System.Nullable<int> _MultimediaID;

        private string _Name;

        private string _Extension;

        public SpMultimediaFindByNameResult() {
        }

        [Column(Storage = "_MultimediaID", DbType = "Int")]
        public System.Nullable<int> MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this._MultimediaID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Extension", DbType = "VarChar(20)")]
        public string Extension {
            get {
                return this._Extension;
            }
            set {
                if ((this._Extension != value)) {
                    this._Extension = value;
                }
            }
        }
    }

    public partial class SpMultimediaGetResult {

        private System.Nullable<int> _IntMultimediaID;

        private string _Vchrname;

        private string _VchrNumber;

        private string _VchrArtist;

        private string _VchrDateRecorded;

        private string _VchrOwner;

        private string _TxtCopyright;

        private System.Nullable<System.DateTime> _DtdateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrFileExtension;

        private System.Nullable<System.Guid> _GUID;

        public SpMultimediaGetResult() {
        }

        [Column(Name = "intMultimediaID", Storage = "_IntMultimediaID", DbType = "Int")]
        public System.Nullable<int> IntMultimediaID {
            get {
                return this._IntMultimediaID;
            }
            set {
                if ((this._IntMultimediaID != value)) {
                    this._IntMultimediaID = value;
                }
            }
        }

        [Column(Name = "vchrname", Storage = "_Vchrname", DbType = "VarChar(255)")]
        public string Vchrname {
            get {
                return this._Vchrname;
            }
            set {
                if ((this._Vchrname != value)) {
                    this._Vchrname = value;
                }
            }
        }

        [Column(Name = "vchrNumber", Storage = "_VchrNumber", DbType = "VarChar(255)")]
        public string VchrNumber {
            get {
                return this._VchrNumber;
            }
            set {
                if ((this._VchrNumber != value)) {
                    this._VchrNumber = value;
                }
            }
        }

        [Column(Name = "vchrArtist", Storage = "_VchrArtist", DbType = "VarChar(255)")]
        public string VchrArtist {
            get {
                return this._VchrArtist;
            }
            set {
                if ((this._VchrArtist != value)) {
                    this._VchrArtist = value;
                }
            }
        }

        [Column(Name = "vchrDateRecorded", Storage = "_VchrDateRecorded", DbType = "VarChar(50)")]
        public string VchrDateRecorded {
            get {
                return this._VchrDateRecorded;
            }
            set {
                if ((this._VchrDateRecorded != value)) {
                    this._VchrDateRecorded = value;
                }
            }
        }

        [Column(Name = "vchrOwner", Storage = "_VchrOwner", DbType = "VarChar(255)")]
        public string VchrOwner {
            get {
                return this._VchrOwner;
            }
            set {
                if ((this._VchrOwner != value)) {
                    this._VchrOwner = value;
                }
            }
        }

        [Column(Name = "txtCopyright", Storage = "_TxtCopyright", DbType = "Text")]
        public string TxtCopyright {
            get {
                return this._TxtCopyright;
            }
            set {
                if ((this._TxtCopyright != value)) {
                    this._TxtCopyright = value;
                }
            }
        }

        [Column(Name = "dtdateCreated", Storage = "_DtdateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtdateCreated {
            get {
                return this._DtdateCreated;
            }
            set {
                if ((this._DtdateCreated != value)) {
                    this._DtdateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrFileExtension", Storage = "_VchrFileExtension", DbType = "VarChar(20)")]
        public string VchrFileExtension {
            get {
                return this._VchrFileExtension;
            }
            set {
                if ((this._VchrFileExtension != value)) {
                    this._VchrFileExtension = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpMultimediaGetOneResult {

        private System.Data.Linq.Binary _ImgMultimedia;

        public SpMultimediaGetOneResult() {
        }

        [Column(Name = "imgMultimedia", Storage = "_ImgMultimedia", DbType = "Image", CanBeNull = true)]
        public System.Data.Linq.Binary ImgMultimedia {
            get {
                return this._ImgMultimedia;
            }
            set {
                if ((this._ImgMultimedia != value)) {
                    this._ImgMultimedia = value;
                }
            }
        }
    }

    public partial class SpMultimediaInsertResult {

        private System.Nullable<decimal> _NewMultimediaID;

        public SpMultimediaInsertResult() {
        }

        [Column(Storage = "_NewMultimediaID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewMultimediaID {
            get {
                return this._NewMultimediaID;
            }
            set {
                if ((this._NewMultimediaID != value)) {
                    this._NewMultimediaID = value;
                }
            }
        }
    }

    public partial class SpMultimediaLinkInsertResult {

        private System.Nullable<decimal> _NewMultimediaLinkID;

        public SpMultimediaLinkInsertResult() {
        }

        [Column(Storage = "_NewMultimediaLinkID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewMultimediaLinkID {
            get {
                return this._NewMultimediaLinkID;
            }
            set {
                if ((this._NewMultimediaLinkID != value)) {
                    this._NewMultimediaLinkID = value;
                }
            }
        }
    }

    public partial class SpMultimediaLinkTypesForCategoryResult {

        private string _MMType;

        public SpMultimediaLinkTypesForCategoryResult() {
        }

        [Column(Storage = "_MMType", DbType = "VarChar(255)")]
        public string MMType {
            get {
                return this._MMType;
            }
            set {
                if ((this._MMType != value)) {
                    this._MMType = value;
                }
            }
        }
    }

    public partial class SpMultimediaListResult {

        private System.Nullable<int> _MultimediaID;

        private System.Nullable<int> _MultimediaLinkID;

        private string _MultimediaType;

        private string _Name;

        private string _Caption;

        private string _FileExtension;

        private System.Nullable<int> _SizeInBytes;

        private System.Nullable<int> _Changes;

        private System.Nullable<int> _BlobChanges;

        private string _TempFilename;

        private System.Nullable<System.Guid> _GUID;

        public SpMultimediaListResult() {
        }

        [Column(Storage = "_MultimediaID", DbType = "Int")]
        public System.Nullable<int> MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this._MultimediaID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaLinkID", DbType = "Int")]
        public System.Nullable<int> MultimediaLinkID {
            get {
                return this._MultimediaLinkID;
            }
            set {
                if ((this._MultimediaLinkID != value)) {
                    this._MultimediaLinkID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaType", DbType = "VarChar(255)")]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this._MultimediaType = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Caption", DbType = "VarChar(255)")]
        public string Caption {
            get {
                return this._Caption;
            }
            set {
                if ((this._Caption != value)) {
                    this._Caption = value;
                }
            }
        }

        [Column(Storage = "_FileExtension", DbType = "VarChar(20)")]
        public string FileExtension {
            get {
                return this._FileExtension;
            }
            set {
                if ((this._FileExtension != value)) {
                    this._FileExtension = value;
                }
            }
        }

        [Column(Storage = "_SizeInBytes", DbType = "Int")]
        public System.Nullable<int> SizeInBytes {
            get {
                return this._SizeInBytes;
            }
            set {
                if ((this._SizeInBytes != value)) {
                    this._SizeInBytes = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_BlobChanges", DbType = "Int")]
        public System.Nullable<int> BlobChanges {
            get {
                return this._BlobChanges;
            }
            set {
                if ((this._BlobChanges != value)) {
                    this._BlobChanges = value;
                }
            }
        }

        [Column(Storage = "_TempFilename", DbType = "VarChar(1)")]
        public string TempFilename {
            get {
                return this._TempFilename;
            }
            set {
                if ((this._TempFilename != value)) {
                    this._TempFilename = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpMultimediaListForCharacterResult {

        private System.Nullable<int> _MultimediaID;

        private System.Nullable<int> _MultimediaLinkID;

        private string _MultimediaType;

        private string _Name;

        private string _Caption;

        private string _FileExtension;

        private System.Nullable<int> _SizeInBytes;

        private System.Nullable<int> _Changes;

        private System.Nullable<int> _BlobChanges;

        private string _TempFilename;

        private System.Nullable<System.Guid> _GUID;

        private string _Category;

        private System.Nullable<int> _IntraCatID;

        public SpMultimediaListForCharacterResult() {
        }

        [Column(Storage = "_MultimediaID", DbType = "Int")]
        public System.Nullable<int> MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this._MultimediaID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaLinkID", DbType = "Int")]
        public System.Nullable<int> MultimediaLinkID {
            get {
                return this._MultimediaLinkID;
            }
            set {
                if ((this._MultimediaLinkID != value)) {
                    this._MultimediaLinkID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaType", DbType = "VarChar(255)")]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this._MultimediaType = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Caption", DbType = "VarChar(255)")]
        public string Caption {
            get {
                return this._Caption;
            }
            set {
                if ((this._Caption != value)) {
                    this._Caption = value;
                }
            }
        }

        [Column(Storage = "_FileExtension", DbType = "VarChar(20)")]
        public string FileExtension {
            get {
                return this._FileExtension;
            }
            set {
                if ((this._FileExtension != value)) {
                    this._FileExtension = value;
                }
            }
        }

        [Column(Storage = "_SizeInBytes", DbType = "Int")]
        public System.Nullable<int> SizeInBytes {
            get {
                return this._SizeInBytes;
            }
            set {
                if ((this._SizeInBytes != value)) {
                    this._SizeInBytes = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_BlobChanges", DbType = "Int")]
        public System.Nullable<int> BlobChanges {
            get {
                return this._BlobChanges;
            }
            set {
                if ((this._BlobChanges != value)) {
                    this._BlobChanges = value;
                }
            }
        }

        [Column(Storage = "_TempFilename", DbType = "VarChar(1)")]
        public string TempFilename {
            get {
                return this._TempFilename;
            }
            set {
                if ((this._TempFilename != value)) {
                    this._TempFilename = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_Category", DbType = "VarChar(14)")]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this._Category = value;
                }
            }
        }

        [Column(Storage = "_IntraCatID", DbType = "Int")]
        public System.Nullable<int> IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this._IntraCatID = value;
                }
            }
        }
    }

    public partial class SpMultimediaListForProjectResult {

        private System.Nullable<int> _MultimediaID;

        private System.Nullable<int> _MultimediaLinkID;

        private string _MultimediaType;

        private string _Name;

        private string _Caption;

        private string _FileExtension;

        private System.Nullable<int> _SizeInBytes;

        private System.Nullable<int> _Changes;

        private System.Nullable<int> _BlobChanges;

        private string _TempFilename;

        private System.Nullable<System.Guid> _GUID;

        private string _Category;

        private System.Nullable<int> _IntraCatID;

        public SpMultimediaListForProjectResult() {
        }

        [Column(Storage = "_MultimediaID", DbType = "Int")]
        public System.Nullable<int> MultimediaID {
            get {
                return this._MultimediaID;
            }
            set {
                if ((this._MultimediaID != value)) {
                    this._MultimediaID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaLinkID", DbType = "Int")]
        public System.Nullable<int> MultimediaLinkID {
            get {
                return this._MultimediaLinkID;
            }
            set {
                if ((this._MultimediaLinkID != value)) {
                    this._MultimediaLinkID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaType", DbType = "VarChar(255)")]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this._MultimediaType = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_Caption", DbType = "VarChar(255)")]
        public string Caption {
            get {
                return this._Caption;
            }
            set {
                if ((this._Caption != value)) {
                    this._Caption = value;
                }
            }
        }

        [Column(Storage = "_FileExtension", DbType = "VarChar(20)")]
        public string FileExtension {
            get {
                return this._FileExtension;
            }
            set {
                if ((this._FileExtension != value)) {
                    this._FileExtension = value;
                }
            }
        }

        [Column(Storage = "_SizeInBytes", DbType = "Int")]
        public System.Nullable<int> SizeInBytes {
            get {
                return this._SizeInBytes;
            }
            set {
                if ((this._SizeInBytes != value)) {
                    this._SizeInBytes = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_BlobChanges", DbType = "Int")]
        public System.Nullable<int> BlobChanges {
            get {
                return this._BlobChanges;
            }
            set {
                if ((this._BlobChanges != value)) {
                    this._BlobChanges = value;
                }
            }
        }

        [Column(Storage = "_TempFilename", DbType = "VarChar(1)")]
        public string TempFilename {
            get {
                return this._TempFilename;
            }
            set {
                if ((this._TempFilename != value)) {
                    this._TempFilename = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_Category", DbType = "VarChar(14)")]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this._Category = value;
                }
            }
        }

        [Column(Storage = "_IntraCatID", DbType = "Int")]
        public System.Nullable<int> IntraCatID {
            get {
                return this._IntraCatID;
            }
            set {
                if ((this._IntraCatID != value)) {
                    this._IntraCatID = value;
                }
            }
        }
    }

    public partial class SpMultimediaOwnerLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpMultimediaOwnerLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpMultimediaTypeListResult {

        private System.Nullable<int> _ID;

        private string _MultimediaType;

        public SpMultimediaTypeListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaType", DbType = "VarChar(255)")]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this._MultimediaType = value;
                }
            }
        }
    }

    public partial class SpNoteInsertResult {

        private System.Nullable<decimal> _NewNoteID;

        public SpNoteInsertResult() {
        }

        [Column(Storage = "_NewNoteID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewNoteID {
            get {
                return this._NewNoteID;
            }
            set {
                if ((this._NewNoteID != value)) {
                    this._NewNoteID = value;
                }
            }
        }
    }

    public partial class SpNoteListResult {

        private System.Nullable<int> _NoteID;

        private string _NoteType;

        private string _Note;

        private string _Author;

        private string _Comments;

        private System.Nullable<bool> _UseInReports;

        private System.Nullable<int> _RefID;

        private string _RefCode;

        private string _RefPages;

        private System.Nullable<int> _Changes;

        private System.Nullable<System.Guid> _GUID;

        public SpNoteListResult() {
        }

        [Column(Storage = "_NoteID", DbType = "Int")]
        public System.Nullable<int> NoteID {
            get {
                return this._NoteID;
            }
            set {
                if ((this._NoteID != value)) {
                    this._NoteID = value;
                }
            }
        }

        [Column(Storage = "_NoteType", DbType = "VarChar(255)")]
        public string NoteType {
            get {
                return this._NoteType;
            }
            set {
                if ((this._NoteType != value)) {
                    this._NoteType = value;
                }
            }
        }

        [Column(Storage = "_Note", DbType = "Text")]
        public string Note {
            get {
                return this._Note;
            }
            set {
                if ((this._Note != value)) {
                    this._Note = value;
                }
            }
        }

        [Column(Storage = "_Author", DbType = "VarChar(255)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this._Author = value;
                }
            }
        }

        [Column(Storage = "_Comments", DbType = "Text")]
        public string Comments {
            get {
                return this._Comments;
            }
            set {
                if ((this._Comments != value)) {
                    this._Comments = value;
                }
            }
        }

        [Column(Storage = "_UseInReports", DbType = "Bit")]
        public System.Nullable<bool> UseInReports {
            get {
                return this._UseInReports;
            }
            set {
                if ((this._UseInReports != value)) {
                    this._UseInReports = value;
                }
            }
        }

        [Column(Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this._RefID = value;
                }
            }
        }

        [Column(Storage = "_RefCode", DbType = "VarChar(50)")]
        public string RefCode {
            get {
                return this._RefCode;
            }
            set {
                if ((this._RefCode != value)) {
                    this._RefCode = value;
                }
            }
        }

        [Column(Storage = "_RefPages", DbType = "VarChar(100)")]
        public string RefPages {
            get {
                return this._RefPages;
            }
            set {
                if ((this._RefPages != value)) {
                    this._RefPages = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpNoteTypeListResult {

        private System.Nullable<int> _ID;

        private string _NoteType;

        public SpNoteTypeListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_NoteType", DbType = "VarChar(255)")]
        public string NoteType {
            get {
                return this._NoteType;
            }
            set {
                if ((this._NoteType != value)) {
                    this._NoteType = value;
                }
            }
        }
    }

    public partial class SpNoteTypeListForCategoryResult {

        private System.Nullable<int> _ID;

        private System.Nullable<int> _CategoryID;

        private string _Note;

        public SpNoteTypeListForCategoryResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this._CategoryID = value;
                }
            }
        }

        [Column(Storage = "_Note", DbType = "VarChar(255)")]
        public string Note {
            get {
                return this._Note;
            }
            set {
                if ((this._Note != value)) {
                    this._Note = value;
                }
            }
        }
    }

    public partial class SpPermissionListResult {

        private System.Nullable<int> _GroupID;

        private System.Nullable<int> _PermissionID;

        private System.Nullable<int> _Mask1;

        private System.Nullable<int> _Mask2;

        public SpPermissionListResult() {
        }

        [Column(Storage = "_GroupID", DbType = "Int")]
        public System.Nullable<int> GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this._GroupID = value;
                }
            }
        }

        [Column(Storage = "_PermissionID", DbType = "Int")]
        public System.Nullable<int> PermissionID {
            get {
                return this._PermissionID;
            }
            set {
                if ((this._PermissionID != value)) {
                    this._PermissionID = value;
                }
            }
        }

        [Column(Storage = "_Mask1", DbType = "Int")]
        public System.Nullable<int> Mask1 {
            get {
                return this._Mask1;
            }
            set {
                if ((this._Mask1 != value)) {
                    this._Mask1 = value;
                }
            }
        }

        [Column(Storage = "_Mask2", DbType = "Int")]
        public System.Nullable<int> Mask2 {
            get {
                return this._Mask2;
            }
            set {
                if ((this._Mask2 != value)) {
                    this._Mask2 = value;
                }
            }
        }
    }

    public partial class SpPhraseCategoryInsertResult {

        private System.Nullable<decimal> _NewcategoryID;

        public SpPhraseCategoryInsertResult() {
        }

        [Column(Storage = "_NewcategoryID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewcategoryID {
            get {
                return this._NewcategoryID;
            }
            set {
                if ((this._NewcategoryID != value)) {
                    this._NewcategoryID = value;
                }
            }
        }
    }

    public partial class SpPhraseCategoryListResult {

        private System.Nullable<int> _CategoryID;

        private string _Category;

        private System.Nullable<bool> _Fixed;

        public SpPhraseCategoryListResult() {
        }

        [Column(Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this._CategoryID = value;
                }
            }
        }

        [Column(Storage = "_Category", DbType = "VarChar(100)")]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this._Category = value;
                }
            }
        }

        [Column(Storage = "_Fixed", DbType = "Bit")]
        public System.Nullable<bool> Fixed {
            get {
                return this._Fixed;
            }
            set {
                if ((this._Fixed != value)) {
                    this._Fixed = value;
                }
            }
        }
    }

    public partial class SpPhraseInsertResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpPhraseInsertResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpPhraseListResult {

        private System.Nullable<int> _PhraseID;

        private string _Phrase;

        public SpPhraseListResult() {
        }

        [Column(Storage = "_PhraseID", DbType = "Int")]
        public System.Nullable<int> PhraseID {
            get {
                return this._PhraseID;
            }
            set {
                if ((this._PhraseID != value)) {
                    this._PhraseID = value;
                }
            }
        }

        [Column(Storage = "_Phrase", DbType = "VarChar(255)")]
        public string Phrase {
            get {
                return this._Phrase;
            }
            set {
                if ((this._Phrase != value)) {
                    this._Phrase = value;
                }
            }
        }
    }

    public partial class SpPhraseListByCatNameResult {

        private System.Nullable<int> _PhraseID;

        private string _Phrase;

        private System.Nullable<int> _PhraseCategoryID;

        private System.Nullable<int> _Changes;

        public SpPhraseListByCatNameResult() {
        }

        [Column(Storage = "_PhraseID", DbType = "Int")]
        public System.Nullable<int> PhraseID {
            get {
                return this._PhraseID;
            }
            set {
                if ((this._PhraseID != value)) {
                    this._PhraseID = value;
                }
            }
        }

        [Column(Storage = "_Phrase", DbType = "VarChar(255)")]
        public string Phrase {
            get {
                return this._Phrase;
            }
            set {
                if ((this._Phrase != value)) {
                    this._Phrase = value;
                }
            }
        }

        [Column(Storage = "_PhraseCategoryID", DbType = "Int")]
        public System.Nullable<int> PhraseCategoryID {
            get {
                return this._PhraseCategoryID;
            }
            set {
                if ((this._PhraseCategoryID != value)) {
                    this._PhraseCategoryID = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpProjectGetCellsResult {

        private System.Nullable<int> _IntCharacterID;

        private System.Nullable<int> _IntMorphologyViewID;

        private System.Nullable<int> _IntMorphologyEntityID;

        private string _TxtValue;

        public SpProjectGetCellsResult() {
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Name = "intMorphologyEntityID", Storage = "_IntMorphologyEntityID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyEntityID {
            get {
                return this._IntMorphologyEntityID;
            }
            set {
                if ((this._IntMorphologyEntityID != value)) {
                    this._IntMorphologyEntityID = value;
                }
            }
        }

        [Column(Name = "txtValue", Storage = "_TxtValue", DbType = "Text")]
        public string TxtValue {
            get {
                return this._TxtValue;
            }
            set {
                if ((this._TxtValue != value)) {
                    this._TxtValue = value;
                }
            }
        }
    }

    public partial class SpPublicationListResult {

        private System.Nullable<int> _IntPublicationID;

        private string _VchrName;

        private string _TxtXMLData;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _Changes;

        public SpPublicationListResult() {
        }

        [Column(Name = "intPublicationID", Storage = "_IntPublicationID", DbType = "Int")]
        public System.Nullable<int> IntPublicationID {
            get {
                return this._IntPublicationID;
            }
            set {
                if ((this._IntPublicationID != value)) {
                    this._IntPublicationID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "txtXMLData", Storage = "_TxtXMLData", DbType = "Text")]
        public string TxtXMLData {
            get {
                return this._TxtXMLData;
            }
            set {
                if ((this._TxtXMLData != value)) {
                    this._TxtXMLData = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpReferenceCountResult {

        private System.Nullable<int> _NumRefs;

        public SpReferenceCountResult() {
        }

        [Column(Storage = "_NumRefs", DbType = "Int")]
        public System.Nullable<int> NumRefs {
            get {
                return this._NumRefs;
            }
            set {
                if ((this._NumRefs != value)) {
                    this._NumRefs = value;
                }
            }
        }
    }

    public partial class SpReferenceGetResult {

        private System.Nullable<int> _IntRefID;

        private string _VchrRefCode;

        private string _VchrAuthor;

        private string _VchrTitle;

        private string _VchrBookTitle;

        private string _VchrEditor;

        private string _VchrRefType;

        private string _VchrYearOfPub;

        private string _VchrActualDate;

        private System.Nullable<int> _IntJournalID;

        private string _VchrPartNo;

        private string _VchrSeries;

        private string _VchrPublisher;

        private string _VchrPlace;

        private string _VchrVolume;

        private string _VchrPages;

        private string _VchrTotalPages;

        private string _VchrPossess;

        private string _VchrSource;

        private string _VchrEdition;

        private string _VchrISBN;

        private string _VchrISSN;

        private string _TxtAbstract;

        private string _TxtFullText;

        private string _TxtFullRTF;

        private System.Nullable<int> _IntStartPage;

        private System.Nullable<int> _IntEndPage;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        public SpReferenceGetResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(900)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrTitle", Storage = "_VchrTitle", DbType = "VarChar(900)")]
        public string VchrTitle {
            get {
                return this._VchrTitle;
            }
            set {
                if ((this._VchrTitle != value)) {
                    this._VchrTitle = value;
                }
            }
        }

        [Column(Name = "vchrBookTitle", Storage = "_VchrBookTitle", DbType = "VarChar(900)")]
        public string VchrBookTitle {
            get {
                return this._VchrBookTitle;
            }
            set {
                if ((this._VchrBookTitle != value)) {
                    this._VchrBookTitle = value;
                }
            }
        }

        [Column(Name = "vchrEditor", Storage = "_VchrEditor", DbType = "VarChar(500)")]
        public string VchrEditor {
            get {
                return this._VchrEditor;
            }
            set {
                if ((this._VchrEditor != value)) {
                    this._VchrEditor = value;
                }
            }
        }

        [Column(Name = "vchrRefType", Storage = "_VchrRefType", DbType = "VarChar(20)")]
        public string VchrRefType {
            get {
                return this._VchrRefType;
            }
            set {
                if ((this._VchrRefType != value)) {
                    this._VchrRefType = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(10)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrActualDate", Storage = "_VchrActualDate", DbType = "VarChar(50)")]
        public string VchrActualDate {
            get {
                return this._VchrActualDate;
            }
            set {
                if ((this._VchrActualDate != value)) {
                    this._VchrActualDate = value;
                }
            }
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }

        [Column(Name = "vchrPartNo", Storage = "_VchrPartNo", DbType = "VarChar(50)")]
        public string VchrPartNo {
            get {
                return this._VchrPartNo;
            }
            set {
                if ((this._VchrPartNo != value)) {
                    this._VchrPartNo = value;
                }
            }
        }

        [Column(Name = "vchrSeries", Storage = "_VchrSeries", DbType = "VarChar(50)")]
        public string VchrSeries {
            get {
                return this._VchrSeries;
            }
            set {
                if ((this._VchrSeries != value)) {
                    this._VchrSeries = value;
                }
            }
        }

        [Column(Name = "vchrPublisher", Storage = "_VchrPublisher", DbType = "VarChar(200)")]
        public string VchrPublisher {
            get {
                return this._VchrPublisher;
            }
            set {
                if ((this._VchrPublisher != value)) {
                    this._VchrPublisher = value;
                }
            }
        }

        [Column(Name = "vchrPlace", Storage = "_VchrPlace", DbType = "VarChar(200)")]
        public string VchrPlace {
            get {
                return this._VchrPlace;
            }
            set {
                if ((this._VchrPlace != value)) {
                    this._VchrPlace = value;
                }
            }
        }

        [Column(Name = "vchrVolume", Storage = "_VchrVolume", DbType = "VarChar(50)")]
        public string VchrVolume {
            get {
                return this._VchrVolume;
            }
            set {
                if ((this._VchrVolume != value)) {
                    this._VchrVolume = value;
                }
            }
        }

        [Column(Name = "vchrPages", Storage = "_VchrPages", DbType = "VarChar(50)")]
        public string VchrPages {
            get {
                return this._VchrPages;
            }
            set {
                if ((this._VchrPages != value)) {
                    this._VchrPages = value;
                }
            }
        }

        [Column(Name = "vchrTotalPages", Storage = "_VchrTotalPages", DbType = "VarChar(50)")]
        public string VchrTotalPages {
            get {
                return this._VchrTotalPages;
            }
            set {
                if ((this._VchrTotalPages != value)) {
                    this._VchrTotalPages = value;
                }
            }
        }

        [Column(Name = "vchrPossess", Storage = "_VchrPossess", DbType = "VarChar(50)")]
        public string VchrPossess {
            get {
                return this._VchrPossess;
            }
            set {
                if ((this._VchrPossess != value)) {
                    this._VchrPossess = value;
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_VchrSource", DbType = "VarChar(50)")]
        public string VchrSource {
            get {
                return this._VchrSource;
            }
            set {
                if ((this._VchrSource != value)) {
                    this._VchrSource = value;
                }
            }
        }

        [Column(Name = "vchrEdition", Storage = "_VchrEdition", DbType = "VarChar(50)")]
        public string VchrEdition {
            get {
                return this._VchrEdition;
            }
            set {
                if ((this._VchrEdition != value)) {
                    this._VchrEdition = value;
                }
            }
        }

        [Column(Name = "vchrISBN", Storage = "_VchrISBN", DbType = "VarChar(30)")]
        public string VchrISBN {
            get {
                return this._VchrISBN;
            }
            set {
                if ((this._VchrISBN != value)) {
                    this._VchrISBN = value;
                }
            }
        }

        [Column(Name = "vchrISSN", Storage = "_VchrISSN", DbType = "VarChar(30)")]
        public string VchrISSN {
            get {
                return this._VchrISSN;
            }
            set {
                if ((this._VchrISSN != value)) {
                    this._VchrISSN = value;
                }
            }
        }

        [Column(Name = "txtAbstract", Storage = "_TxtAbstract", DbType = "Text")]
        public string TxtAbstract {
            get {
                return this._TxtAbstract;
            }
            set {
                if ((this._TxtAbstract != value)) {
                    this._TxtAbstract = value;
                }
            }
        }

        [Column(Name = "txtFullText", Storage = "_TxtFullText", DbType = "Text")]
        public string TxtFullText {
            get {
                return this._TxtFullText;
            }
            set {
                if ((this._TxtFullText != value)) {
                    this._TxtFullText = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_IntStartPage", DbType = "Int")]
        public System.Nullable<int> IntStartPage {
            get {
                return this._IntStartPage;
            }
            set {
                if ((this._IntStartPage != value)) {
                    this._IntStartPage = value;
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_IntEndPage", DbType = "Int")]
        public System.Nullable<int> IntEndPage {
            get {
                return this._IntEndPage;
            }
            set {
                if ((this._IntEndPage != value)) {
                    this._IntEndPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }
    }

    public partial class SpReferenceGetIDForCodeResult {

        private System.Nullable<int> _IntRefID;

        private System.Nullable<System.Guid> _GUID;

        public SpReferenceGetIDForCodeResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpReferenceImportResult1 {

        private System.Nullable<decimal> _NewJournalID;

        public SpReferenceImportResult1() {
        }

        [Column(Storage = "_NewJournalID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewJournalID {
            get {
                return this._NewJournalID;
            }
            set {
                if ((this._NewJournalID != value)) {
                    this._NewJournalID = value;
                }
            }
        }
    }

    public partial class SpReferenceImportResult2 {

        private System.Nullable<decimal> _NewRefID;

        public SpReferenceImportResult2() {
        }

        [Column(Storage = "_NewRefID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRefID {
            get {
                return this._NewRefID;
            }
            set {
                if ((this._NewRefID != value)) {
                    this._NewRefID = value;
                }
            }
        }
    }

    public partial class SpReferenceInsertResult {

        private System.Nullable<decimal> _NewRefID;

        public SpReferenceInsertResult() {
        }

        [Column(Storage = "_NewRefID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRefID {
            get {
                return this._NewRefID;
            }
            set {
                if ((this._NewRefID != value)) {
                    this._NewRefID = value;
                }
            }
        }
    }

    public partial class SpReferenceInsertADODBResult {

        private System.Nullable<decimal> _NewRefID;

        public SpReferenceInsertADODBResult() {
        }

        [Column(Storage = "_NewRefID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRefID {
            get {
                return this._NewRefID;
            }
            set {
                if ((this._NewRefID != value)) {
                    this._NewRefID = value;
                }
            }
        }
    }

    public partial class SpReferenceListResult {

        private System.Nullable<int> _IntRefID;

        private string _VchrRefCode;

        private string _VchrAuthor;

        private string _VchrTitle;

        private string _VchrBookTitle;

        private string _VchrEditor;

        private string _VchrRefType;

        private string _VchrYearOfPub;

        private string _VchrActualDate;

        private System.Nullable<int> _IntJournalID;

        private string _VchrPartNo;

        private string _VchrSeries;

        private string _VchrPublisher;

        private string _VchrPlace;

        private string _VchrVolume;

        private string _VchrPages;

        private string _VchrTotalPages;

        private string _VchrPossess;

        private string _VchrSource;

        private string _VchrEdition;

        private string _VchrISBN;

        private string _VchrISSN;

        private string _TxtAbstract;

        private string _TxtFullText;

        private string _TxtFullRTF;

        private System.Nullable<int> _IntStartPage;

        private System.Nullable<int> _IntEndPage;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _JournalName;

        private System.Nullable<int> _Changes;

        public SpReferenceListResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(900)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrTitle", Storage = "_VchrTitle", DbType = "VarChar(900)")]
        public string VchrTitle {
            get {
                return this._VchrTitle;
            }
            set {
                if ((this._VchrTitle != value)) {
                    this._VchrTitle = value;
                }
            }
        }

        [Column(Name = "vchrBookTitle", Storage = "_VchrBookTitle", DbType = "VarChar(900)")]
        public string VchrBookTitle {
            get {
                return this._VchrBookTitle;
            }
            set {
                if ((this._VchrBookTitle != value)) {
                    this._VchrBookTitle = value;
                }
            }
        }

        [Column(Name = "vchrEditor", Storage = "_VchrEditor", DbType = "VarChar(500)")]
        public string VchrEditor {
            get {
                return this._VchrEditor;
            }
            set {
                if ((this._VchrEditor != value)) {
                    this._VchrEditor = value;
                }
            }
        }

        [Column(Name = "vchrRefType", Storage = "_VchrRefType", DbType = "VarChar(20)")]
        public string VchrRefType {
            get {
                return this._VchrRefType;
            }
            set {
                if ((this._VchrRefType != value)) {
                    this._VchrRefType = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(10)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrActualDate", Storage = "_VchrActualDate", DbType = "VarChar(50)")]
        public string VchrActualDate {
            get {
                return this._VchrActualDate;
            }
            set {
                if ((this._VchrActualDate != value)) {
                    this._VchrActualDate = value;
                }
            }
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }

        [Column(Name = "vchrPartNo", Storage = "_VchrPartNo", DbType = "VarChar(50)")]
        public string VchrPartNo {
            get {
                return this._VchrPartNo;
            }
            set {
                if ((this._VchrPartNo != value)) {
                    this._VchrPartNo = value;
                }
            }
        }

        [Column(Name = "vchrSeries", Storage = "_VchrSeries", DbType = "VarChar(50)")]
        public string VchrSeries {
            get {
                return this._VchrSeries;
            }
            set {
                if ((this._VchrSeries != value)) {
                    this._VchrSeries = value;
                }
            }
        }

        [Column(Name = "vchrPublisher", Storage = "_VchrPublisher", DbType = "VarChar(200)")]
        public string VchrPublisher {
            get {
                return this._VchrPublisher;
            }
            set {
                if ((this._VchrPublisher != value)) {
                    this._VchrPublisher = value;
                }
            }
        }

        [Column(Name = "vchrPlace", Storage = "_VchrPlace", DbType = "VarChar(200)")]
        public string VchrPlace {
            get {
                return this._VchrPlace;
            }
            set {
                if ((this._VchrPlace != value)) {
                    this._VchrPlace = value;
                }
            }
        }

        [Column(Name = "vchrVolume", Storage = "_VchrVolume", DbType = "VarChar(50)")]
        public string VchrVolume {
            get {
                return this._VchrVolume;
            }
            set {
                if ((this._VchrVolume != value)) {
                    this._VchrVolume = value;
                }
            }
        }

        [Column(Name = "vchrPages", Storage = "_VchrPages", DbType = "VarChar(50)")]
        public string VchrPages {
            get {
                return this._VchrPages;
            }
            set {
                if ((this._VchrPages != value)) {
                    this._VchrPages = value;
                }
            }
        }

        [Column(Name = "vchrTotalPages", Storage = "_VchrTotalPages", DbType = "VarChar(50)")]
        public string VchrTotalPages {
            get {
                return this._VchrTotalPages;
            }
            set {
                if ((this._VchrTotalPages != value)) {
                    this._VchrTotalPages = value;
                }
            }
        }

        [Column(Name = "vchrPossess", Storage = "_VchrPossess", DbType = "VarChar(50)")]
        public string VchrPossess {
            get {
                return this._VchrPossess;
            }
            set {
                if ((this._VchrPossess != value)) {
                    this._VchrPossess = value;
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_VchrSource", DbType = "VarChar(50)")]
        public string VchrSource {
            get {
                return this._VchrSource;
            }
            set {
                if ((this._VchrSource != value)) {
                    this._VchrSource = value;
                }
            }
        }

        [Column(Name = "vchrEdition", Storage = "_VchrEdition", DbType = "VarChar(50)")]
        public string VchrEdition {
            get {
                return this._VchrEdition;
            }
            set {
                if ((this._VchrEdition != value)) {
                    this._VchrEdition = value;
                }
            }
        }

        [Column(Name = "vchrISBN", Storage = "_VchrISBN", DbType = "VarChar(30)")]
        public string VchrISBN {
            get {
                return this._VchrISBN;
            }
            set {
                if ((this._VchrISBN != value)) {
                    this._VchrISBN = value;
                }
            }
        }

        [Column(Name = "vchrISSN", Storage = "_VchrISSN", DbType = "VarChar(30)")]
        public string VchrISSN {
            get {
                return this._VchrISSN;
            }
            set {
                if ((this._VchrISSN != value)) {
                    this._VchrISSN = value;
                }
            }
        }

        [Column(Name = "txtAbstract", Storage = "_TxtAbstract", DbType = "Text")]
        public string TxtAbstract {
            get {
                return this._TxtAbstract;
            }
            set {
                if ((this._TxtAbstract != value)) {
                    this._TxtAbstract = value;
                }
            }
        }

        [Column(Name = "txtFullText", Storage = "_TxtFullText", DbType = "Text")]
        public string TxtFullText {
            get {
                return this._TxtFullText;
            }
            set {
                if ((this._TxtFullText != value)) {
                    this._TxtFullText = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_IntStartPage", DbType = "Int")]
        public System.Nullable<int> IntStartPage {
            get {
                return this._IntStartPage;
            }
            set {
                if ((this._IntStartPage != value)) {
                    this._IntStartPage = value;
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_IntEndPage", DbType = "Int")]
        public System.Nullable<int> IntEndPage {
            get {
                return this._IntEndPage;
            }
            set {
                if ((this._IntEndPage != value)) {
                    this._IntEndPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_JournalName", DbType = "VarChar(900)")]
        public string JournalName {
            get {
                return this._JournalName;
            }
            set {
                if ((this._JournalName != value)) {
                    this._JournalName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpReferenceListBlankPreviewIDsResult {

        private System.Nullable<int> _IntRefID;

        public SpReferenceListBlankPreviewIDsResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }
    }

    public partial class SpReferenceListCheckResult {

        private string _JournalTitle;

        private string _BookTitle;

        private string _Year;

        private string _Author;

        private System.Nullable<int> _RefID;

        public SpReferenceListCheckResult() {
        }

        [Column(Storage = "_JournalTitle", DbType = "VarChar(900)")]
        public string JournalTitle {
            get {
                return this._JournalTitle;
            }
            set {
                if ((this._JournalTitle != value)) {
                    this._JournalTitle = value;
                }
            }
        }

        [Column(Storage = "_BookTitle", DbType = "VarChar(900)")]
        public string BookTitle {
            get {
                return this._BookTitle;
            }
            set {
                if ((this._BookTitle != value)) {
                    this._BookTitle = value;
                }
            }
        }

        [Column(Storage = "_Year", DbType = "VarChar(10)")]
        public string Year {
            get {
                return this._Year;
            }
            set {
                if ((this._Year != value)) {
                    this._Year = value;
                }
            }
        }

        [Column(Storage = "_Author", DbType = "VarChar(900)")]
        public string Author {
            get {
                return this._Author;
            }
            set {
                if ((this._Author != value)) {
                    this._Author = value;
                }
            }
        }

        [Column(Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this._RefID = value;
                }
            }
        }
    }

    public partial class SpReferenceLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpReferenceLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(50)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpRefLinkGetRefDetailResult {

        private string _TxtFullRTF;

        private System.Nullable<int> _IntStartPage;

        private System.Nullable<int> _IntEndPage;

        public SpRefLinkGetRefDetailResult() {
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_IntStartPage", DbType = "Int")]
        public System.Nullable<int> IntStartPage {
            get {
                return this._IntStartPage;
            }
            set {
                if ((this._IntStartPage != value)) {
                    this._IntStartPage = value;
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_IntEndPage", DbType = "Int")]
        public System.Nullable<int> IntEndPage {
            get {
                return this._IntEndPage;
            }
            set {
                if ((this._IntEndPage != value)) {
                    this._IntEndPage = value;
                }
            }
        }
    }

    public partial class SpRefLinkInsertResult {

        private System.Nullable<decimal> _NewRefLinkID;

        public SpRefLinkInsertResult() {
        }

        [Column(Storage = "_NewRefLinkID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRefLinkID {
            get {
                return this._NewRefLinkID;
            }
            set {
                if ((this._NewRefLinkID != value)) {
                    this._NewRefLinkID = value;
                }
            }
        }
    }

    public partial class SpRefLinkListResult {

        private System.Nullable<int> _IntRefLinkID;

        private string _RefLink;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefCode;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private string _TxtFullRTF;

        private System.Nullable<int> _IntStartPage;

        private System.Nullable<int> _IntEndPage;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitUseInReport;

        private System.Nullable<int> _Changes;

        private System.Nullable<System.Guid> _GUID;

        public SpRefLinkListResult() {
        }

        [Column(Name = "intRefLinkID", Storage = "_IntRefLinkID", DbType = "Int")]
        public System.Nullable<int> IntRefLinkID {
            get {
                return this._IntRefLinkID;
            }
            set {
                if ((this._IntRefLinkID != value)) {
                    this._IntRefLinkID = value;
                }
            }
        }

        [Column(Storage = "_RefLink", DbType = "VarChar(255)")]
        public string RefLink {
            get {
                return this._RefLink;
            }
            set {
                if ((this._RefLink != value)) {
                    this._RefLink = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_IntStartPage", DbType = "Int")]
        public System.Nullable<int> IntStartPage {
            get {
                return this._IntStartPage;
            }
            set {
                if ((this._IntStartPage != value)) {
                    this._IntStartPage = value;
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_IntEndPage", DbType = "Int")]
        public System.Nullable<int> IntEndPage {
            get {
                return this._IntEndPage;
            }
            set {
                if ((this._IntEndPage != value)) {
                    this._IntEndPage = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_BitUseInReport", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReport {
            get {
                return this._BitUseInReport;
            }
            set {
                if ((this._BitUseInReport != value)) {
                    this._BitUseInReport = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpRefLinkTaxonListResult {

        private System.Nullable<int> _IntRefLinkID;

        private string _RefLink;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrFullName;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private System.Nullable<bool> _BitUseInReport;

        private System.Nullable<int> _Changes;

        public SpRefLinkTaxonListResult() {
        }

        [Column(Name = "intRefLinkID", Storage = "_IntRefLinkID", DbType = "Int")]
        public System.Nullable<int> IntRefLinkID {
            get {
                return this._IntRefLinkID;
            }
            set {
                if ((this._IntRefLinkID != value)) {
                    this._IntRefLinkID = value;
                }
            }
        }

        [Column(Storage = "_RefLink", DbType = "VarChar(255)")]
        public string RefLink {
            get {
                return this._RefLink;
            }
            set {
                if ((this._RefLink != value)) {
                    this._RefLink = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_BitUseInReport", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReport {
            get {
                return this._BitUseInReport;
            }
            set {
                if ((this._BitUseInReport != value)) {
                    this._BitUseInReport = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpRefLinkTypeListResult {

        private System.Nullable<int> _ID;

        private string _RefLink;

        public SpRefLinkTypeListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_RefLink", DbType = "VarChar(255)")]
        public string RefLink {
            get {
                return this._RefLink;
            }
            set {
                if ((this._RefLink != value)) {
                    this._RefLink = value;
                }
            }
        }
    }

    public partial class SpRefLinkTypesForCategoryResult {

        private string _RefLink;

        public SpRefLinkTypesForCategoryResult() {
        }

        [Column(Storage = "_RefLink", DbType = "VarChar(255)")]
        public string RefLink {
            get {
                return this._RefLink;
            }
            set {
                if ((this._RefLink != value)) {
                    this._RefLink = value;
                }
            }
        }
    }

    public partial class SpRefLinkXMLExportListResult {

        private System.Nullable<int> _IntRefLinkID;

        private string _RefLinkType;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<bool> _BitUseInReport;

        public SpRefLinkXMLExportListResult() {
        }

        [Column(Name = "intRefLinkID", Storage = "_IntRefLinkID", DbType = "Int")]
        public System.Nullable<int> IntRefLinkID {
            get {
                return this._IntRefLinkID;
            }
            set {
                if ((this._IntRefLinkID != value)) {
                    this._IntRefLinkID = value;
                }
            }
        }

        [Column(Storage = "_RefLinkType", DbType = "VarChar(255)")]
        public string RefLinkType {
            get {
                return this._RefLinkType;
            }
            set {
                if ((this._RefLinkType != value)) {
                    this._RefLinkType = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_BitUseInReport", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReport {
            get {
                return this._BitUseInReport;
            }
            set {
                if ((this._BitUseInReport != value)) {
                    this._BitUseInReport = value;
                }
            }
        }
    }

    public partial class SpRegionFindResult {

        private System.Nullable<int> _RegionID;

        private string _Region;

        private System.Nullable<int> _ParentID;

        private System.Nullable<int> _NumChildren;

        public SpRegionFindResult() {
        }

        [Column(Storage = "_RegionID", DbType = "Int")]
        public System.Nullable<int> RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this._RegionID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpRegionFullTreeResult {

        private System.Nullable<int> _RegionID;

        private string _Region;

        private System.Nullable<int> _ParentID;

        public SpRegionFullTreeResult() {
        }

        [Column(Storage = "_RegionID", DbType = "Int")]
        public System.Nullable<int> RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this._RegionID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }
    }

    public partial class SpRegionGetResult {

        private System.Nullable<int> _IntPoliticalRegionID;

        private string _VchrName;

        private string _VchrRank;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrParentage;

        private System.Nullable<System.Guid> _GUID;

        public SpRegionGetResult() {
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_IntPoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> IntPoliticalRegionID {
            get {
                return this._IntPoliticalRegionID;
            }
            set {
                if ((this._IntPoliticalRegionID != value)) {
                    this._IntPoliticalRegionID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(50)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(255)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrParentage", Storage = "_VchrParentage", DbType = "VarChar(255)")]
        public string VchrParentage {
            get {
                return this._VchrParentage;
            }
            set {
                if ((this._VchrParentage != value)) {
                    this._VchrParentage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpRegionGetSiteIDListResult {

        private System.Nullable<int> _IntSiteID;

        public SpRegionGetSiteIDListResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }
    }

    public partial class SpRegionImportGetIDResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpRegionImportGetIDResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpRegionInsertResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpRegionInsertResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpRegionListResult {

        private System.Nullable<int> _RegionID;

        private string _Region;

        private System.Nullable<int> _ParentID;

        private System.Nullable<int> _NumChildren;

        public SpRegionListResult() {
        }

        [Column(Storage = "_RegionID", DbType = "Int")]
        public System.Nullable<int> RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this._RegionID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpRegionListTopResult {

        private System.Nullable<int> _RegionID;

        private string _Region;

        private System.Nullable<int> _ParentID;

        private System.Nullable<int> _NumChildren;

        public SpRegionListTopResult() {
        }

        [Column(Storage = "_RegionID", DbType = "Int")]
        public System.Nullable<int> RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this._RegionID = value;
                }
            }
        }

        [Column(Storage = "_Region", DbType = "VarChar(50)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this._Region = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }
    }

    public partial class SpRegionLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpRegionLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(50)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpRegionRankListResult {

        private string _VchrRank;

        public SpRegionRankListResult() {
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(255)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }
    }

    public partial class SpReportChecklistResult {

        private System.Nullable<int> _IntBiotaID;

        private string _VchrFullName;

        private string _VchrAuthor;

        private string _ChrElemType;

        private string _VchrRank;

        private System.Nullable<bool> _BitUnverified;

        private System.Nullable<bool> _BitUnplaced;

        private System.Nullable<bool> _BitAvailableName;

        private System.Nullable<bool> _BitLiteratureName;

        private string _ChrCategory;

        private string _RankCode;

        public SpReportChecklistResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(100)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "chrElemType", Storage = "_ChrElemType", DbType = "Char(5)")]
        public string ChrElemType {
            get {
                return this._ChrElemType;
            }
            set {
                if ((this._ChrElemType != value)) {
                    this._ChrElemType = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(100)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }

        [Column(Name = "bitUnverified", Storage = "_BitUnverified", DbType = "Bit")]
        public System.Nullable<bool> BitUnverified {
            get {
                return this._BitUnverified;
            }
            set {
                if ((this._BitUnverified != value)) {
                    this._BitUnverified = value;
                }
            }
        }

        [Column(Name = "bitUnplaced", Storage = "_BitUnplaced", DbType = "Bit")]
        public System.Nullable<bool> BitUnplaced {
            get {
                return this._BitUnplaced;
            }
            set {
                if ((this._BitUnplaced != value)) {
                    this._BitUnplaced = value;
                }
            }
        }

        [Column(Name = "bitAvailableName", Storage = "_BitAvailableName", DbType = "Bit")]
        public System.Nullable<bool> BitAvailableName {
            get {
                return this._BitAvailableName;
            }
            set {
                if ((this._BitAvailableName != value)) {
                    this._BitAvailableName = value;
                }
            }
        }

        [Column(Name = "bitLiteratureName", Storage = "_BitLiteratureName", DbType = "Bit")]
        public System.Nullable<bool> BitLiteratureName {
            get {
                return this._BitLiteratureName;
            }
            set {
                if ((this._BitLiteratureName != value)) {
                    this._BitLiteratureName = value;
                }
            }
        }

        [Column(Name = "chrCategory", Storage = "_ChrCategory", DbType = "Char(1)")]
        public string ChrCategory {
            get {
                return this._ChrCategory;
            }
            set {
                if ((this._ChrCategory != value)) {
                    this._ChrCategory = value;
                }
            }
        }

        [Column(Storage = "_RankCode", DbType = "Char(5)")]
        public string RankCode {
            get {
                return this._RankCode;
            }
            set {
                if ((this._RankCode != value)) {
                    this._RankCode = value;
                }
            }
        }
    }

    public partial class SpReportGetXMLResult {

        private string _XML;

        public SpReportGetXMLResult() {
        }

        [Column(Storage = "_XML", DbType = "Text")]
        public string XML {
            get {
                return this._XML;
            }
            set {
                if ((this._XML != value)) {
                    this._XML = value;
                }
            }
        }
    }

    public partial class SpReportMAvNameTypesResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private string _VchrPrimaryType;

        private string _VchrSecondaryType;

        private System.Nullable<bool> _BitPrimaryTypeProbable;

        private System.Nullable<bool> _BitSecondaryTypeProbable;

        private System.Nullable<System.Guid> _GUID;

        public SpReportMAvNameTypesResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "vchrPrimaryType", Storage = "_VchrPrimaryType", DbType = "VarChar(50)")]
        public string VchrPrimaryType {
            get {
                return this._VchrPrimaryType;
            }
            set {
                if ((this._VchrPrimaryType != value)) {
                    this._VchrPrimaryType = value;
                }
            }
        }

        [Column(Name = "vchrSecondaryType", Storage = "_VchrSecondaryType", DbType = "VarChar(50)")]
        public string VchrSecondaryType {
            get {
                return this._VchrSecondaryType;
            }
            set {
                if ((this._VchrSecondaryType != value)) {
                    this._VchrSecondaryType = value;
                }
            }
        }

        [Column(Name = "bitPrimaryTypeProbable", Storage = "_BitPrimaryTypeProbable", DbType = "Bit")]
        public System.Nullable<bool> BitPrimaryTypeProbable {
            get {
                return this._BitPrimaryTypeProbable;
            }
            set {
                if ((this._BitPrimaryTypeProbable != value)) {
                    this._BitPrimaryTypeProbable = value;
                }
            }
        }

        [Column(Name = "bitSecondaryTypeProbable", Storage = "_BitSecondaryTypeProbable", DbType = "Bit")]
        public System.Nullable<bool> BitSecondaryTypeProbable {
            get {
                return this._BitSecondaryTypeProbable;
            }
            set {
                if ((this._BitSecondaryTypeProbable != value)) {
                    this._BitSecondaryTypeProbable = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaAssocIDListResult {

        private string _ID;

        public SpReportMBiotaAssocIDListResult() {
        }

        [Column(Storage = "_ID", DbType = "VarChar(26)")]
        public string ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaAssocRefResult {

        private System.Nullable<int> _IntRefID;

        public SpReportMBiotaAssocRefResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaAvNameRefResult {

        private System.Nullable<int> _IntRefID;

        public SpReportMBiotaAvNameRefResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaAvNamesResult {

        private string _VchrFullName;

        public SpReportMBiotaAvNamesResult() {
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaListAvChildrenResult {

        private System.Nullable<int> _IntBiotaID;

        public SpReportMBiotaListAvChildrenResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaListChildrenResult {

        private System.Nullable<int> _IntBiotaID;

        public SpReportMBiotaListChildrenResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaListChildrenAtRankResult {

        private System.Nullable<int> _IntBiotaID;

        public SpReportMBiotaListChildrenAtRankResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaLitNamesResult {

        private string _VchrFullName;

        public SpReportMBiotaLitNamesResult() {
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaParentageResult {

        private string _Parentage;

        public SpReportMBiotaParentageResult() {
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(1000)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaParentageMinResult {

        private string _Parentage;

        public SpReportMBiotaParentageMinResult() {
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(1000)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaParentFromLongRankResult1 {

        private string _Parent;

        public SpReportMBiotaParentFromLongRankResult1() {
        }

        [Column(Storage = "_Parent", DbType = "VarChar(1)")]
        public string Parent {
            get {
                return this._Parent;
            }
            set {
                if ((this._Parent != value)) {
                    this._Parent = value;
                }
            }
        }
    }

    public partial class SpReportMBiotaParentFromLongRankResult2 {

        private string _Parent;

        public SpReportMBiotaParentFromLongRankResult2() {
        }

        [Column(Storage = "_Parent", DbType = "VarChar(1000)")]
        public string Parent {
            get {
                return this._Parent;
            }
            set {
                if ((this._Parent != value)) {
                    this._Parent = value;
                }
            }
        }
    }

    public partial class SpReportMCitationResult {

        private string _RefPage;

        private string _RefQual;

        private System.Nullable<int> _IntRefID;

        private string _FullRTF;

        public SpReportMCitationResult() {
        }

        [Column(Storage = "_RefPage", DbType = "VarChar(50)")]
        public string RefPage {
            get {
                return this._RefPage;
            }
            set {
                if ((this._RefPage != value)) {
                    this._RefPage = value;
                }
            }
        }

        [Column(Storage = "_RefQual", DbType = "Text")]
        public string RefQual {
            get {
                return this._RefQual;
            }
            set {
                if ((this._RefQual != value)) {
                    this._RefQual = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Storage = "_FullRTF", DbType = "Text")]
        public string FullRTF {
            get {
                return this._FullRTF;
            }
            set {
                if ((this._FullRTF != value)) {
                    this._FullRTF = value;
                }
            }
        }
    }

    public partial class SpReportMCommonNameResult {

        private System.Nullable<int> _IntCommonNameID;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrCommonName;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtNotes;

        private System.Nullable<System.Guid> _GUID;

        public SpReportMCommonNameResult() {
        }

        [Column(Name = "intCommonNameID", Storage = "_IntCommonNameID", DbType = "Int")]
        public System.Nullable<int> IntCommonNameID {
            get {
                return this._IntCommonNameID;
            }
            set {
                if ((this._IntCommonNameID != value)) {
                    this._IntCommonNameID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrCommonName", Storage = "_VchrCommonName", DbType = "VarChar(100)")]
        public string VchrCommonName {
            get {
                return this._VchrCommonName;
            }
            set {
                if ((this._VchrCommonName != value)) {
                    this._VchrCommonName = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpReportMCommonNameDefListResult {

        private System.Nullable<int> _IntCommonNameID;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrCommonName;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtNotes;

        private System.Nullable<System.Guid> _GUID;

        private string _TxtFullRTF;

        public SpReportMCommonNameDefListResult() {
        }

        [Column(Name = "intCommonNameID", Storage = "_IntCommonNameID", DbType = "Int")]
        public System.Nullable<int> IntCommonNameID {
            get {
                return this._IntCommonNameID;
            }
            set {
                if ((this._IntCommonNameID != value)) {
                    this._IntCommonNameID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrCommonName", Storage = "_VchrCommonName", DbType = "VarChar(100)")]
        public string VchrCommonName {
            get {
                return this._VchrCommonName;
            }
            set {
                if ((this._VchrCommonName != value)) {
                    this._VchrCommonName = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }
    }

    public partial class SpReportMCommonNameIDListResult {

        private System.Nullable<int> _ID;

        public SpReportMCommonNameIDListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }
    }

    public partial class SpReportMDistributionResult {

        private string _Parentage;

        private System.Nullable<bool> _Introduced;

        private System.Nullable<bool> _Uncertain;

        private string _Qual;

        public SpReportMDistributionResult() {
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }

        [Column(Storage = "_Introduced", DbType = "Bit")]
        public System.Nullable<bool> Introduced {
            get {
                return this._Introduced;
            }
            set {
                if ((this._Introduced != value)) {
                    this._Introduced = value;
                }
            }
        }

        [Column(Storage = "_Uncertain", DbType = "Bit")]
        public System.Nullable<bool> Uncertain {
            get {
                return this._Uncertain;
            }
            set {
                if ((this._Uncertain != value)) {
                    this._Uncertain = value;
                }
            }
        }

        [Column(Storage = "_Qual", DbType = "Text")]
        public string Qual {
            get {
                return this._Qual;
            }
            set {
                if ((this._Qual != value)) {
                    this._Qual = value;
                }
            }
        }
    }

    public partial class SpReportMJournalGeneralResult {

        private System.Nullable<int> _IntJournalID;

        private string _VchrAbbrevName;

        private string _VchrAbbrevName2;

        private string _VchrAlias;

        private string _VchrFullName;

        private string _TxtNotes;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        public SpReportMJournalGeneralResult() {
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName", Storage = "_VchrAbbrevName", DbType = "VarChar(100)")]
        public string VchrAbbrevName {
            get {
                return this._VchrAbbrevName;
            }
            set {
                if ((this._VchrAbbrevName != value)) {
                    this._VchrAbbrevName = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName2", Storage = "_VchrAbbrevName2", DbType = "VarChar(100)")]
        public string VchrAbbrevName2 {
            get {
                return this._VchrAbbrevName2;
            }
            set {
                if ((this._VchrAbbrevName2 != value)) {
                    this._VchrAbbrevName2 = value;
                }
            }
        }

        [Column(Name = "vchrAlias", Storage = "_VchrAlias", DbType = "VarChar(100)")]
        public string VchrAlias {
            get {
                return this._VchrAlias;
            }
            set {
                if ((this._VchrAlias != value)) {
                    this._VchrAlias = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(900)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "txtNotes", Storage = "_TxtNotes", DbType = "Text")]
        public string TxtNotes {
            get {
                return this._TxtNotes;
            }
            set {
                if ((this._TxtNotes != value)) {
                    this._TxtNotes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }
    }

    public partial class SpReportMListForUserResult {

        private System.Nullable<int> _IntReportID;

        private string _VchrName;

        private string _VchrOwner;

        private string _TxtReportXML;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private string _VchrContext;

        private System.Nullable<int> _Changes;

        public SpReportMListForUserResult() {
        }

        [Column(Name = "intReportID", Storage = "_IntReportID", DbType = "Int")]
        public System.Nullable<int> IntReportID {
            get {
                return this._IntReportID;
            }
            set {
                if ((this._IntReportID != value)) {
                    this._IntReportID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(100)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrOwner", Storage = "_VchrOwner", DbType = "VarChar(50)")]
        public string VchrOwner {
            get {
                return this._VchrOwner;
            }
            set {
                if ((this._VchrOwner != value)) {
                    this._VchrOwner = value;
                }
            }
        }

        [Column(Name = "txtReportXML", Storage = "_TxtReportXML", DbType = "Text")]
        public string TxtReportXML {
            get {
                return this._TxtReportXML;
            }
            set {
                if ((this._TxtReportXML != value)) {
                    this._TxtReportXML = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrContext", Storage = "_VchrContext", DbType = "VarChar(50)")]
        public string VchrContext {
            get {
                return this._VchrContext;
            }
            set {
                if ((this._VchrContext != value)) {
                    this._VchrContext = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialResult {

        private System.Nullable<int> _IntMaterialID;

        private System.Nullable<byte> _TintTemplate;

        private string _VchrMaterialName;

        private System.Nullable<int> _IntSiteVisitID;

        private string _VchrAccessionNo;

        private string _VchrRegNo;

        private string _VchrCollectorNo;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrIDBy;

        private System.Nullable<System.DateTime> _DtIDDate;

        private System.Nullable<int> _IntIDRefID;

        private string _VchrIDMethod;

        private string _VchrIDAccuracy;

        private string _VchrIDNameQual;

        private string _VchrIDNotes;

        private string _VchrInstitution;

        private string _VchrCollectionMethod;

        private string _VchrAbundance;

        private string _VchrMacroHabitat;

        private string _VchrMicroHabitat;

        private string _VchrSource;

        private System.Nullable<int> _IntAssociateOf;

        private string _VchrSpecialLabel;

        private string _VchrOriginalLabel;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntTrapID;

        private string _VchrIDRefPage;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrFullName;

        private string _TxtFullRTF;

        public SpReportMMaterialResult() {
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_VchrMaterialName", DbType = "VarChar(255)")]
        public string VchrMaterialName {
            get {
                return this._VchrMaterialName;
            }
            set {
                if ((this._VchrMaterialName != value)) {
                    this._VchrMaterialName = value;
                }
            }
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }

        [Column(Name = "vchrAccessionNo", Storage = "_VchrAccessionNo", DbType = "VarChar(50)")]
        public string VchrAccessionNo {
            get {
                return this._VchrAccessionNo;
            }
            set {
                if ((this._VchrAccessionNo != value)) {
                    this._VchrAccessionNo = value;
                }
            }
        }

        [Column(Name = "vchrRegNo", Storage = "_VchrRegNo", DbType = "VarChar(50)")]
        public string VchrRegNo {
            get {
                return this._VchrRegNo;
            }
            set {
                if ((this._VchrRegNo != value)) {
                    this._VchrRegNo = value;
                }
            }
        }

        [Column(Name = "vchrCollectorNo", Storage = "_VchrCollectorNo", DbType = "VarChar(50)")]
        public string VchrCollectorNo {
            get {
                return this._VchrCollectorNo;
            }
            set {
                if ((this._VchrCollectorNo != value)) {
                    this._VchrCollectorNo = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrIDBy", Storage = "_VchrIDBy", DbType = "VarChar(50)")]
        public string VchrIDBy {
            get {
                return this._VchrIDBy;
            }
            set {
                if ((this._VchrIDBy != value)) {
                    this._VchrIDBy = value;
                }
            }
        }

        [Column(Name = "dtIDDate", Storage = "_DtIDDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtIDDate {
            get {
                return this._DtIDDate;
            }
            set {
                if ((this._DtIDDate != value)) {
                    this._DtIDDate = value;
                }
            }
        }

        [Column(Name = "intIDRefID", Storage = "_IntIDRefID", DbType = "Int")]
        public System.Nullable<int> IntIDRefID {
            get {
                return this._IntIDRefID;
            }
            set {
                if ((this._IntIDRefID != value)) {
                    this._IntIDRefID = value;
                }
            }
        }

        [Column(Name = "vchrIDMethod", Storage = "_VchrIDMethod", DbType = "VarChar(255)")]
        public string VchrIDMethod {
            get {
                return this._VchrIDMethod;
            }
            set {
                if ((this._VchrIDMethod != value)) {
                    this._VchrIDMethod = value;
                }
            }
        }

        [Column(Name = "vchrIDAccuracy", Storage = "_VchrIDAccuracy", DbType = "VarChar(50)")]
        public string VchrIDAccuracy {
            get {
                return this._VchrIDAccuracy;
            }
            set {
                if ((this._VchrIDAccuracy != value)) {
                    this._VchrIDAccuracy = value;
                }
            }
        }

        [Column(Name = "vchrIDNameQual", Storage = "_VchrIDNameQual", DbType = "VarChar(255)")]
        public string VchrIDNameQual {
            get {
                return this._VchrIDNameQual;
            }
            set {
                if ((this._VchrIDNameQual != value)) {
                    this._VchrIDNameQual = value;
                }
            }
        }

        [Column(Name = "vchrIDNotes", Storage = "_VchrIDNotes", DbType = "VarChar(255)")]
        public string VchrIDNotes {
            get {
                return this._VchrIDNotes;
            }
            set {
                if ((this._VchrIDNotes != value)) {
                    this._VchrIDNotes = value;
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_VchrInstitution", DbType = "VarChar(100)")]
        public string VchrInstitution {
            get {
                return this._VchrInstitution;
            }
            set {
                if ((this._VchrInstitution != value)) {
                    this._VchrInstitution = value;
                }
            }
        }

        [Column(Name = "vchrCollectionMethod", Storage = "_VchrCollectionMethod", DbType = "VarChar(50)")]
        public string VchrCollectionMethod {
            get {
                return this._VchrCollectionMethod;
            }
            set {
                if ((this._VchrCollectionMethod != value)) {
                    this._VchrCollectionMethod = value;
                }
            }
        }

        [Column(Name = "vchrAbundance", Storage = "_VchrAbundance", DbType = "VarChar(255)")]
        public string VchrAbundance {
            get {
                return this._VchrAbundance;
            }
            set {
                if ((this._VchrAbundance != value)) {
                    this._VchrAbundance = value;
                }
            }
        }

        [Column(Name = "vchrMacroHabitat", Storage = "_VchrMacroHabitat", DbType = "VarChar(255)")]
        public string VchrMacroHabitat {
            get {
                return this._VchrMacroHabitat;
            }
            set {
                if ((this._VchrMacroHabitat != value)) {
                    this._VchrMacroHabitat = value;
                }
            }
        }

        [Column(Name = "vchrMicroHabitat", Storage = "_VchrMicroHabitat", DbType = "VarChar(255)")]
        public string VchrMicroHabitat {
            get {
                return this._VchrMicroHabitat;
            }
            set {
                if ((this._VchrMicroHabitat != value)) {
                    this._VchrMicroHabitat = value;
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_VchrSource", DbType = "VarChar(50)")]
        public string VchrSource {
            get {
                return this._VchrSource;
            }
            set {
                if ((this._VchrSource != value)) {
                    this._VchrSource = value;
                }
            }
        }

        [Column(Name = "intAssociateOf", Storage = "_IntAssociateOf", DbType = "Int")]
        public System.Nullable<int> IntAssociateOf {
            get {
                return this._IntAssociateOf;
            }
            set {
                if ((this._IntAssociateOf != value)) {
                    this._IntAssociateOf = value;
                }
            }
        }

        [Column(Name = "vchrSpecialLabel", Storage = "_VchrSpecialLabel", DbType = "VarChar(500)")]
        public string VchrSpecialLabel {
            get {
                return this._VchrSpecialLabel;
            }
            set {
                if ((this._VchrSpecialLabel != value)) {
                    this._VchrSpecialLabel = value;
                }
            }
        }

        [Column(Name = "vchrOriginalLabel", Storage = "_VchrOriginalLabel", DbType = "VarChar(500)")]
        public string VchrOriginalLabel {
            get {
                return this._VchrOriginalLabel;
            }
            set {
                if ((this._VchrOriginalLabel != value)) {
                    this._VchrOriginalLabel = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }

        [Column(Name = "vchrIDRefPage", Storage = "_VchrIDRefPage", DbType = "VarChar(100)")]
        public string VchrIDRefPage {
            get {
                return this._VchrIDRefPage;
            }
            set {
                if ((this._VchrIDRefPage != value)) {
                    this._VchrIDRefPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(255)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialAssocListResult {

        private string _IntAssociateID;

        public SpReportMMaterialAssocListResult() {
        }

        [Column(Name = "intAssociateID", Storage = "_IntAssociateID", DbType = "VarChar(26)")]
        public string IntAssociateID {
            get {
                return this._IntAssociateID;
            }
            set {
                if ((this._IntAssociateID != value)) {
                    this._IntAssociateID = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialEventListResult {

        private System.Nullable<int> _IntCurationEventID;

        public SpReportMMaterialEventListResult() {
        }

        [Column(Name = "intCurationEventID", Storage = "_IntCurationEventID", DbType = "Int")]
        public System.Nullable<int> IntCurationEventID {
            get {
                return this._IntCurationEventID;
            }
            set {
                if ((this._IntCurationEventID != value)) {
                    this._IntCurationEventID = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialHistoryListResult {

        private System.Nullable<int> _IntMaterialIdentID;

        public SpReportMMaterialHistoryListResult() {
        }

        [Column(Name = "intMaterialIdentID", Storage = "_IntMaterialIdentID", DbType = "Int")]
        public System.Nullable<int> IntMaterialIdentID {
            get {
                return this._IntMaterialIdentID;
            }
            set {
                if ((this._IntMaterialIdentID != value)) {
                    this._IntMaterialIdentID = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialListForTaxonResult {

        private string _VchrName;

        private System.Nullable<byte> _TintLocalType;

        private string _VchrLocal;

        private string _VchrDistanceFromPlace;

        private string _VchrDirFromPlace;

        private System.Nullable<byte> _TintPosAreaType;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat2;

        private System.Nullable<double> _Long2;

        private string _VchrCollector;

        private System.Nullable<byte> _TintDateType;

        private System.Nullable<int> _IntDateStart;

        private System.Nullable<int> _IntDateEnd;

        private string _VchrAccessionNo;

        private string _VchrInstitution;

        public SpReportMMaterialListForTaxonResult() {
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(50)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "tintLocalType", Storage = "_TintLocalType", DbType = "TinyInt")]
        public System.Nullable<byte> TintLocalType {
            get {
                return this._TintLocalType;
            }
            set {
                if ((this._TintLocalType != value)) {
                    this._TintLocalType = value;
                }
            }
        }

        [Column(Name = "vchrLocal", Storage = "_VchrLocal", DbType = "VarChar(255)")]
        public string VchrLocal {
            get {
                return this._VchrLocal;
            }
            set {
                if ((this._VchrLocal != value)) {
                    this._VchrLocal = value;
                }
            }
        }

        [Column(Name = "vchrDistanceFromPlace", Storage = "_VchrDistanceFromPlace", DbType = "VarChar(50)")]
        public string VchrDistanceFromPlace {
            get {
                return this._VchrDistanceFromPlace;
            }
            set {
                if ((this._VchrDistanceFromPlace != value)) {
                    this._VchrDistanceFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrDirFromPlace", Storage = "_VchrDirFromPlace", DbType = "VarChar(10)")]
        public string VchrDirFromPlace {
            get {
                return this._VchrDirFromPlace;
            }
            set {
                if ((this._VchrDirFromPlace != value)) {
                    this._VchrDirFromPlace = value;
                }
            }
        }

        [Column(Name = "tintPosAreaType", Storage = "_TintPosAreaType", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosAreaType {
            get {
                return this._TintPosAreaType;
            }
            set {
                if ((this._TintPosAreaType != value)) {
                    this._TintPosAreaType = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }

        [Column(Name = "vchrCollector", Storage = "_VchrCollector", DbType = "VarChar(255)")]
        public string VchrCollector {
            get {
                return this._VchrCollector;
            }
            set {
                if ((this._VchrCollector != value)) {
                    this._VchrCollector = value;
                }
            }
        }

        [Column(Name = "tintDateType", Storage = "_TintDateType", DbType = "TinyInt")]
        public System.Nullable<byte> TintDateType {
            get {
                return this._TintDateType;
            }
            set {
                if ((this._TintDateType != value)) {
                    this._TintDateType = value;
                }
            }
        }

        [Column(Name = "intDateStart", Storage = "_IntDateStart", DbType = "Int")]
        public System.Nullable<int> IntDateStart {
            get {
                return this._IntDateStart;
            }
            set {
                if ((this._IntDateStart != value)) {
                    this._IntDateStart = value;
                }
            }
        }

        [Column(Name = "intDateEnd", Storage = "_IntDateEnd", DbType = "Int")]
        public System.Nullable<int> IntDateEnd {
            get {
                return this._IntDateEnd;
            }
            set {
                if ((this._IntDateEnd != value)) {
                    this._IntDateEnd = value;
                }
            }
        }

        [Column(Name = "vchrAccessionNo", Storage = "_VchrAccessionNo", DbType = "VarChar(50)")]
        public string VchrAccessionNo {
            get {
                return this._VchrAccessionNo;
            }
            set {
                if ((this._VchrAccessionNo != value)) {
                    this._VchrAccessionNo = value;
                }
            }
        }

        [Column(Name = "vchrInstitution", Storage = "_VchrInstitution", DbType = "VarChar(100)")]
        public string VchrInstitution {
            get {
                return this._VchrInstitution;
            }
            set {
                if ((this._VchrInstitution != value)) {
                    this._VchrInstitution = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialListForTrapResult {

        private System.Nullable<int> _IntMaterialID;

        public SpReportMMaterialListForTrapResult() {
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialListForVisitResult {

        private System.Nullable<int> _IntMaterialID;

        public SpReportMMaterialListForVisitResult() {
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }
    }

    public partial class SpReportMMaterialPartListResult {

        private System.Nullable<int> _IntMaterialPartID;

        public SpReportMMaterialPartListResult() {
        }

        [Column(Name = "intMaterialPartID", Storage = "_IntMaterialPartID", DbType = "Int")]
        public System.Nullable<int> IntMaterialPartID {
            get {
                return this._IntMaterialPartID;
            }
            set {
                if ((this._IntMaterialPartID != value)) {
                    this._IntMaterialPartID = value;
                }
            }
        }
    }

    public partial class SpReportMMultimediaGeneralResult {

        private System.Nullable<int> _IntMultimediaID;

        private string _VchrName;

        private string _VchrNumber;

        private string _VchrArtist;

        private string _VchrDateRecorded;

        private string _VchrOwner;

        private string _VchrFileExtension;

        private System.Nullable<int> _IntSizeInBytes;

        private System.Data.Linq.Binary _ImgMultimedia;

        private string _TxtCopyright;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrCaption;

        public SpReportMMultimediaGeneralResult() {
        }

        [Column(Name = "intMultimediaID", Storage = "_IntMultimediaID", DbType = "Int")]
        public System.Nullable<int> IntMultimediaID {
            get {
                return this._IntMultimediaID;
            }
            set {
                if ((this._IntMultimediaID != value)) {
                    this._IntMultimediaID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrNumber", Storage = "_VchrNumber", DbType = "VarChar(255)")]
        public string VchrNumber {
            get {
                return this._VchrNumber;
            }
            set {
                if ((this._VchrNumber != value)) {
                    this._VchrNumber = value;
                }
            }
        }

        [Column(Name = "vchrArtist", Storage = "_VchrArtist", DbType = "VarChar(255)")]
        public string VchrArtist {
            get {
                return this._VchrArtist;
            }
            set {
                if ((this._VchrArtist != value)) {
                    this._VchrArtist = value;
                }
            }
        }

        [Column(Name = "vchrDateRecorded", Storage = "_VchrDateRecorded", DbType = "VarChar(50)")]
        public string VchrDateRecorded {
            get {
                return this._VchrDateRecorded;
            }
            set {
                if ((this._VchrDateRecorded != value)) {
                    this._VchrDateRecorded = value;
                }
            }
        }

        [Column(Name = "vchrOwner", Storage = "_VchrOwner", DbType = "VarChar(255)")]
        public string VchrOwner {
            get {
                return this._VchrOwner;
            }
            set {
                if ((this._VchrOwner != value)) {
                    this._VchrOwner = value;
                }
            }
        }

        [Column(Name = "vchrFileExtension", Storage = "_VchrFileExtension", DbType = "VarChar(20)")]
        public string VchrFileExtension {
            get {
                return this._VchrFileExtension;
            }
            set {
                if ((this._VchrFileExtension != value)) {
                    this._VchrFileExtension = value;
                }
            }
        }

        [Column(Name = "intSizeInBytes", Storage = "_IntSizeInBytes", DbType = "Int")]
        public System.Nullable<int> IntSizeInBytes {
            get {
                return this._IntSizeInBytes;
            }
            set {
                if ((this._IntSizeInBytes != value)) {
                    this._IntSizeInBytes = value;
                }
            }
        }

        [Column(Name = "imgMultimedia", Storage = "_ImgMultimedia", DbType = "Image", CanBeNull = true)]
        public System.Data.Linq.Binary ImgMultimedia {
            get {
                return this._ImgMultimedia;
            }
            set {
                if ((this._ImgMultimedia != value)) {
                    this._ImgMultimedia = value;
                }
            }
        }

        [Column(Name = "txtCopyright", Storage = "_TxtCopyright", DbType = "Text")]
        public string TxtCopyright {
            get {
                return this._TxtCopyright;
            }
            set {
                if ((this._TxtCopyright != value)) {
                    this._TxtCopyright = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrCaption", Storage = "_VchrCaption", DbType = "VarChar(255)")]
        public string VchrCaption {
            get {
                return this._VchrCaption;
            }
            set {
                if ((this._VchrCaption != value)) {
                    this._VchrCaption = value;
                }
            }
        }
    }

    public partial class SpReportMNoteResult {

        private string _Value;

        public SpReportMNoteResult() {
        }

        [Column(Storage = "_Value", DbType = "Text")]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this._Value = value;
                }
            }
        }
    }

    public partial class SpReportMRefDefaultResult {

        private System.Nullable<int> _IntRefID;

        private string _VchrRefCode;

        private string _VchrRefType;

        private string _VchrAuthor;

        private string _VchrYearOfPub;

        private string _TxtFullRTF;

        public SpReportMRefDefaultResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrRefType", Storage = "_VchrRefType", DbType = "VarChar(20)")]
        public string VchrRefType {
            get {
                return this._VchrRefType;
            }
            set {
                if ((this._VchrRefType != value)) {
                    this._VchrRefType = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(900)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(10)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }
    }

    public partial class SpReportMRefGeneralResult {

        private System.Nullable<int> _IntRefID;

        private string _VchrRefCode;

        private string _VchrAuthor;

        private string _VchrTitle;

        private string _VchrBookTitle;

        private string _VchrEditor;

        private string _VchrRefType;

        private string _VchrYearOfPub;

        private string _VchrActualDate;

        private System.Nullable<int> _IntJournalID;

        private string _VchrPartNo;

        private string _VchrSeries;

        private string _VchrPublisher;

        private string _VchrPlace;

        private string _VchrVolume;

        private string _VchrPages;

        private string _VchrTotalPages;

        private string _VchrPossess;

        private string _VchrSource;

        private string _VchrEdition;

        private string _VchrISBN;

        private string _VchrISSN;

        private string _TxtAbstract;

        private string _TxtFullText;

        private string _TxtFullRTF;

        private System.Nullable<int> _IntStartPage;

        private System.Nullable<int> _IntEndPage;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrFullName;

        private string _VchrAbbrevName;

        private string _VchrAbbrevName2;

        public SpReportMRefGeneralResult() {
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(900)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "vchrTitle", Storage = "_VchrTitle", DbType = "VarChar(900)")]
        public string VchrTitle {
            get {
                return this._VchrTitle;
            }
            set {
                if ((this._VchrTitle != value)) {
                    this._VchrTitle = value;
                }
            }
        }

        [Column(Name = "vchrBookTitle", Storage = "_VchrBookTitle", DbType = "VarChar(900)")]
        public string VchrBookTitle {
            get {
                return this._VchrBookTitle;
            }
            set {
                if ((this._VchrBookTitle != value)) {
                    this._VchrBookTitle = value;
                }
            }
        }

        [Column(Name = "vchrEditor", Storage = "_VchrEditor", DbType = "VarChar(500)")]
        public string VchrEditor {
            get {
                return this._VchrEditor;
            }
            set {
                if ((this._VchrEditor != value)) {
                    this._VchrEditor = value;
                }
            }
        }

        [Column(Name = "vchrRefType", Storage = "_VchrRefType", DbType = "VarChar(20)")]
        public string VchrRefType {
            get {
                return this._VchrRefType;
            }
            set {
                if ((this._VchrRefType != value)) {
                    this._VchrRefType = value;
                }
            }
        }

        [Column(Name = "vchrYearOfPub", Storage = "_VchrYearOfPub", DbType = "VarChar(10)")]
        public string VchrYearOfPub {
            get {
                return this._VchrYearOfPub;
            }
            set {
                if ((this._VchrYearOfPub != value)) {
                    this._VchrYearOfPub = value;
                }
            }
        }

        [Column(Name = "vchrActualDate", Storage = "_VchrActualDate", DbType = "VarChar(50)")]
        public string VchrActualDate {
            get {
                return this._VchrActualDate;
            }
            set {
                if ((this._VchrActualDate != value)) {
                    this._VchrActualDate = value;
                }
            }
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }

        [Column(Name = "vchrPartNo", Storage = "_VchrPartNo", DbType = "VarChar(50)")]
        public string VchrPartNo {
            get {
                return this._VchrPartNo;
            }
            set {
                if ((this._VchrPartNo != value)) {
                    this._VchrPartNo = value;
                }
            }
        }

        [Column(Name = "vchrSeries", Storage = "_VchrSeries", DbType = "VarChar(50)")]
        public string VchrSeries {
            get {
                return this._VchrSeries;
            }
            set {
                if ((this._VchrSeries != value)) {
                    this._VchrSeries = value;
                }
            }
        }

        [Column(Name = "vchrPublisher", Storage = "_VchrPublisher", DbType = "VarChar(200)")]
        public string VchrPublisher {
            get {
                return this._VchrPublisher;
            }
            set {
                if ((this._VchrPublisher != value)) {
                    this._VchrPublisher = value;
                }
            }
        }

        [Column(Name = "vchrPlace", Storage = "_VchrPlace", DbType = "VarChar(200)")]
        public string VchrPlace {
            get {
                return this._VchrPlace;
            }
            set {
                if ((this._VchrPlace != value)) {
                    this._VchrPlace = value;
                }
            }
        }

        [Column(Name = "vchrVolume", Storage = "_VchrVolume", DbType = "VarChar(50)")]
        public string VchrVolume {
            get {
                return this._VchrVolume;
            }
            set {
                if ((this._VchrVolume != value)) {
                    this._VchrVolume = value;
                }
            }
        }

        [Column(Name = "vchrPages", Storage = "_VchrPages", DbType = "VarChar(50)")]
        public string VchrPages {
            get {
                return this._VchrPages;
            }
            set {
                if ((this._VchrPages != value)) {
                    this._VchrPages = value;
                }
            }
        }

        [Column(Name = "vchrTotalPages", Storage = "_VchrTotalPages", DbType = "VarChar(50)")]
        public string VchrTotalPages {
            get {
                return this._VchrTotalPages;
            }
            set {
                if ((this._VchrTotalPages != value)) {
                    this._VchrTotalPages = value;
                }
            }
        }

        [Column(Name = "vchrPossess", Storage = "_VchrPossess", DbType = "VarChar(50)")]
        public string VchrPossess {
            get {
                return this._VchrPossess;
            }
            set {
                if ((this._VchrPossess != value)) {
                    this._VchrPossess = value;
                }
            }
        }

        [Column(Name = "vchrSource", Storage = "_VchrSource", DbType = "VarChar(50)")]
        public string VchrSource {
            get {
                return this._VchrSource;
            }
            set {
                if ((this._VchrSource != value)) {
                    this._VchrSource = value;
                }
            }
        }

        [Column(Name = "vchrEdition", Storage = "_VchrEdition", DbType = "VarChar(50)")]
        public string VchrEdition {
            get {
                return this._VchrEdition;
            }
            set {
                if ((this._VchrEdition != value)) {
                    this._VchrEdition = value;
                }
            }
        }

        [Column(Name = "vchrISBN", Storage = "_VchrISBN", DbType = "VarChar(30)")]
        public string VchrISBN {
            get {
                return this._VchrISBN;
            }
            set {
                if ((this._VchrISBN != value)) {
                    this._VchrISBN = value;
                }
            }
        }

        [Column(Name = "vchrISSN", Storage = "_VchrISSN", DbType = "VarChar(30)")]
        public string VchrISSN {
            get {
                return this._VchrISSN;
            }
            set {
                if ((this._VchrISSN != value)) {
                    this._VchrISSN = value;
                }
            }
        }

        [Column(Name = "txtAbstract", Storage = "_TxtAbstract", DbType = "Text")]
        public string TxtAbstract {
            get {
                return this._TxtAbstract;
            }
            set {
                if ((this._TxtAbstract != value)) {
                    this._TxtAbstract = value;
                }
            }
        }

        [Column(Name = "txtFullText", Storage = "_TxtFullText", DbType = "Text")]
        public string TxtFullText {
            get {
                return this._TxtFullText;
            }
            set {
                if ((this._TxtFullText != value)) {
                    this._TxtFullText = value;
                }
            }
        }

        [Column(Name = "txtFullRTF", Storage = "_TxtFullRTF", DbType = "Text")]
        public string TxtFullRTF {
            get {
                return this._TxtFullRTF;
            }
            set {
                if ((this._TxtFullRTF != value)) {
                    this._TxtFullRTF = value;
                }
            }
        }

        [Column(Name = "intStartPage", Storage = "_IntStartPage", DbType = "Int")]
        public System.Nullable<int> IntStartPage {
            get {
                return this._IntStartPage;
            }
            set {
                if ((this._IntStartPage != value)) {
                    this._IntStartPage = value;
                }
            }
        }

        [Column(Name = "intEndPage", Storage = "_IntEndPage", DbType = "Int")]
        public System.Nullable<int> IntEndPage {
            get {
                return this._IntEndPage;
            }
            set {
                if ((this._IntEndPage != value)) {
                    this._IntEndPage = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(900)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName", Storage = "_VchrAbbrevName", DbType = "VarChar(100)")]
        public string VchrAbbrevName {
            get {
                return this._VchrAbbrevName;
            }
            set {
                if ((this._VchrAbbrevName != value)) {
                    this._VchrAbbrevName = value;
                }
            }
        }

        [Column(Name = "vchrAbbrevName2", Storage = "_VchrAbbrevName2", DbType = "VarChar(100)")]
        public string VchrAbbrevName2 {
            get {
                return this._VchrAbbrevName2;
            }
            set {
                if ((this._VchrAbbrevName2 != value)) {
                    this._VchrAbbrevName2 = value;
                }
            }
        }
    }

    public partial class SpReportMRefJournalResult {

        private System.Nullable<int> _IntJournalID;

        public SpReportMRefJournalResult() {
        }

        [Column(Name = "intJournalID", Storage = "_IntJournalID", DbType = "Int")]
        public System.Nullable<int> IntJournalID {
            get {
                return this._IntJournalID;
            }
            set {
                if ((this._IntJournalID != value)) {
                    this._IntJournalID = value;
                }
            }
        }
    }

    public partial class SpReportMRegionResult {

        private string _VchrName;

        private string _VchrRank;

        public SpReportMRegionResult() {
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(50)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrRank", Storage = "_VchrRank", DbType = "VarChar(255)")]
        public string VchrRank {
            get {
                return this._VchrRank;
            }
            set {
                if ((this._VchrRank != value)) {
                    this._VchrRank = value;
                }
            }
        }
    }

    public partial class SpReportMRegionParentageResult {

        private string _Parentage;

        public SpReportMRegionParentageResult() {
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(1000)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }
    }

    public partial class SpReportMSiteResult {

        private System.Nullable<int> _IntSiteID;

        private string _VchrSiteName;

        private System.Nullable<int> _IntPoliticalRegionID;

        private System.Nullable<int> _IntSiteGroupID;

        private System.Nullable<byte> _TintLocalType;

        private string _VchrLocal;

        private string _VchrDistanceFromPlace;

        private string _VchrDirFromPlace;

        private string _VchrInformalLocal;

        private System.Nullable<byte> _TintPosCoordinates;

        private System.Nullable<byte> _TintPosAreaType;

        private System.Nullable<double> _FltPosY1;

        private System.Nullable<double> _FltPosX1;

        private System.Nullable<double> _FltPosX2;

        private System.Nullable<double> _FltPosY2;

        private System.Nullable<byte> _TintPosXYDisplayFormat;

        private string _VchrPosSource;

        private string _VchrPosError;

        private string _VchrPosWho;

        private string _VchrPosDate;

        private string _VchrPosOriginal;

        private string _VchrPosUTMSource;

        private string _VchrPosUTMMapProj;

        private string _VchrPosUTMMapName;

        private string _VchrPosUTMMapVer;

        private System.Nullable<byte> _TintElevType;

        private System.Nullable<double> _FltElevUpper;

        private System.Nullable<double> _FltElevLower;

        private System.Nullable<double> _FltElevDepth;

        private string _VchrElevUnits;

        private string _VchrElevSource;

        private string _VchrElevError;

        private string _VchrGeoEra;

        private string _VchrGeoState;

        private string _VchrGeoPlate;

        private string _VchrGeoFormation;

        private string _VchrGeoMember;

        private string _VchrGeoBed;

        private string _VchrGeoName;

        private string _VchrGeoAgeBottom;

        private string _VchrGeoAgeTop;

        private string _VchrGeoNotes;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        public SpReportMSiteResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrSiteName", Storage = "_VchrSiteName", DbType = "VarChar(100)")]
        public string VchrSiteName {
            get {
                return this._VchrSiteName;
            }
            set {
                if ((this._VchrSiteName != value)) {
                    this._VchrSiteName = value;
                }
            }
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_IntPoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> IntPoliticalRegionID {
            get {
                return this._IntPoliticalRegionID;
            }
            set {
                if ((this._IntPoliticalRegionID != value)) {
                    this._IntPoliticalRegionID = value;
                }
            }
        }

        [Column(Name = "intSiteGroupID", Storage = "_IntSiteGroupID", DbType = "Int")]
        public System.Nullable<int> IntSiteGroupID {
            get {
                return this._IntSiteGroupID;
            }
            set {
                if ((this._IntSiteGroupID != value)) {
                    this._IntSiteGroupID = value;
                }
            }
        }

        [Column(Name = "tintLocalType", Storage = "_TintLocalType", DbType = "TinyInt")]
        public System.Nullable<byte> TintLocalType {
            get {
                return this._TintLocalType;
            }
            set {
                if ((this._TintLocalType != value)) {
                    this._TintLocalType = value;
                }
            }
        }

        [Column(Name = "vchrLocal", Storage = "_VchrLocal", DbType = "VarChar(255)")]
        public string VchrLocal {
            get {
                return this._VchrLocal;
            }
            set {
                if ((this._VchrLocal != value)) {
                    this._VchrLocal = value;
                }
            }
        }

        [Column(Name = "vchrDistanceFromPlace", Storage = "_VchrDistanceFromPlace", DbType = "VarChar(50)")]
        public string VchrDistanceFromPlace {
            get {
                return this._VchrDistanceFromPlace;
            }
            set {
                if ((this._VchrDistanceFromPlace != value)) {
                    this._VchrDistanceFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrDirFromPlace", Storage = "_VchrDirFromPlace", DbType = "VarChar(10)")]
        public string VchrDirFromPlace {
            get {
                return this._VchrDirFromPlace;
            }
            set {
                if ((this._VchrDirFromPlace != value)) {
                    this._VchrDirFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrInformalLocal", Storage = "_VchrInformalLocal", DbType = "VarChar(255)")]
        public string VchrInformalLocal {
            get {
                return this._VchrInformalLocal;
            }
            set {
                if ((this._VchrInformalLocal != value)) {
                    this._VchrInformalLocal = value;
                }
            }
        }

        [Column(Name = "tintPosCoordinates", Storage = "_TintPosCoordinates", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosCoordinates {
            get {
                return this._TintPosCoordinates;
            }
            set {
                if ((this._TintPosCoordinates != value)) {
                    this._TintPosCoordinates = value;
                }
            }
        }

        [Column(Name = "tintPosAreaType", Storage = "_TintPosAreaType", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosAreaType {
            get {
                return this._TintPosAreaType;
            }
            set {
                if ((this._TintPosAreaType != value)) {
                    this._TintPosAreaType = value;
                }
            }
        }

        [Column(Name = "fltPosY1", Storage = "_FltPosY1", DbType = "Float")]
        public System.Nullable<double> FltPosY1 {
            get {
                return this._FltPosY1;
            }
            set {
                if ((this._FltPosY1 != value)) {
                    this._FltPosY1 = value;
                }
            }
        }

        [Column(Name = "fltPosX1", Storage = "_FltPosX1", DbType = "Float")]
        public System.Nullable<double> FltPosX1 {
            get {
                return this._FltPosX1;
            }
            set {
                if ((this._FltPosX1 != value)) {
                    this._FltPosX1 = value;
                }
            }
        }

        [Column(Name = "fltPosX2", Storage = "_FltPosX2", DbType = "Float")]
        public System.Nullable<double> FltPosX2 {
            get {
                return this._FltPosX2;
            }
            set {
                if ((this._FltPosX2 != value)) {
                    this._FltPosX2 = value;
                }
            }
        }

        [Column(Name = "fltPosY2", Storage = "_FltPosY2", DbType = "Float")]
        public System.Nullable<double> FltPosY2 {
            get {
                return this._FltPosY2;
            }
            set {
                if ((this._FltPosY2 != value)) {
                    this._FltPosY2 = value;
                }
            }
        }

        [Column(Name = "tintPosXYDisplayFormat", Storage = "_TintPosXYDisplayFormat", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosXYDisplayFormat {
            get {
                return this._TintPosXYDisplayFormat;
            }
            set {
                if ((this._TintPosXYDisplayFormat != value)) {
                    this._TintPosXYDisplayFormat = value;
                }
            }
        }

        [Column(Name = "vchrPosSource", Storage = "_VchrPosSource", DbType = "VarChar(50)")]
        public string VchrPosSource {
            get {
                return this._VchrPosSource;
            }
            set {
                if ((this._VchrPosSource != value)) {
                    this._VchrPosSource = value;
                }
            }
        }

        [Column(Name = "vchrPosError", Storage = "_VchrPosError", DbType = "VarChar(20)")]
        public string VchrPosError {
            get {
                return this._VchrPosError;
            }
            set {
                if ((this._VchrPosError != value)) {
                    this._VchrPosError = value;
                }
            }
        }

        [Column(Name = "vchrPosWho", Storage = "_VchrPosWho", DbType = "VarChar(20)")]
        public string VchrPosWho {
            get {
                return this._VchrPosWho;
            }
            set {
                if ((this._VchrPosWho != value)) {
                    this._VchrPosWho = value;
                }
            }
        }

        [Column(Name = "vchrPosDate", Storage = "_VchrPosDate", DbType = "VarChar(20)")]
        public string VchrPosDate {
            get {
                return this._VchrPosDate;
            }
            set {
                if ((this._VchrPosDate != value)) {
                    this._VchrPosDate = value;
                }
            }
        }

        [Column(Name = "vchrPosOriginal", Storage = "_VchrPosOriginal", DbType = "VarChar(20)")]
        public string VchrPosOriginal {
            get {
                return this._VchrPosOriginal;
            }
            set {
                if ((this._VchrPosOriginal != value)) {
                    this._VchrPosOriginal = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMSource", Storage = "_VchrPosUTMSource", DbType = "VarChar(255)")]
        public string VchrPosUTMSource {
            get {
                return this._VchrPosUTMSource;
            }
            set {
                if ((this._VchrPosUTMSource != value)) {
                    this._VchrPosUTMSource = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapProj", Storage = "_VchrPosUTMMapProj", DbType = "VarChar(255)")]
        public string VchrPosUTMMapProj {
            get {
                return this._VchrPosUTMMapProj;
            }
            set {
                if ((this._VchrPosUTMMapProj != value)) {
                    this._VchrPosUTMMapProj = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapName", Storage = "_VchrPosUTMMapName", DbType = "VarChar(255)")]
        public string VchrPosUTMMapName {
            get {
                return this._VchrPosUTMMapName;
            }
            set {
                if ((this._VchrPosUTMMapName != value)) {
                    this._VchrPosUTMMapName = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapVer", Storage = "_VchrPosUTMMapVer", DbType = "VarChar(255)")]
        public string VchrPosUTMMapVer {
            get {
                return this._VchrPosUTMMapVer;
            }
            set {
                if ((this._VchrPosUTMMapVer != value)) {
                    this._VchrPosUTMMapVer = value;
                }
            }
        }

        [Column(Name = "tintElevType", Storage = "_TintElevType", DbType = "TinyInt")]
        public System.Nullable<byte> TintElevType {
            get {
                return this._TintElevType;
            }
            set {
                if ((this._TintElevType != value)) {
                    this._TintElevType = value;
                }
            }
        }

        [Column(Name = "fltElevUpper", Storage = "_FltElevUpper", DbType = "Float")]
        public System.Nullable<double> FltElevUpper {
            get {
                return this._FltElevUpper;
            }
            set {
                if ((this._FltElevUpper != value)) {
                    this._FltElevUpper = value;
                }
            }
        }

        [Column(Name = "fltElevLower", Storage = "_FltElevLower", DbType = "Float")]
        public System.Nullable<double> FltElevLower {
            get {
                return this._FltElevLower;
            }
            set {
                if ((this._FltElevLower != value)) {
                    this._FltElevLower = value;
                }
            }
        }

        [Column(Name = "fltElevDepth", Storage = "_FltElevDepth", DbType = "Float")]
        public System.Nullable<double> FltElevDepth {
            get {
                return this._FltElevDepth;
            }
            set {
                if ((this._FltElevDepth != value)) {
                    this._FltElevDepth = value;
                }
            }
        }

        [Column(Name = "vchrElevUnits", Storage = "_VchrElevUnits", DbType = "VarChar(20)")]
        public string VchrElevUnits {
            get {
                return this._VchrElevUnits;
            }
            set {
                if ((this._VchrElevUnits != value)) {
                    this._VchrElevUnits = value;
                }
            }
        }

        [Column(Name = "vchrElevSource", Storage = "_VchrElevSource", DbType = "VarChar(50)")]
        public string VchrElevSource {
            get {
                return this._VchrElevSource;
            }
            set {
                if ((this._VchrElevSource != value)) {
                    this._VchrElevSource = value;
                }
            }
        }

        [Column(Name = "vchrElevError", Storage = "_VchrElevError", DbType = "VarChar(20)")]
        public string VchrElevError {
            get {
                return this._VchrElevError;
            }
            set {
                if ((this._VchrElevError != value)) {
                    this._VchrElevError = value;
                }
            }
        }

        [Column(Name = "vchrGeoEra", Storage = "_VchrGeoEra", DbType = "VarChar(50)")]
        public string VchrGeoEra {
            get {
                return this._VchrGeoEra;
            }
            set {
                if ((this._VchrGeoEra != value)) {
                    this._VchrGeoEra = value;
                }
            }
        }

        [Column(Name = "vchrGeoState", Storage = "_VchrGeoState", DbType = "VarChar(50)")]
        public string VchrGeoState {
            get {
                return this._VchrGeoState;
            }
            set {
                if ((this._VchrGeoState != value)) {
                    this._VchrGeoState = value;
                }
            }
        }

        [Column(Name = "vchrGeoPlate", Storage = "_VchrGeoPlate", DbType = "VarChar(50)")]
        public string VchrGeoPlate {
            get {
                return this._VchrGeoPlate;
            }
            set {
                if ((this._VchrGeoPlate != value)) {
                    this._VchrGeoPlate = value;
                }
            }
        }

        [Column(Name = "vchrGeoFormation", Storage = "_VchrGeoFormation", DbType = "VarChar(50)")]
        public string VchrGeoFormation {
            get {
                return this._VchrGeoFormation;
            }
            set {
                if ((this._VchrGeoFormation != value)) {
                    this._VchrGeoFormation = value;
                }
            }
        }

        [Column(Name = "vchrGeoMember", Storage = "_VchrGeoMember", DbType = "VarChar(50)")]
        public string VchrGeoMember {
            get {
                return this._VchrGeoMember;
            }
            set {
                if ((this._VchrGeoMember != value)) {
                    this._VchrGeoMember = value;
                }
            }
        }

        [Column(Name = "vchrGeoBed", Storage = "_VchrGeoBed", DbType = "VarChar(50)")]
        public string VchrGeoBed {
            get {
                return this._VchrGeoBed;
            }
            set {
                if ((this._VchrGeoBed != value)) {
                    this._VchrGeoBed = value;
                }
            }
        }

        [Column(Name = "vchrGeoName", Storage = "_VchrGeoName", DbType = "VarChar(50)")]
        public string VchrGeoName {
            get {
                return this._VchrGeoName;
            }
            set {
                if ((this._VchrGeoName != value)) {
                    this._VchrGeoName = value;
                }
            }
        }

        [Column(Name = "vchrGeoAgeBottom", Storage = "_VchrGeoAgeBottom", DbType = "VarChar(50)")]
        public string VchrGeoAgeBottom {
            get {
                return this._VchrGeoAgeBottom;
            }
            set {
                if ((this._VchrGeoAgeBottom != value)) {
                    this._VchrGeoAgeBottom = value;
                }
            }
        }

        [Column(Name = "vchrGeoAgeTop", Storage = "_VchrGeoAgeTop", DbType = "VarChar(50)")]
        public string VchrGeoAgeTop {
            get {
                return this._VchrGeoAgeTop;
            }
            set {
                if ((this._VchrGeoAgeTop != value)) {
                    this._VchrGeoAgeTop = value;
                }
            }
        }

        [Column(Name = "vchrGeoNotes", Storage = "_VchrGeoNotes", DbType = "VarChar(255)")]
        public string VchrGeoNotes {
            get {
                return this._VchrGeoNotes;
            }
            set {
                if ((this._VchrGeoNotes != value)) {
                    this._VchrGeoNotes = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpReportMSiteListForRegionResult {

        private System.Nullable<int> _IntSiteID;

        public SpReportMSiteListForRegionResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }
    }

    public partial class SpReportMSparcDeduceIDResult {

        private System.Nullable<int> _NewID;

        public SpReportMSparcDeduceIDResult() {
        }

        [Column(Storage = "_NewID", DbType = "Int")]
        public System.Nullable<int> NewID {
            get {
                return this._NewID;
            }
            set {
                if ((this._NewID != value)) {
                    this._NewID = value;
                }
            }
        }
    }

    public partial class SpReportMStorageResult {

        private string _Parentage;

        private string _Qual;

        public SpReportMStorageResult() {
        }

        [Column(Storage = "_Parentage", DbType = "VarChar(255)")]
        public string Parentage {
            get {
                return this._Parentage;
            }
            set {
                if ((this._Parentage != value)) {
                    this._Parentage = value;
                }
            }
        }

        [Column(Storage = "_Qual", DbType = "Text")]
        public string Qual {
            get {
                return this._Qual;
            }
            set {
                if ((this._Qual != value)) {
                    this._Qual = value;
                }
            }
        }
    }

    public partial class SpReportMTraitResult {

        private string _Value;

        public SpReportMTraitResult() {
        }

        [Column(Storage = "_Value", DbType = "VarChar(255)")]
        public string Value {
            get {
                return this._Value;
            }
            set {
                if ((this._Value != value)) {
                    this._Value = value;
                }
            }
        }
    }

    public partial class SpReportMTrapResult {

        private System.Nullable<int> _IntTrapID;

        private System.Nullable<int> _IntSiteID;

        private string _VchrTrapName;

        private string _VchrTrapType;

        private string _VchrDescription;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        public SpReportMTrapResult() {
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrTrapName", Storage = "_VchrTrapName", DbType = "VarChar(100)")]
        public string VchrTrapName {
            get {
                return this._VchrTrapName;
            }
            set {
                if ((this._VchrTrapName != value)) {
                    this._VchrTrapName = value;
                }
            }
        }

        [Column(Name = "vchrTrapType", Storage = "_VchrTrapType", DbType = "VarChar(50)")]
        public string VchrTrapType {
            get {
                return this._VchrTrapType;
            }
            set {
                if ((this._VchrTrapType != value)) {
                    this._VchrTrapType = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(255)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpReportMTrapListForSiteResult {

        private System.Nullable<int> _IntTrapID;

        public SpReportMTrapListForSiteResult() {
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }
    }

    public partial class SpReportMTrapListForVisitResult {

        private System.Nullable<int> _IntTrapID;

        public SpReportMTrapListForVisitResult() {
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }
    }

    public partial class SpReportMVisitResult {

        private System.Nullable<int> _IntSiteVisitID;

        private System.Nullable<int> _IntSiteID;

        private string _VchrSiteVisitName;

        private string _VchrFieldNumber;

        private string _VchrCollector;

        private System.Nullable<byte> _TintDateType;

        private System.Nullable<int> _IntDateStart;

        private System.Nullable<int> _IntDateEnd;

        private System.Nullable<int> _IntTimeStart;

        private System.Nullable<int> _IntTimeEnd;

        private string _VchrCasualTime;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        public SpReportMVisitResult() {
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrSiteVisitName", Storage = "_VchrSiteVisitName", DbType = "VarChar(255)")]
        public string VchrSiteVisitName {
            get {
                return this._VchrSiteVisitName;
            }
            set {
                if ((this._VchrSiteVisitName != value)) {
                    this._VchrSiteVisitName = value;
                }
            }
        }

        [Column(Name = "vchrFieldNumber", Storage = "_VchrFieldNumber", DbType = "VarChar(50)")]
        public string VchrFieldNumber {
            get {
                return this._VchrFieldNumber;
            }
            set {
                if ((this._VchrFieldNumber != value)) {
                    this._VchrFieldNumber = value;
                }
            }
        }

        [Column(Name = "vchrCollector", Storage = "_VchrCollector", DbType = "VarChar(255)")]
        public string VchrCollector {
            get {
                return this._VchrCollector;
            }
            set {
                if ((this._VchrCollector != value)) {
                    this._VchrCollector = value;
                }
            }
        }

        [Column(Name = "tintDateType", Storage = "_TintDateType", DbType = "TinyInt")]
        public System.Nullable<byte> TintDateType {
            get {
                return this._TintDateType;
            }
            set {
                if ((this._TintDateType != value)) {
                    this._TintDateType = value;
                }
            }
        }

        [Column(Name = "intDateStart", Storage = "_IntDateStart", DbType = "Int")]
        public System.Nullable<int> IntDateStart {
            get {
                return this._IntDateStart;
            }
            set {
                if ((this._IntDateStart != value)) {
                    this._IntDateStart = value;
                }
            }
        }

        [Column(Name = "intDateEnd", Storage = "_IntDateEnd", DbType = "Int")]
        public System.Nullable<int> IntDateEnd {
            get {
                return this._IntDateEnd;
            }
            set {
                if ((this._IntDateEnd != value)) {
                    this._IntDateEnd = value;
                }
            }
        }

        [Column(Name = "intTimeStart", Storage = "_IntTimeStart", DbType = "Int")]
        public System.Nullable<int> IntTimeStart {
            get {
                return this._IntTimeStart;
            }
            set {
                if ((this._IntTimeStart != value)) {
                    this._IntTimeStart = value;
                }
            }
        }

        [Column(Name = "intTimeEnd", Storage = "_IntTimeEnd", DbType = "Int")]
        public System.Nullable<int> IntTimeEnd {
            get {
                return this._IntTimeEnd;
            }
            set {
                if ((this._IntTimeEnd != value)) {
                    this._IntTimeEnd = value;
                }
            }
        }

        [Column(Name = "vchrCasualTime", Storage = "_VchrCasualTime", DbType = "VarChar(255)")]
        public string VchrCasualTime {
            get {
                return this._VchrCasualTime;
            }
            set {
                if ((this._VchrCasualTime != value)) {
                    this._VchrCasualTime = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpReportMVisitListForSiteResult {

        private System.Nullable<int> _IntSiteVisitID;

        public SpReportMVisitListForSiteResult() {
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }
    }

    public partial class SpReportSitesForTaxaResult {

        private System.Nullable<int> _BiotaID;

        private string _BiotaFullName;

        private string _FullRegion;

        private System.Nullable<int> _SiteID;

        private string _SiteName;

        private System.Nullable<byte> _LocalType;

        private string _Local;

        private string _DistanceFromPlace;

        private string _DirFromPlace;

        private System.Nullable<byte> _AreaType;

        private System.Nullable<double> _Lat;

        private System.Nullable<double> _Long;

        private System.Nullable<double> _Lat2;

        private System.Nullable<double> _Long2;

        public SpReportSitesForTaxaResult() {
        }

        [Column(Storage = "_BiotaID", DbType = "Int")]
        public System.Nullable<int> BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this._BiotaID = value;
                }
            }
        }

        [Column(Storage = "_BiotaFullName", DbType = "VarChar(255)")]
        public string BiotaFullName {
            get {
                return this._BiotaFullName;
            }
            set {
                if ((this._BiotaFullName != value)) {
                    this._BiotaFullName = value;
                }
            }
        }

        [Column(Storage = "_FullRegion", DbType = "VarChar(2000)")]
        public string FullRegion {
            get {
                return this._FullRegion;
            }
            set {
                if ((this._FullRegion != value)) {
                    this._FullRegion = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_SiteName", DbType = "VarChar(100)")]
        public string SiteName {
            get {
                return this._SiteName;
            }
            set {
                if ((this._SiteName != value)) {
                    this._SiteName = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Local", DbType = "VarChar(255)")]
        public string Local {
            get {
                return this._Local;
            }
            set {
                if ((this._Local != value)) {
                    this._Local = value;
                }
            }
        }

        [Column(Storage = "_DistanceFromPlace", DbType = "VarChar(50)")]
        public string DistanceFromPlace {
            get {
                return this._DistanceFromPlace;
            }
            set {
                if ((this._DistanceFromPlace != value)) {
                    this._DistanceFromPlace = value;
                }
            }
        }

        [Column(Storage = "_DirFromPlace", DbType = "VarChar(10)")]
        public string DirFromPlace {
            get {
                return this._DirFromPlace;
            }
            set {
                if ((this._DirFromPlace != value)) {
                    this._DirFromPlace = value;
                }
            }
        }

        [Column(Storage = "_AreaType", DbType = "TinyInt")]
        public System.Nullable<byte> AreaType {
            get {
                return this._AreaType;
            }
            set {
                if ((this._AreaType != value)) {
                    this._AreaType = value;
                }
            }
        }

        [Column(Storage = "_Lat", DbType = "Float")]
        public System.Nullable<double> Lat {
            get {
                return this._Lat;
            }
            set {
                if ((this._Lat != value)) {
                    this._Lat = value;
                }
            }
        }

        [Column(Storage = "_Long", DbType = "Float")]
        public System.Nullable<double> Long {
            get {
                return this._Long;
            }
            set {
                if ((this._Long != value)) {
                    this._Long = value;
                }
            }
        }

        [Column(Storage = "_Lat2", DbType = "Float")]
        public System.Nullable<double> Lat2 {
            get {
                return this._Lat2;
            }
            set {
                if ((this._Lat2 != value)) {
                    this._Lat2 = value;
                }
            }
        }

        [Column(Storage = "_Long2", DbType = "Float")]
        public System.Nullable<double> Long2 {
            get {
                return this._Long2;
            }
            set {
                if ((this._Long2 != value)) {
                    this._Long2 = value;
                }
            }
        }
    }

    public partial class SpReportTaxaForDistRegionResult {

        private System.Nullable<int> _BiotaID;

        private System.Nullable<int> _DistRegionID;

        private string _Biota;

        private string _DistRegion;

        public SpReportTaxaForDistRegionResult() {
        }

        [Column(Storage = "_BiotaID", DbType = "Int")]
        public System.Nullable<int> BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this._BiotaID = value;
                }
            }
        }

        [Column(Storage = "_DistRegionID", DbType = "Int")]
        public System.Nullable<int> DistRegionID {
            get {
                return this._DistRegionID;
            }
            set {
                if ((this._DistRegionID != value)) {
                    this._DistRegionID = value;
                }
            }
        }

        [Column(Storage = "_Biota", DbType = "VarChar(255)")]
        public string Biota {
            get {
                return this._Biota;
            }
            set {
                if ((this._Biota != value)) {
                    this._Biota = value;
                }
            }
        }

        [Column(Storage = "_DistRegion", DbType = "VarChar(50)")]
        public string DistRegion {
            get {
                return this._DistRegion;
            }
            set {
                if ((this._DistRegion != value)) {
                    this._DistRegion = value;
                }
            }
        }
    }

    public partial class SpReportTaxaForLocationResult {

        private System.Nullable<int> _BiotaID;

        private System.Nullable<int> _LocationID;

        private string _Biota;

        private string _Location;

        public SpReportTaxaForLocationResult() {
        }

        [Column(Storage = "_BiotaID", DbType = "Int")]
        public System.Nullable<int> BiotaID {
            get {
                return this._BiotaID;
            }
            set {
                if ((this._BiotaID != value)) {
                    this._BiotaID = value;
                }
            }
        }

        [Column(Storage = "_LocationID", DbType = "Int")]
        public System.Nullable<int> LocationID {
            get {
                return this._LocationID;
            }
            set {
                if ((this._LocationID != value)) {
                    this._LocationID = value;
                }
            }
        }

        [Column(Storage = "_Biota", DbType = "VarChar(255)")]
        public string Biota {
            get {
                return this._Biota;
            }
            set {
                if ((this._Biota != value)) {
                    this._Biota = value;
                }
            }
        }

        [Column(Storage = "_Location", DbType = "VarChar(8000)")]
        public string Location {
            get {
                return this._Location;
            }
            set {
                if ((this._Location != value)) {
                    this._Location = value;
                }
            }
        }
    }

    public partial class SpRptMorphCellListResult {

        private string _TxtValue;

        public SpRptMorphCellListResult() {
        }

        [Column(Name = "txtValue", Storage = "_TxtValue", DbType = "Text")]
        public string TxtValue {
            get {
                return this._TxtValue;
            }
            set {
                if ((this._TxtValue != value)) {
                    this._TxtValue = value;
                }
            }
        }
    }

    public partial class SpSANGetResult {

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntRefID;

        private string _VchrRefPage;

        private string _TxtRefQual;

        private string _VchrPrimaryType;

        private string _VchrSecondaryType;

        private System.Nullable<bool> _BitPrimaryTypeProbable;

        private System.Nullable<bool> _BitSecondaryTypeProbable;

        private System.Nullable<System.Guid> _GUID;

        private string _VchrRefCode;

        private string _VchrAvailableNameStatus;

        private System.Nullable<int> _Changes;

        public SpSANGetResult() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intRefID", Storage = "_IntRefID", DbType = "Int")]
        public System.Nullable<int> IntRefID {
            get {
                return this._IntRefID;
            }
            set {
                if ((this._IntRefID != value)) {
                    this._IntRefID = value;
                }
            }
        }

        [Column(Name = "vchrRefPage", Storage = "_VchrRefPage", DbType = "VarChar(50)")]
        public string VchrRefPage {
            get {
                return this._VchrRefPage;
            }
            set {
                if ((this._VchrRefPage != value)) {
                    this._VchrRefPage = value;
                }
            }
        }

        [Column(Name = "txtRefQual", Storage = "_TxtRefQual", DbType = "Text")]
        public string TxtRefQual {
            get {
                return this._TxtRefQual;
            }
            set {
                if ((this._TxtRefQual != value)) {
                    this._TxtRefQual = value;
                }
            }
        }

        [Column(Name = "vchrPrimaryType", Storage = "_VchrPrimaryType", DbType = "VarChar(50)")]
        public string VchrPrimaryType {
            get {
                return this._VchrPrimaryType;
            }
            set {
                if ((this._VchrPrimaryType != value)) {
                    this._VchrPrimaryType = value;
                }
            }
        }

        [Column(Name = "vchrSecondaryType", Storage = "_VchrSecondaryType", DbType = "VarChar(50)")]
        public string VchrSecondaryType {
            get {
                return this._VchrSecondaryType;
            }
            set {
                if ((this._VchrSecondaryType != value)) {
                    this._VchrSecondaryType = value;
                }
            }
        }

        [Column(Name = "bitPrimaryTypeProbable", Storage = "_BitPrimaryTypeProbable", DbType = "Bit")]
        public System.Nullable<bool> BitPrimaryTypeProbable {
            get {
                return this._BitPrimaryTypeProbable;
            }
            set {
                if ((this._BitPrimaryTypeProbable != value)) {
                    this._BitPrimaryTypeProbable = value;
                }
            }
        }

        [Column(Name = "bitSecondaryTypeProbable", Storage = "_BitSecondaryTypeProbable", DbType = "Bit")]
        public System.Nullable<bool> BitSecondaryTypeProbable {
            get {
                return this._BitSecondaryTypeProbable;
            }
            set {
                if ((this._BitSecondaryTypeProbable != value)) {
                    this._BitSecondaryTypeProbable = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "vchrRefCode", Storage = "_VchrRefCode", DbType = "VarChar(50)")]
        public string VchrRefCode {
            get {
                return this._VchrRefCode;
            }
            set {
                if ((this._VchrRefCode != value)) {
                    this._VchrRefCode = value;
                }
            }
        }

        [Column(Name = "vchrAvailableNameStatus", Storage = "_VchrAvailableNameStatus", DbType = "VarChar(255)")]
        public string VchrAvailableNameStatus {
            get {
                return this._VchrAvailableNameStatus;
            }
            set {
                if ((this._VchrAvailableNameStatus != value)) {
                    this._VchrAvailableNameStatus = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpSANTypeDataGetResult {

        private System.Nullable<int> _IntSANTypeDataID;

        private System.Nullable<int> _IntBiotaID;

        private string _VchrType;

        private string _VchrMuseum;

        private string _VchrAccessionNum;

        private string _VchrMaterial;

        private string _VchrLocality;

        private System.Nullable<bool> _BitIDConfirmed;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntMaterialID;

        private string _VchrMaterialName;

        private System.Nullable<int> _Changes;

        public SpSANTypeDataGetResult() {
        }

        [Column(Name = "intSANTypeDataID", Storage = "_IntSANTypeDataID", DbType = "Int")]
        public System.Nullable<int> IntSANTypeDataID {
            get {
                return this._IntSANTypeDataID;
            }
            set {
                if ((this._IntSANTypeDataID != value)) {
                    this._IntSANTypeDataID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "vchrType", Storage = "_VchrType", DbType = "VarChar(50)")]
        public string VchrType {
            get {
                return this._VchrType;
            }
            set {
                if ((this._VchrType != value)) {
                    this._VchrType = value;
                }
            }
        }

        [Column(Name = "vchrMuseum", Storage = "_VchrMuseum", DbType = "VarChar(255)")]
        public string VchrMuseum {
            get {
                return this._VchrMuseum;
            }
            set {
                if ((this._VchrMuseum != value)) {
                    this._VchrMuseum = value;
                }
            }
        }

        [Column(Name = "vchrAccessionNum", Storage = "_VchrAccessionNum", DbType = "VarChar(50)")]
        public string VchrAccessionNum {
            get {
                return this._VchrAccessionNum;
            }
            set {
                if ((this._VchrAccessionNum != value)) {
                    this._VchrAccessionNum = value;
                }
            }
        }

        [Column(Name = "vchrMaterial", Storage = "_VchrMaterial", DbType = "VarChar(50)")]
        public string VchrMaterial {
            get {
                return this._VchrMaterial;
            }
            set {
                if ((this._VchrMaterial != value)) {
                    this._VchrMaterial = value;
                }
            }
        }

        [Column(Name = "vchrLocality", Storage = "_VchrLocality", DbType = "VarChar(255)")]
        public string VchrLocality {
            get {
                return this._VchrLocality;
            }
            set {
                if ((this._VchrLocality != value)) {
                    this._VchrLocality = value;
                }
            }
        }

        [Column(Name = "bitIDConfirmed", Storage = "_BitIDConfirmed", DbType = "Bit")]
        public System.Nullable<bool> BitIDConfirmed {
            get {
                return this._BitIDConfirmed;
            }
            set {
                if ((this._BitIDConfirmed != value)) {
                    this._BitIDConfirmed = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intMaterialID", Storage = "_IntMaterialID", DbType = "Int")]
        public System.Nullable<int> IntMaterialID {
            get {
                return this._IntMaterialID;
            }
            set {
                if ((this._IntMaterialID != value)) {
                    this._IntMaterialID = value;
                }
            }
        }

        [Column(Name = "vchrMaterialName", Storage = "_VchrMaterialName", DbType = "VarChar(255)")]
        public string VchrMaterialName {
            get {
                return this._VchrMaterialName;
            }
            set {
                if ((this._VchrMaterialName != value)) {
                    this._VchrMaterialName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpSANTypeDataTypesGetResult {

        private string _VchrPrimaryType;

        private string _VchrSecondaryTypes;

        public SpSANTypeDataTypesGetResult() {
        }

        [Column(Name = "vchrPrimaryType", Storage = "_VchrPrimaryType", DbType = "VarChar(50)")]
        public string VchrPrimaryType {
            get {
                return this._VchrPrimaryType;
            }
            set {
                if ((this._VchrPrimaryType != value)) {
                    this._VchrPrimaryType = value;
                }
            }
        }

        [Column(Name = "vchrSecondaryTypes", Storage = "_VchrSecondaryTypes", DbType = "VarChar(250)")]
        public string VchrSecondaryTypes {
            get {
                return this._VchrSecondaryTypes;
            }
            set {
                if ((this._VchrSecondaryTypes != value)) {
                    this._VchrSecondaryTypes = value;
                }
            }
        }
    }

    public partial class SpSettingGetResult {

        private string _VchrValue;

        private string _VchrDescription;

        public SpSettingGetResult() {
        }

        [Column(Name = "vchrValue", Storage = "_VchrValue", DbType = "VarChar(255)")]
        public string VchrValue {
            get {
                return this._VchrValue;
            }
            set {
                if ((this._VchrValue != value)) {
                    this._VchrValue = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "Char(255)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }
    }

    public partial class SpSiteExplorerListResult1 {

        private System.Nullable<int> _ElemID;

        private string _Name;

        private System.Nullable<int> _ParentID;

        private string _ElemType;

        private System.Nullable<int> _NumChildren;

        private System.Nullable<int> _RegionID;

        public SpSiteExplorerListResult1() {
        }

        [Column(Storage = "_ElemID", DbType = "Int")]
        public System.Nullable<int> ElemID {
            get {
                return this._ElemID;
            }
            set {
                if ((this._ElemID != value)) {
                    this._ElemID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(50)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(6)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }

        [Column(Storage = "_RegionID", DbType = "Int")]
        public System.Nullable<int> RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this._RegionID = value;
                }
            }
        }
    }

    public partial class SpSiteExplorerListResult2 {

        private System.Nullable<int> _ElemID;

        private string _Name;

        private System.Nullable<int> _ParentID;

        private string _ElemType;

        private System.Nullable<int> _NumChildren;

        private System.Nullable<int> _RegionID;

        private string _RegionName;

        public SpSiteExplorerListResult2() {
        }

        [Column(Storage = "_ElemID", DbType = "Int")]
        public System.Nullable<int> ElemID {
            get {
                return this._ElemID;
            }
            set {
                if ((this._ElemID != value)) {
                    this._ElemID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(9)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }

        [Column(Storage = "_NumChildren", DbType = "Int")]
        public System.Nullable<int> NumChildren {
            get {
                return this._NumChildren;
            }
            set {
                if ((this._NumChildren != value)) {
                    this._NumChildren = value;
                }
            }
        }

        [Column(Storage = "_RegionID", DbType = "Int")]
        public System.Nullable<int> RegionID {
            get {
                return this._RegionID;
            }
            set {
                if ((this._RegionID != value)) {
                    this._RegionID = value;
                }
            }
        }

        [Column(Storage = "_RegionName", DbType = "VarChar(50)")]
        public string RegionName {
            get {
                return this._RegionName;
            }
            set {
                if ((this._RegionName != value)) {
                    this._RegionName = value;
                }
            }
        }
    }

    public partial class SpSiteFindTemplatesResult {

        private System.Nullable<int> _ID;

        private string _Site;

        public SpSiteFindTemplatesResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Site", DbType = "VarChar(100)")]
        public string Site {
            get {
                return this._Site;
            }
            set {
                if ((this._Site != value)) {
                    this._Site = value;
                }
            }
        }
    }

    public partial class SpSiteGetResult {

        private System.Nullable<int> _IntSiteID;

        private string _VchrSiteName;

        private System.Nullable<int> _IntPoliticalRegionID;

        private System.Nullable<int> _IntSiteGroupID;

        private System.Nullable<byte> _TintLocalType;

        private string _VchrLocal;

        private string _VchrDistanceFromPlace;

        private string _VchrDirFromPlace;

        private string _VchrInformalLocal;

        private System.Nullable<byte> _TintPosCoordinates;

        private System.Nullable<byte> _TintPosAreaType;

        private System.Nullable<double> _FltPosY1;

        private System.Nullable<double> _FltPosX1;

        private System.Nullable<double> _FltPosX2;

        private System.Nullable<double> _FltPosY2;

        private System.Nullable<byte> _TintPosXYDisplayFormat;

        private string _VchrPosSource;

        private string _VchrPosError;

        private string _VchrPosWho;

        private string _VchrPosDate;

        private string _VchrPosOriginal;

        private string _VchrPosUTMSource;

        private string _VchrPosUTMMapProj;

        private string _VchrPosUTMMapName;

        private string _VchrPosUTMMapVer;

        private System.Nullable<byte> _TintElevType;

        private System.Nullable<double> _FltElevUpper;

        private System.Nullable<double> _FltElevLower;

        private System.Nullable<double> _FltElevDepth;

        private string _VchrElevUnits;

        private string _VchrElevSource;

        private string _VchrElevError;

        private string _VchrGeoEra;

        private string _VchrGeoState;

        private string _VchrGeoPlate;

        private string _VchrGeoFormation;

        private string _VchrGeoMember;

        private string _VchrGeoBed;

        private string _VchrGeoName;

        private string _VchrGeoAgeBottom;

        private string _VchrGeoAgeTop;

        private string _VchrGeoNotes;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<int> _IntOrder;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        private string _PoliticalRegion;

        public SpSiteGetResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrSiteName", Storage = "_VchrSiteName", DbType = "VarChar(100)")]
        public string VchrSiteName {
            get {
                return this._VchrSiteName;
            }
            set {
                if ((this._VchrSiteName != value)) {
                    this._VchrSiteName = value;
                }
            }
        }

        [Column(Name = "intPoliticalRegionID", Storage = "_IntPoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> IntPoliticalRegionID {
            get {
                return this._IntPoliticalRegionID;
            }
            set {
                if ((this._IntPoliticalRegionID != value)) {
                    this._IntPoliticalRegionID = value;
                }
            }
        }

        [Column(Name = "intSiteGroupID", Storage = "_IntSiteGroupID", DbType = "Int")]
        public System.Nullable<int> IntSiteGroupID {
            get {
                return this._IntSiteGroupID;
            }
            set {
                if ((this._IntSiteGroupID != value)) {
                    this._IntSiteGroupID = value;
                }
            }
        }

        [Column(Name = "tintLocalType", Storage = "_TintLocalType", DbType = "TinyInt")]
        public System.Nullable<byte> TintLocalType {
            get {
                return this._TintLocalType;
            }
            set {
                if ((this._TintLocalType != value)) {
                    this._TintLocalType = value;
                }
            }
        }

        [Column(Name = "vchrLocal", Storage = "_VchrLocal", DbType = "VarChar(255)")]
        public string VchrLocal {
            get {
                return this._VchrLocal;
            }
            set {
                if ((this._VchrLocal != value)) {
                    this._VchrLocal = value;
                }
            }
        }

        [Column(Name = "vchrDistanceFromPlace", Storage = "_VchrDistanceFromPlace", DbType = "VarChar(50)")]
        public string VchrDistanceFromPlace {
            get {
                return this._VchrDistanceFromPlace;
            }
            set {
                if ((this._VchrDistanceFromPlace != value)) {
                    this._VchrDistanceFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrDirFromPlace", Storage = "_VchrDirFromPlace", DbType = "VarChar(10)")]
        public string VchrDirFromPlace {
            get {
                return this._VchrDirFromPlace;
            }
            set {
                if ((this._VchrDirFromPlace != value)) {
                    this._VchrDirFromPlace = value;
                }
            }
        }

        [Column(Name = "vchrInformalLocal", Storage = "_VchrInformalLocal", DbType = "VarChar(255)")]
        public string VchrInformalLocal {
            get {
                return this._VchrInformalLocal;
            }
            set {
                if ((this._VchrInformalLocal != value)) {
                    this._VchrInformalLocal = value;
                }
            }
        }

        [Column(Name = "tintPosCoordinates", Storage = "_TintPosCoordinates", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosCoordinates {
            get {
                return this._TintPosCoordinates;
            }
            set {
                if ((this._TintPosCoordinates != value)) {
                    this._TintPosCoordinates = value;
                }
            }
        }

        [Column(Name = "tintPosAreaType", Storage = "_TintPosAreaType", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosAreaType {
            get {
                return this._TintPosAreaType;
            }
            set {
                if ((this._TintPosAreaType != value)) {
                    this._TintPosAreaType = value;
                }
            }
        }

        [Column(Name = "fltPosY1", Storage = "_FltPosY1", DbType = "Float")]
        public System.Nullable<double> FltPosY1 {
            get {
                return this._FltPosY1;
            }
            set {
                if ((this._FltPosY1 != value)) {
                    this._FltPosY1 = value;
                }
            }
        }

        [Column(Name = "fltPosX1", Storage = "_FltPosX1", DbType = "Float")]
        public System.Nullable<double> FltPosX1 {
            get {
                return this._FltPosX1;
            }
            set {
                if ((this._FltPosX1 != value)) {
                    this._FltPosX1 = value;
                }
            }
        }

        [Column(Name = "fltPosX2", Storage = "_FltPosX2", DbType = "Float")]
        public System.Nullable<double> FltPosX2 {
            get {
                return this._FltPosX2;
            }
            set {
                if ((this._FltPosX2 != value)) {
                    this._FltPosX2 = value;
                }
            }
        }

        [Column(Name = "fltPosY2", Storage = "_FltPosY2", DbType = "Float")]
        public System.Nullable<double> FltPosY2 {
            get {
                return this._FltPosY2;
            }
            set {
                if ((this._FltPosY2 != value)) {
                    this._FltPosY2 = value;
                }
            }
        }

        [Column(Name = "tintPosXYDisplayFormat", Storage = "_TintPosXYDisplayFormat", DbType = "TinyInt")]
        public System.Nullable<byte> TintPosXYDisplayFormat {
            get {
                return this._TintPosXYDisplayFormat;
            }
            set {
                if ((this._TintPosXYDisplayFormat != value)) {
                    this._TintPosXYDisplayFormat = value;
                }
            }
        }

        [Column(Name = "vchrPosSource", Storage = "_VchrPosSource", DbType = "VarChar(50)")]
        public string VchrPosSource {
            get {
                return this._VchrPosSource;
            }
            set {
                if ((this._VchrPosSource != value)) {
                    this._VchrPosSource = value;
                }
            }
        }

        [Column(Name = "vchrPosError", Storage = "_VchrPosError", DbType = "VarChar(20)")]
        public string VchrPosError {
            get {
                return this._VchrPosError;
            }
            set {
                if ((this._VchrPosError != value)) {
                    this._VchrPosError = value;
                }
            }
        }

        [Column(Name = "vchrPosWho", Storage = "_VchrPosWho", DbType = "VarChar(20)")]
        public string VchrPosWho {
            get {
                return this._VchrPosWho;
            }
            set {
                if ((this._VchrPosWho != value)) {
                    this._VchrPosWho = value;
                }
            }
        }

        [Column(Name = "vchrPosDate", Storage = "_VchrPosDate", DbType = "VarChar(20)")]
        public string VchrPosDate {
            get {
                return this._VchrPosDate;
            }
            set {
                if ((this._VchrPosDate != value)) {
                    this._VchrPosDate = value;
                }
            }
        }

        [Column(Name = "vchrPosOriginal", Storage = "_VchrPosOriginal", DbType = "VarChar(20)")]
        public string VchrPosOriginal {
            get {
                return this._VchrPosOriginal;
            }
            set {
                if ((this._VchrPosOriginal != value)) {
                    this._VchrPosOriginal = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMSource", Storage = "_VchrPosUTMSource", DbType = "VarChar(255)")]
        public string VchrPosUTMSource {
            get {
                return this._VchrPosUTMSource;
            }
            set {
                if ((this._VchrPosUTMSource != value)) {
                    this._VchrPosUTMSource = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapProj", Storage = "_VchrPosUTMMapProj", DbType = "VarChar(255)")]
        public string VchrPosUTMMapProj {
            get {
                return this._VchrPosUTMMapProj;
            }
            set {
                if ((this._VchrPosUTMMapProj != value)) {
                    this._VchrPosUTMMapProj = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapName", Storage = "_VchrPosUTMMapName", DbType = "VarChar(255)")]
        public string VchrPosUTMMapName {
            get {
                return this._VchrPosUTMMapName;
            }
            set {
                if ((this._VchrPosUTMMapName != value)) {
                    this._VchrPosUTMMapName = value;
                }
            }
        }

        [Column(Name = "vchrPosUTMMapVer", Storage = "_VchrPosUTMMapVer", DbType = "VarChar(255)")]
        public string VchrPosUTMMapVer {
            get {
                return this._VchrPosUTMMapVer;
            }
            set {
                if ((this._VchrPosUTMMapVer != value)) {
                    this._VchrPosUTMMapVer = value;
                }
            }
        }

        [Column(Name = "tintElevType", Storage = "_TintElevType", DbType = "TinyInt")]
        public System.Nullable<byte> TintElevType {
            get {
                return this._TintElevType;
            }
            set {
                if ((this._TintElevType != value)) {
                    this._TintElevType = value;
                }
            }
        }

        [Column(Name = "fltElevUpper", Storage = "_FltElevUpper", DbType = "Float")]
        public System.Nullable<double> FltElevUpper {
            get {
                return this._FltElevUpper;
            }
            set {
                if ((this._FltElevUpper != value)) {
                    this._FltElevUpper = value;
                }
            }
        }

        [Column(Name = "fltElevLower", Storage = "_FltElevLower", DbType = "Float")]
        public System.Nullable<double> FltElevLower {
            get {
                return this._FltElevLower;
            }
            set {
                if ((this._FltElevLower != value)) {
                    this._FltElevLower = value;
                }
            }
        }

        [Column(Name = "fltElevDepth", Storage = "_FltElevDepth", DbType = "Float")]
        public System.Nullable<double> FltElevDepth {
            get {
                return this._FltElevDepth;
            }
            set {
                if ((this._FltElevDepth != value)) {
                    this._FltElevDepth = value;
                }
            }
        }

        [Column(Name = "vchrElevUnits", Storage = "_VchrElevUnits", DbType = "VarChar(20)")]
        public string VchrElevUnits {
            get {
                return this._VchrElevUnits;
            }
            set {
                if ((this._VchrElevUnits != value)) {
                    this._VchrElevUnits = value;
                }
            }
        }

        [Column(Name = "vchrElevSource", Storage = "_VchrElevSource", DbType = "VarChar(50)")]
        public string VchrElevSource {
            get {
                return this._VchrElevSource;
            }
            set {
                if ((this._VchrElevSource != value)) {
                    this._VchrElevSource = value;
                }
            }
        }

        [Column(Name = "vchrElevError", Storage = "_VchrElevError", DbType = "VarChar(20)")]
        public string VchrElevError {
            get {
                return this._VchrElevError;
            }
            set {
                if ((this._VchrElevError != value)) {
                    this._VchrElevError = value;
                }
            }
        }

        [Column(Name = "vchrGeoEra", Storage = "_VchrGeoEra", DbType = "VarChar(50)")]
        public string VchrGeoEra {
            get {
                return this._VchrGeoEra;
            }
            set {
                if ((this._VchrGeoEra != value)) {
                    this._VchrGeoEra = value;
                }
            }
        }

        [Column(Name = "vchrGeoState", Storage = "_VchrGeoState", DbType = "VarChar(50)")]
        public string VchrGeoState {
            get {
                return this._VchrGeoState;
            }
            set {
                if ((this._VchrGeoState != value)) {
                    this._VchrGeoState = value;
                }
            }
        }

        [Column(Name = "vchrGeoPlate", Storage = "_VchrGeoPlate", DbType = "VarChar(50)")]
        public string VchrGeoPlate {
            get {
                return this._VchrGeoPlate;
            }
            set {
                if ((this._VchrGeoPlate != value)) {
                    this._VchrGeoPlate = value;
                }
            }
        }

        [Column(Name = "vchrGeoFormation", Storage = "_VchrGeoFormation", DbType = "VarChar(50)")]
        public string VchrGeoFormation {
            get {
                return this._VchrGeoFormation;
            }
            set {
                if ((this._VchrGeoFormation != value)) {
                    this._VchrGeoFormation = value;
                }
            }
        }

        [Column(Name = "vchrGeoMember", Storage = "_VchrGeoMember", DbType = "VarChar(50)")]
        public string VchrGeoMember {
            get {
                return this._VchrGeoMember;
            }
            set {
                if ((this._VchrGeoMember != value)) {
                    this._VchrGeoMember = value;
                }
            }
        }

        [Column(Name = "vchrGeoBed", Storage = "_VchrGeoBed", DbType = "VarChar(50)")]
        public string VchrGeoBed {
            get {
                return this._VchrGeoBed;
            }
            set {
                if ((this._VchrGeoBed != value)) {
                    this._VchrGeoBed = value;
                }
            }
        }

        [Column(Name = "vchrGeoName", Storage = "_VchrGeoName", DbType = "VarChar(50)")]
        public string VchrGeoName {
            get {
                return this._VchrGeoName;
            }
            set {
                if ((this._VchrGeoName != value)) {
                    this._VchrGeoName = value;
                }
            }
        }

        [Column(Name = "vchrGeoAgeBottom", Storage = "_VchrGeoAgeBottom", DbType = "VarChar(50)")]
        public string VchrGeoAgeBottom {
            get {
                return this._VchrGeoAgeBottom;
            }
            set {
                if ((this._VchrGeoAgeBottom != value)) {
                    this._VchrGeoAgeBottom = value;
                }
            }
        }

        [Column(Name = "vchrGeoAgeTop", Storage = "_VchrGeoAgeTop", DbType = "VarChar(50)")]
        public string VchrGeoAgeTop {
            get {
                return this._VchrGeoAgeTop;
            }
            set {
                if ((this._VchrGeoAgeTop != value)) {
                    this._VchrGeoAgeTop = value;
                }
            }
        }

        [Column(Name = "vchrGeoNotes", Storage = "_VchrGeoNotes", DbType = "VarChar(255)")]
        public string VchrGeoNotes {
            get {
                return this._VchrGeoNotes;
            }
            set {
                if ((this._VchrGeoNotes != value)) {
                    this._VchrGeoNotes = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "intOrder", Storage = "_IntOrder", DbType = "Int")]
        public System.Nullable<int> IntOrder {
            get {
                return this._IntOrder;
            }
            set {
                if ((this._IntOrder != value)) {
                    this._IntOrder = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_PoliticalRegion", DbType = "VarChar(50)")]
        public string PoliticalRegion {
            get {
                return this._PoliticalRegion;
            }
            set {
                if ((this._PoliticalRegion != value)) {
                    this._PoliticalRegion = value;
                }
            }
        }
    }

    public partial class SpSiteGetRDEFromIDListResult {

        private System.Nullable<int> _SiteID;

        private System.Nullable<int> _ParentID;

        private string _SiteName;

        private System.Nullable<byte> _LocalType;

        private string _Locality;

        private System.Nullable<int> _PoliticalRegionID;

        private string _PoliticalRegion;

        private System.Nullable<byte> _PosAreaType;

        private System.Nullable<byte> _PosCoordinates;

        private System.Nullable<double> _Longitude;

        private System.Nullable<double> _Latitude;

        private System.Nullable<double> _Longitude2;

        private System.Nullable<double> _Latitude2;

        private System.Nullable<byte> _ElevType;

        private System.Nullable<double> _ElevUpper;

        private System.Nullable<double> _ElevLower;

        private string _ElevUnits;

        private string _ElevSource;

        private string _ElevError;

        private string _LLSource;

        private string _LLError;

        private System.Nullable<int> _Changes;

        private System.Nullable<int> _TemplateID;

        private System.Nullable<int> _Locked;

        public SpSiteGetRDEFromIDListResult() {
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_ParentID", DbType = "Int")]
        public System.Nullable<int> ParentID {
            get {
                return this._ParentID;
            }
            set {
                if ((this._ParentID != value)) {
                    this._ParentID = value;
                }
            }
        }

        [Column(Storage = "_SiteName", DbType = "VarChar(100)")]
        public string SiteName {
            get {
                return this._SiteName;
            }
            set {
                if ((this._SiteName != value)) {
                    this._SiteName = value;
                }
            }
        }

        [Column(Storage = "_LocalType", DbType = "TinyInt")]
        public System.Nullable<byte> LocalType {
            get {
                return this._LocalType;
            }
            set {
                if ((this._LocalType != value)) {
                    this._LocalType = value;
                }
            }
        }

        [Column(Storage = "_Locality", DbType = "VarChar(255)")]
        public string Locality {
            get {
                return this._Locality;
            }
            set {
                if ((this._Locality != value)) {
                    this._Locality = value;
                }
            }
        }

        [Column(Storage = "_PoliticalRegionID", DbType = "Int")]
        public System.Nullable<int> PoliticalRegionID {
            get {
                return this._PoliticalRegionID;
            }
            set {
                if ((this._PoliticalRegionID != value)) {
                    this._PoliticalRegionID = value;
                }
            }
        }

        [Column(Storage = "_PoliticalRegion", DbType = "VarChar(50)")]
        public string PoliticalRegion {
            get {
                return this._PoliticalRegion;
            }
            set {
                if ((this._PoliticalRegion != value)) {
                    this._PoliticalRegion = value;
                }
            }
        }

        [Column(Storage = "_PosAreaType", DbType = "TinyInt")]
        public System.Nullable<byte> PosAreaType {
            get {
                return this._PosAreaType;
            }
            set {
                if ((this._PosAreaType != value)) {
                    this._PosAreaType = value;
                }
            }
        }

        [Column(Storage = "_PosCoordinates", DbType = "TinyInt")]
        public System.Nullable<byte> PosCoordinates {
            get {
                return this._PosCoordinates;
            }
            set {
                if ((this._PosCoordinates != value)) {
                    this._PosCoordinates = value;
                }
            }
        }

        [Column(Storage = "_Longitude", DbType = "Float")]
        public System.Nullable<double> Longitude {
            get {
                return this._Longitude;
            }
            set {
                if ((this._Longitude != value)) {
                    this._Longitude = value;
                }
            }
        }

        [Column(Storage = "_Latitude", DbType = "Float")]
        public System.Nullable<double> Latitude {
            get {
                return this._Latitude;
            }
            set {
                if ((this._Latitude != value)) {
                    this._Latitude = value;
                }
            }
        }

        [Column(Storage = "_Longitude2", DbType = "Float")]
        public System.Nullable<double> Longitude2 {
            get {
                return this._Longitude2;
            }
            set {
                if ((this._Longitude2 != value)) {
                    this._Longitude2 = value;
                }
            }
        }

        [Column(Storage = "_Latitude2", DbType = "Float")]
        public System.Nullable<double> Latitude2 {
            get {
                return this._Latitude2;
            }
            set {
                if ((this._Latitude2 != value)) {
                    this._Latitude2 = value;
                }
            }
        }

        [Column(Storage = "_ElevType", DbType = "TinyInt")]
        public System.Nullable<byte> ElevType {
            get {
                return this._ElevType;
            }
            set {
                if ((this._ElevType != value)) {
                    this._ElevType = value;
                }
            }
        }

        [Column(Storage = "_ElevUpper", DbType = "Float")]
        public System.Nullable<double> ElevUpper {
            get {
                return this._ElevUpper;
            }
            set {
                if ((this._ElevUpper != value)) {
                    this._ElevUpper = value;
                }
            }
        }

        [Column(Storage = "_ElevLower", DbType = "Float")]
        public System.Nullable<double> ElevLower {
            get {
                return this._ElevLower;
            }
            set {
                if ((this._ElevLower != value)) {
                    this._ElevLower = value;
                }
            }
        }

        [Column(Storage = "_ElevUnits", DbType = "VarChar(20)")]
        public string ElevUnits {
            get {
                return this._ElevUnits;
            }
            set {
                if ((this._ElevUnits != value)) {
                    this._ElevUnits = value;
                }
            }
        }

        [Column(Storage = "_ElevSource", DbType = "VarChar(50)")]
        public string ElevSource {
            get {
                return this._ElevSource;
            }
            set {
                if ((this._ElevSource != value)) {
                    this._ElevSource = value;
                }
            }
        }

        [Column(Storage = "_ElevError", DbType = "VarChar(20)")]
        public string ElevError {
            get {
                return this._ElevError;
            }
            set {
                if ((this._ElevError != value)) {
                    this._ElevError = value;
                }
            }
        }

        [Column(Storage = "_LLSource", DbType = "VarChar(50)")]
        public string LLSource {
            get {
                return this._LLSource;
            }
            set {
                if ((this._LLSource != value)) {
                    this._LLSource = value;
                }
            }
        }

        [Column(Storage = "_LLError", DbType = "VarChar(20)")]
        public string LLError {
            get {
                return this._LLError;
            }
            set {
                if ((this._LLError != value)) {
                    this._LLError = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_TemplateID", DbType = "Int")]
        public System.Nullable<int> TemplateID {
            get {
                return this._TemplateID;
            }
            set {
                if ((this._TemplateID != value)) {
                    this._TemplateID = value;
                }
            }
        }

        [Column(Storage = "_Locked", DbType = "Int")]
        public System.Nullable<int> Locked {
            get {
                return this._Locked;
            }
            set {
                if ((this._Locked != value)) {
                    this._Locked = value;
                }
            }
        }
    }

    public partial class SpSiteGetRDESiteIDResult {

        private System.Nullable<int> _IntSiteID;

        public SpSiteGetRDESiteIDResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteGroupGetSiteIDListResult {

        private System.Nullable<int> _IntSiteID;

        public SpSiteGroupGetSiteIDListResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteGroupInsertResult {

        private System.Nullable<decimal> _NewRegionID;

        public SpSiteGroupInsertResult() {
        }

        [Column(Storage = "_NewRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewRegionID {
            get {
                return this._NewRegionID;
            }
            set {
                if ((this._NewRegionID != value)) {
                    this._NewRegionID = value;
                }
            }
        }
    }

    public partial class SpSiteImportGetIDResult {

        private System.Nullable<int> _NewSiteID;

        public SpSiteImportGetIDResult() {
        }

        [Column(Storage = "_NewSiteID", DbType = "Int")]
        public System.Nullable<int> NewSiteID {
            get {
                return this._NewSiteID;
            }
            set {
                if ((this._NewSiteID != value)) {
                    this._NewSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteInsertResult {

        private System.Nullable<int> _NewSiteID;

        public SpSiteInsertResult() {
        }

        [Column(Storage = "_NewSiteID", DbType = "Int")]
        public System.Nullable<int> NewSiteID {
            get {
                return this._NewSiteID;
            }
            set {
                if ((this._NewSiteID != value)) {
                    this._NewSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteInsertTemplateResult {

        private System.Nullable<int> _NewSiteID;

        public SpSiteInsertTemplateResult() {
        }

        [Column(Storage = "_NewSiteID", DbType = "Int")]
        public System.Nullable<int> NewSiteID {
            get {
                return this._NewSiteID;
            }
            set {
                if ((this._NewSiteID != value)) {
                    this._NewSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteListTemplatesResult {

        private System.Nullable<int> _ElemID;

        private string _Name;

        private string _ElemType;

        public SpSiteListTemplatesResult() {
        }

        [Column(Storage = "_ElemID", DbType = "Int")]
        public System.Nullable<int> ElemID {
            get {
                return this._ElemID;
            }
            set {
                if ((this._ElemID != value)) {
                    this._ElemID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(100)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(4)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }
    }

    public partial class SpSiteLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpSiteLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(100)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpSiteOKToDeleteResult {

        private string _Column1;

        public SpSiteOKToDeleteResult() {
        }

        [Column(Name = "", Storage = "_Column1", DbType = "VarChar(1)")]
        public string Column1 {
            get {
                return this._Column1;
            }
            set {
                if ((this._Column1 != value)) {
                    this._Column1 = value;
                }
            }
        }
    }

    public partial class SpSiteVisitFindTemplatesResult {

        private System.Nullable<int> _ID;

        private string _SiteVisit;

        public SpSiteVisitFindTemplatesResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Name = "Site Visit", Storage = "_SiteVisit", DbType = "VarChar(255)")]
        public string SiteVisit {
            get {
                return this._SiteVisit;
            }
            set {
                if ((this._SiteVisit != value)) {
                    this._SiteVisit = value;
                }
            }
        }
    }

    public partial class SpSiteVisitGetResult {

        private System.Nullable<int> _IntSiteVisitID;

        private System.Nullable<int> _IntSiteID;

        private string _VchrSiteVisitName;

        private string _VchrFieldNumber;

        private string _VchrCollector;

        private System.Nullable<byte> _TintDateType;

        private System.Nullable<int> _IntDateStart;

        private System.Nullable<int> _IntDateEnd;

        private System.Nullable<int> _IntTimeStart;

        private System.Nullable<int> _IntTimeEnd;

        private string _VchrCasualTime;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<byte> _TintTemplate;

        private System.Nullable<System.Guid> _GUID;

        private string _SiteName;

        public SpSiteVisitGetResult() {
        }

        [Column(Name = "intSiteVisitID", Storage = "_IntSiteVisitID", DbType = "Int")]
        public System.Nullable<int> IntSiteVisitID {
            get {
                return this._IntSiteVisitID;
            }
            set {
                if ((this._IntSiteVisitID != value)) {
                    this._IntSiteVisitID = value;
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrSiteVisitName", Storage = "_VchrSiteVisitName", DbType = "VarChar(255)")]
        public string VchrSiteVisitName {
            get {
                return this._VchrSiteVisitName;
            }
            set {
                if ((this._VchrSiteVisitName != value)) {
                    this._VchrSiteVisitName = value;
                }
            }
        }

        [Column(Name = "vchrFieldNumber", Storage = "_VchrFieldNumber", DbType = "VarChar(50)")]
        public string VchrFieldNumber {
            get {
                return this._VchrFieldNumber;
            }
            set {
                if ((this._VchrFieldNumber != value)) {
                    this._VchrFieldNumber = value;
                }
            }
        }

        [Column(Name = "vchrCollector", Storage = "_VchrCollector", DbType = "VarChar(255)")]
        public string VchrCollector {
            get {
                return this._VchrCollector;
            }
            set {
                if ((this._VchrCollector != value)) {
                    this._VchrCollector = value;
                }
            }
        }

        [Column(Name = "tintDateType", Storage = "_TintDateType", DbType = "TinyInt")]
        public System.Nullable<byte> TintDateType {
            get {
                return this._TintDateType;
            }
            set {
                if ((this._TintDateType != value)) {
                    this._TintDateType = value;
                }
            }
        }

        [Column(Name = "intDateStart", Storage = "_IntDateStart", DbType = "Int")]
        public System.Nullable<int> IntDateStart {
            get {
                return this._IntDateStart;
            }
            set {
                if ((this._IntDateStart != value)) {
                    this._IntDateStart = value;
                }
            }
        }

        [Column(Name = "intDateEnd", Storage = "_IntDateEnd", DbType = "Int")]
        public System.Nullable<int> IntDateEnd {
            get {
                return this._IntDateEnd;
            }
            set {
                if ((this._IntDateEnd != value)) {
                    this._IntDateEnd = value;
                }
            }
        }

        [Column(Name = "intTimeStart", Storage = "_IntTimeStart", DbType = "Int")]
        public System.Nullable<int> IntTimeStart {
            get {
                return this._IntTimeStart;
            }
            set {
                if ((this._IntTimeStart != value)) {
                    this._IntTimeStart = value;
                }
            }
        }

        [Column(Name = "intTimeEnd", Storage = "_IntTimeEnd", DbType = "Int")]
        public System.Nullable<int> IntTimeEnd {
            get {
                return this._IntTimeEnd;
            }
            set {
                if ((this._IntTimeEnd != value)) {
                    this._IntTimeEnd = value;
                }
            }
        }

        [Column(Name = "vchrCasualTime", Storage = "_VchrCasualTime", DbType = "VarChar(255)")]
        public string VchrCasualTime {
            get {
                return this._VchrCasualTime;
            }
            set {
                if ((this._VchrCasualTime != value)) {
                    this._VchrCasualTime = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "tintTemplate", Storage = "_TintTemplate", DbType = "TinyInt")]
        public System.Nullable<byte> TintTemplate {
            get {
                return this._TintTemplate;
            }
            set {
                if ((this._TintTemplate != value)) {
                    this._TintTemplate = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_SiteName", DbType = "VarChar(100)")]
        public string SiteName {
            get {
                return this._SiteName;
            }
            set {
                if ((this._SiteName != value)) {
                    this._SiteName = value;
                }
            }
        }
    }

    public partial class SpSiteVisitGetRDEResult {

        private System.Nullable<int> _SiteVisitID;

        private System.Nullable<int> _SiteID;

        private string _VisitName;

        private string _Collector;

        private System.Nullable<int> _DateStart;

        private System.Nullable<int> _DateEnd;

        private System.Nullable<int> _Changes;

        private System.Nullable<int> _TemplateID;

        private System.Nullable<int> _Locked;

        public SpSiteVisitGetRDEResult() {
        }

        [Column(Storage = "_SiteVisitID", DbType = "Int")]
        public System.Nullable<int> SiteVisitID {
            get {
                return this._SiteVisitID;
            }
            set {
                if ((this._SiteVisitID != value)) {
                    this._SiteVisitID = value;
                }
            }
        }

        [Column(Storage = "_SiteID", DbType = "Int")]
        public System.Nullable<int> SiteID {
            get {
                return this._SiteID;
            }
            set {
                if ((this._SiteID != value)) {
                    this._SiteID = value;
                }
            }
        }

        [Column(Storage = "_VisitName", DbType = "VarChar(255)")]
        public string VisitName {
            get {
                return this._VisitName;
            }
            set {
                if ((this._VisitName != value)) {
                    this._VisitName = value;
                }
            }
        }

        [Column(Storage = "_Collector", DbType = "VarChar(255)")]
        public string Collector {
            get {
                return this._Collector;
            }
            set {
                if ((this._Collector != value)) {
                    this._Collector = value;
                }
            }
        }

        [Column(Storage = "_DateStart", DbType = "Int")]
        public System.Nullable<int> DateStart {
            get {
                return this._DateStart;
            }
            set {
                if ((this._DateStart != value)) {
                    this._DateStart = value;
                }
            }
        }

        [Column(Storage = "_DateEnd", DbType = "Int")]
        public System.Nullable<int> DateEnd {
            get {
                return this._DateEnd;
            }
            set {
                if ((this._DateEnd != value)) {
                    this._DateEnd = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_TemplateID", DbType = "Int")]
        public System.Nullable<int> TemplateID {
            get {
                return this._TemplateID;
            }
            set {
                if ((this._TemplateID != value)) {
                    this._TemplateID = value;
                }
            }
        }

        [Column(Storage = "_Locked", DbType = "Int")]
        public System.Nullable<int> Locked {
            get {
                return this._Locked;
            }
            set {
                if ((this._Locked != value)) {
                    this._Locked = value;
                }
            }
        }
    }

    public partial class SpSiteVisitGetSiteIDResult {

        private System.Nullable<int> _IntSiteID;

        public SpSiteVisitGetSiteIDResult() {
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteVisitImportGetIDResult {

        private System.Nullable<int> _NewSiteID;

        public SpSiteVisitImportGetIDResult() {
        }

        [Column(Storage = "_NewSiteID", DbType = "Int")]
        public System.Nullable<int> NewSiteID {
            get {
                return this._NewSiteID;
            }
            set {
                if ((this._NewSiteID != value)) {
                    this._NewSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteVisitInsertResult {

        private System.Nullable<int> _NewSiteID;

        public SpSiteVisitInsertResult() {
        }

        [Column(Storage = "_NewSiteID", DbType = "Int")]
        public System.Nullable<int> NewSiteID {
            get {
                return this._NewSiteID;
            }
            set {
                if ((this._NewSiteID != value)) {
                    this._NewSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteVisitInsertTemplateResult {

        private System.Nullable<int> _NewSiteID;

        public SpSiteVisitInsertTemplateResult() {
        }

        [Column(Storage = "_NewSiteID", DbType = "Int")]
        public System.Nullable<int> NewSiteID {
            get {
                return this._NewSiteID;
            }
            set {
                if ((this._NewSiteID != value)) {
                    this._NewSiteID = value;
                }
            }
        }
    }

    public partial class SpSiteVisitListResult {

        private System.Nullable<int> _ID;

        private string _DisplayText;

        private string _ElemType;

        public SpSiteVisitListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_DisplayText", DbType = "VarChar(255)")]
        public string DisplayText {
            get {
                return this._DisplayText;
            }
            set {
                if ((this._DisplayText != value)) {
                    this._DisplayText = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(9)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }
    }

    public partial class SpSiteVisitListTemplatesResult {

        private System.Nullable<int> _ElemID;

        private string _Name;

        private string _ElemType;

        public SpSiteVisitListTemplatesResult() {
        }

        [Column(Storage = "_ElemID", DbType = "Int")]
        public System.Nullable<int> ElemID {
            get {
                return this._ElemID;
            }
            set {
                if ((this._ElemID != value)) {
                    this._ElemID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(9)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }
    }

    public partial class SpSiteVisitLookupResult {

        private System.Nullable<int> _ID;

        private string _Name;

        public SpSiteVisitLookupResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name {
            get {
                return this._Name;
            }
            set {
                if ((this._Name != value)) {
                    this._Name = value;
                }
            }
        }
    }

    public partial class SpTraitAppliesGetResult {

        private System.Nullable<int> _IntTraitDefaultID;

        private System.Nullable<int> _IntMorphologyProjectID;

        private string _ProjectName;

        private System.Nullable<int> _IntMorphologyViewID;

        private string _ViewName;

        private System.Nullable<int> _IntCharacterID;

        private string _CharacterName;

        private System.Nullable<int> _IntCharacterStateID;

        private string _StateName;

        private System.Nullable<int> _IntBiotaID;

        private string _TaxonName;

        private System.Nullable<int> _Changes;

        public SpTraitAppliesGetResult() {
        }

        [Column(Name = "intTraitDefaultID", Storage = "_IntTraitDefaultID", DbType = "Int")]
        public System.Nullable<int> IntTraitDefaultID {
            get {
                return this._IntTraitDefaultID;
            }
            set {
                if ((this._IntTraitDefaultID != value)) {
                    this._IntTraitDefaultID = value;
                }
            }
        }

        [Column(Name = "intMorphologyProjectID", Storage = "_IntMorphologyProjectID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyProjectID {
            get {
                return this._IntMorphologyProjectID;
            }
            set {
                if ((this._IntMorphologyProjectID != value)) {
                    this._IntMorphologyProjectID = value;
                }
            }
        }

        [Column(Storage = "_ProjectName", DbType = "VarChar(255)")]
        public string ProjectName {
            get {
                return this._ProjectName;
            }
            set {
                if ((this._ProjectName != value)) {
                    this._ProjectName = value;
                }
            }
        }

        [Column(Name = "intMorphologyViewID", Storage = "_IntMorphologyViewID", DbType = "Int")]
        public System.Nullable<int> IntMorphologyViewID {
            get {
                return this._IntMorphologyViewID;
            }
            set {
                if ((this._IntMorphologyViewID != value)) {
                    this._IntMorphologyViewID = value;
                }
            }
        }

        [Column(Storage = "_ViewName", DbType = "VarChar(255)")]
        public string ViewName {
            get {
                return this._ViewName;
            }
            set {
                if ((this._ViewName != value)) {
                    this._ViewName = value;
                }
            }
        }

        [Column(Name = "intCharacterID", Storage = "_IntCharacterID", DbType = "Int")]
        public System.Nullable<int> IntCharacterID {
            get {
                return this._IntCharacterID;
            }
            set {
                if ((this._IntCharacterID != value)) {
                    this._IntCharacterID = value;
                }
            }
        }

        [Column(Storage = "_CharacterName", DbType = "VarChar(2000)")]
        public string CharacterName {
            get {
                return this._CharacterName;
            }
            set {
                if ((this._CharacterName != value)) {
                    this._CharacterName = value;
                }
            }
        }

        [Column(Name = "intCharacterStateID", Storage = "_IntCharacterStateID", DbType = "Int")]
        public System.Nullable<int> IntCharacterStateID {
            get {
                return this._IntCharacterStateID;
            }
            set {
                if ((this._IntCharacterStateID != value)) {
                    this._IntCharacterStateID = value;
                }
            }
        }

        [Column(Storage = "_StateName", DbType = "VarChar(2000)")]
        public string StateName {
            get {
                return this._StateName;
            }
            set {
                if ((this._StateName != value)) {
                    this._StateName = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Storage = "_TaxonName", DbType = "VarChar(200)")]
        public string TaxonName {
            get {
                return this._TaxonName;
            }
            set {
                if ((this._TaxonName != value)) {
                    this._TaxonName = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpTraitDefaultListResult {

        private System.Nullable<int> _IntTraitTypeID;

        private string _VchrTraitType;

        private System.Nullable<int> _IntCategoryID;

        private string _VchrDataType;

        private string _VchrValidationStr;

        public SpTraitDefaultListResult() {
        }

        [Column(Name = "intTraitTypeID", Storage = "_IntTraitTypeID", DbType = "Int")]
        public System.Nullable<int> IntTraitTypeID {
            get {
                return this._IntTraitTypeID;
            }
            set {
                if ((this._IntTraitTypeID != value)) {
                    this._IntTraitTypeID = value;
                }
            }
        }

        [Column(Name = "vchrTraitType", Storage = "_VchrTraitType", DbType = "VarChar(255)")]
        public string VchrTraitType {
            get {
                return this._VchrTraitType;
            }
            set {
                if ((this._VchrTraitType != value)) {
                    this._VchrTraitType = value;
                }
            }
        }

        [Column(Name = "intCategoryID", Storage = "_IntCategoryID", DbType = "Int")]
        public System.Nullable<int> IntCategoryID {
            get {
                return this._IntCategoryID;
            }
            set {
                if ((this._IntCategoryID != value)) {
                    this._IntCategoryID = value;
                }
            }
        }

        [Column(Name = "vchrDataType", Storage = "_VchrDataType", DbType = "VarChar(20)")]
        public string VchrDataType {
            get {
                return this._VchrDataType;
            }
            set {
                if ((this._VchrDataType != value)) {
                    this._VchrDataType = value;
                }
            }
        }

        [Column(Name = "vchrValidationStr", Storage = "_VchrValidationStr", DbType = "VarChar(255)")]
        public string VchrValidationStr {
            get {
                return this._VchrValidationStr;
            }
            set {
                if ((this._VchrValidationStr != value)) {
                    this._VchrValidationStr = value;
                }
            }
        }
    }

    public partial class SpTraitImportResult {

        private System.Nullable<int> _IntTraitID;

        private System.Nullable<int> _IntTraitCatID;

        private System.Nullable<int> _IntIntraCatID;

        private System.Nullable<int> _IntTraitTypeID;

        private string _VchrValue;

        private string _VchrComment;

        private System.Nullable<bool> _BitUseInReports;

        private System.Nullable<System.Guid> _GUID;

        public SpTraitImportResult() {
        }

        [Column(Name = "intTraitID", Storage = "_IntTraitID", DbType = "Int")]
        public System.Nullable<int> IntTraitID {
            get {
                return this._IntTraitID;
            }
            set {
                if ((this._IntTraitID != value)) {
                    this._IntTraitID = value;
                }
            }
        }

        [Column(Name = "intTraitCatID", Storage = "_IntTraitCatID", DbType = "Int")]
        public System.Nullable<int> IntTraitCatID {
            get {
                return this._IntTraitCatID;
            }
            set {
                if ((this._IntTraitCatID != value)) {
                    this._IntTraitCatID = value;
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntIntraCatID", DbType = "Int")]
        public System.Nullable<int> IntIntraCatID {
            get {
                return this._IntIntraCatID;
            }
            set {
                if ((this._IntIntraCatID != value)) {
                    this._IntIntraCatID = value;
                }
            }
        }

        [Column(Name = "intTraitTypeID", Storage = "_IntTraitTypeID", DbType = "Int")]
        public System.Nullable<int> IntTraitTypeID {
            get {
                return this._IntTraitTypeID;
            }
            set {
                if ((this._IntTraitTypeID != value)) {
                    this._IntTraitTypeID = value;
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_VchrValue", DbType = "VarChar(255)")]
        public string VchrValue {
            get {
                return this._VchrValue;
            }
            set {
                if ((this._VchrValue != value)) {
                    this._VchrValue = value;
                }
            }
        }

        [Column(Name = "vchrComment", Storage = "_VchrComment", DbType = "VarChar(2000)")]
        public string VchrComment {
            get {
                return this._VchrComment;
            }
            set {
                if ((this._VchrComment != value)) {
                    this._VchrComment = value;
                }
            }
        }

        [Column(Name = "bitUseInReports", Storage = "_BitUseInReports", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReports {
            get {
                return this._BitUseInReports;
            }
            set {
                if ((this._BitUseInReports != value)) {
                    this._BitUseInReports = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpTraitInsertResult1 {

        private System.Nullable<decimal> _NewTraitID;

        public SpTraitInsertResult1() {
        }

        [Column(Storage = "_NewTraitID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> NewTraitID {
            get {
                return this._NewTraitID;
            }
            set {
                if ((this._NewTraitID != value)) {
                    this._NewTraitID = value;
                }
            }
        }
    }

    public partial class SpTraitInsertResult2 {

        private System.Nullable<int> _NewTraitID;

        public SpTraitInsertResult2() {
        }

        [Column(Storage = "_NewTraitID", DbType = "Int")]
        public System.Nullable<int> NewTraitID {
            get {
                return this._NewTraitID;
            }
            set {
                if ((this._NewTraitID != value)) {
                    this._NewTraitID = value;
                }
            }
        }
    }

    public partial class SpTraitTypeGetResult {

        private System.Nullable<int> _ID;

        private string _Trait;

        private string _DataType;

        private string _Validation;

        public SpTraitTypeGetResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Trait", DbType = "VarChar(255)")]
        public string Trait {
            get {
                return this._Trait;
            }
            set {
                if ((this._Trait != value)) {
                    this._Trait = value;
                }
            }
        }

        [Column(Storage = "_DataType", DbType = "VarChar(20)")]
        public string DataType {
            get {
                return this._DataType;
            }
            set {
                if ((this._DataType != value)) {
                    this._DataType = value;
                }
            }
        }

        [Column(Storage = "_Validation", DbType = "VarChar(255)")]
        public string Validation {
            get {
                return this._Validation;
            }
            set {
                if ((this._Validation != value)) {
                    this._Validation = value;
                }
            }
        }
    }

    public partial class SpTraitTypeListResult {

        private System.Nullable<int> _ID;

        private string _Trait;

        private string _DataType;

        private string _Validation;

        public SpTraitTypeListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Trait", DbType = "VarChar(255)")]
        public string Trait {
            get {
                return this._Trait;
            }
            set {
                if ((this._Trait != value)) {
                    this._Trait = value;
                }
            }
        }

        [Column(Storage = "_DataType", DbType = "VarChar(20)")]
        public string DataType {
            get {
                return this._DataType;
            }
            set {
                if ((this._DataType != value)) {
                    this._DataType = value;
                }
            }
        }

        [Column(Storage = "_Validation", DbType = "VarChar(255)")]
        public string Validation {
            get {
                return this._Validation;
            }
            set {
                if ((this._Validation != value)) {
                    this._Validation = value;
                }
            }
        }
    }

    public partial class SpTraitTypeListForCategoryResult {

        private System.Nullable<int> _ID;

        private System.Nullable<int> _CategoryID;

        private string _Trait;

        public SpTraitTypeListForCategoryResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this._CategoryID = value;
                }
            }
        }

        [Column(Storage = "_Trait", DbType = "VarChar(255)")]
        public string Trait {
            get {
                return this._Trait;
            }
            set {
                if ((this._Trait != value)) {
                    this._Trait = value;
                }
            }
        }
    }

    public partial class SpTrapGetResult {

        private System.Nullable<int> _IntTrapID;

        private System.Nullable<int> _IntSiteID;

        private string _VchrTrapName;

        private string _VchrTrapType;

        private string _VchrDescription;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        private string _SiteName;

        public SpTrapGetResult() {
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }

        [Column(Name = "intSiteID", Storage = "_IntSiteID", DbType = "Int")]
        public System.Nullable<int> IntSiteID {
            get {
                return this._IntSiteID;
            }
            set {
                if ((this._IntSiteID != value)) {
                    this._IntSiteID = value;
                }
            }
        }

        [Column(Name = "vchrTrapName", Storage = "_VchrTrapName", DbType = "VarChar(100)")]
        public string VchrTrapName {
            get {
                return this._VchrTrapName;
            }
            set {
                if ((this._VchrTrapName != value)) {
                    this._VchrTrapName = value;
                }
            }
        }

        [Column(Name = "vchrTrapType", Storage = "_VchrTrapType", DbType = "VarChar(50)")]
        public string VchrTrapType {
            get {
                return this._VchrTrapType;
            }
            set {
                if ((this._VchrTrapType != value)) {
                    this._VchrTrapType = value;
                }
            }
        }

        [Column(Name = "vchrDescription", Storage = "_VchrDescription", DbType = "VarChar(255)")]
        public string VchrDescription {
            get {
                return this._VchrDescription;
            }
            set {
                if ((this._VchrDescription != value)) {
                    this._VchrDescription = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_SiteName", DbType = "VarChar(100)")]
        public string SiteName {
            get {
                return this._SiteName;
            }
            set {
                if ((this._SiteName != value)) {
                    this._SiteName = value;
                }
            }
        }
    }

    public partial class SpTrapListResult {

        private System.Nullable<int> _ID;

        private string _DisplayText;

        private string _ElemType;

        public SpTrapListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_DisplayText", DbType = "VarChar(100)")]
        public string DisplayText {
            get {
                return this._DisplayText;
            }
            set {
                if ((this._DisplayText != value)) {
                    this._DisplayText = value;
                }
            }
        }

        [Column(Storage = "_ElemType", DbType = "VarChar(4)")]
        public string ElemType {
            get {
                return this._ElemType;
            }
            set {
                if ((this._ElemType != value)) {
                    this._ElemType = value;
                }
            }
        }
    }

    public partial class SpTrapListForSiteResult {

        private System.Nullable<int> _IntTrapID;

        private string _VchrTrapName;

        public SpTrapListForSiteResult() {
        }

        [Column(Name = "intTrapID", Storage = "_IntTrapID", DbType = "Int")]
        public System.Nullable<int> IntTrapID {
            get {
                return this._IntTrapID;
            }
            set {
                if ((this._IntTrapID != value)) {
                    this._IntTrapID = value;
                }
            }
        }

        [Column(Name = "vchrTrapName", Storage = "_VchrTrapName", DbType = "VarChar(100)")]
        public string VchrTrapName {
            get {
                return this._VchrTrapName;
            }
            set {
                if ((this._VchrTrapName != value)) {
                    this._VchrTrapName = value;
                }
            }
        }
    }

    public partial class SpTypeDataListResult {

        private System.Nullable<int> _ID;

        private string _Type;

        private string _Category;

        private System.Nullable<int> _Changes;

        public SpTypeDataListResult() {
        }

        [Column(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID {
            get {
                return this._ID;
            }
            set {
                if ((this._ID != value)) {
                    this._ID = value;
                }
            }
        }

        [Column(Storage = "_Type", DbType = "VarChar(255)")]
        public string Type {
            get {
                return this._Type;
            }
            set {
                if ((this._Type != value)) {
                    this._Type = value;
                }
            }
        }

        [Column(Storage = "_Category", DbType = "VarChar(50)")]
        public string Category {
            get {
                return this._Category;
            }
            set {
                if ((this._Category != value)) {
                    this._Category = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }
    }

    public partial class SpUserGetResult {

        private string _UserName;

        private string _GroupName;

        private System.Nullable<int> _GroupID;

        private string _FullName;

        private string _Description;

        private string _Notes;

        private System.Nullable<bool> _CanCreateUsers;

        public SpUserGetResult() {
        }

        [Column(Name = "User Name", Storage = "_UserName", DbType = "VarChar(128)")]
        public string UserName {
            get {
                return this._UserName;
            }
            set {
                if ((this._UserName != value)) {
                    this._UserName = value;
                }
            }
        }

        [Column(Name = "Group Name", Storage = "_GroupName", DbType = "VarChar(30)")]
        public string GroupName {
            get {
                return this._GroupName;
            }
            set {
                if ((this._GroupName != value)) {
                    this._GroupName = value;
                }
            }
        }

        [Column(Name = "Group ID", Storage = "_GroupID", DbType = "Int")]
        public System.Nullable<int> GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this._GroupID = value;
                }
            }
        }

        [Column(Name = "Full Name", Storage = "_FullName", DbType = "VarChar(100)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this._FullName = value;
                }
            }
        }

        [Column(Storage = "_Description", DbType = "VarChar(200)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this._Description = value;
                }
            }
        }

        [Column(Storage = "_Notes", DbType = "VarChar(500)")]
        public string Notes {
            get {
                return this._Notes;
            }
            set {
                if ((this._Notes != value)) {
                    this._Notes = value;
                }
            }
        }

        [Column(Storage = "_CanCreateUsers", DbType = "Bit")]
        public System.Nullable<bool> CanCreateUsers {
            get {
                return this._CanCreateUsers;
            }
            set {
                if ((this._CanCreateUsers != value)) {
                    this._CanCreateUsers = value;
                }
            }
        }
    }

    public partial class SpUserListResult {

        private string _UserName;

        private string _Group;

        private string _FullName;

        private string _Description;

        private System.Nullable<bool> _CanCreateUsers;

        public SpUserListResult() {
        }

        [Column(Name = "User Name", Storage = "_UserName", DbType = "VarChar(128)")]
        public string UserName {
            get {
                return this._UserName;
            }
            set {
                if ((this._UserName != value)) {
                    this._UserName = value;
                }
            }
        }

        [Column(Storage = "_Group", DbType = "VarChar(30)")]
        public string Group {
            get {
                return this._Group;
            }
            set {
                if ((this._Group != value)) {
                    this._Group = value;
                }
            }
        }

        [Column(Name = "Full Name", Storage = "_FullName", DbType = "VarChar(100)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this._FullName = value;
                }
            }
        }

        [Column(Storage = "_Description", DbType = "VarChar(200)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this._Description = value;
                }
            }
        }

        [Column(Storage = "_CanCreateUsers", DbType = "Bit")]
        public System.Nullable<bool> CanCreateUsers {
            get {
                return this._CanCreateUsers;
            }
            set {
                if ((this._CanCreateUsers != value)) {
                    this._CanCreateUsers = value;
                }
            }
        }
    }

    public partial class SpUserListWithIDsResult {

        private System.Nullable<int> _UserID;

        private System.Nullable<int> _GroupID;

        private string _UserName;

        private string _Group;

        private string _FullName;

        private string _Description;

        private System.Nullable<bool> _CanCreateUsers;

        public SpUserListWithIDsResult() {
        }

        [Column(Storage = "_UserID", DbType = "Int")]
        public System.Nullable<int> UserID {
            get {
                return this._UserID;
            }
            set {
                if ((this._UserID != value)) {
                    this._UserID = value;
                }
            }
        }

        [Column(Storage = "_GroupID", DbType = "Int")]
        public System.Nullable<int> GroupID {
            get {
                return this._GroupID;
            }
            set {
                if ((this._GroupID != value)) {
                    this._GroupID = value;
                }
            }
        }

        [Column(Name = "User Name", Storage = "_UserName", DbType = "VarChar(128)")]
        public string UserName {
            get {
                return this._UserName;
            }
            set {
                if ((this._UserName != value)) {
                    this._UserName = value;
                }
            }
        }

        [Column(Storage = "_Group", DbType = "VarChar(30)")]
        public string Group {
            get {
                return this._Group;
            }
            set {
                if ((this._Group != value)) {
                    this._Group = value;
                }
            }
        }

        [Column(Name = "Full Name", Storage = "_FullName", DbType = "VarChar(100)")]
        public string FullName {
            get {
                return this._FullName;
            }
            set {
                if ((this._FullName != value)) {
                    this._FullName = value;
                }
            }
        }

        [Column(Storage = "_Description", DbType = "VarChar(200)")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this._Description = value;
                }
            }
        }

        [Column(Storage = "_CanCreateUsers", DbType = "Bit")]
        public System.Nullable<bool> CanCreateUsers {
            get {
                return this._CanCreateUsers;
            }
            set {
                if ((this._CanCreateUsers != value)) {
                    this._CanCreateUsers = value;
                }
            }
        }
    }

    public partial class SpUserPermissionsForBiotaResult {

        private System.Nullable<int> _PermMask1;

        private System.Nullable<int> _PermMask2;

        private System.Nullable<int> _NumOwners;

        public SpUserPermissionsForBiotaResult() {
        }

        [Column(Storage = "_PermMask1", DbType = "Int")]
        public System.Nullable<int> PermMask1 {
            get {
                return this._PermMask1;
            }
            set {
                if ((this._PermMask1 != value)) {
                    this._PermMask1 = value;
                }
            }
        }

        [Column(Storage = "_PermMask2", DbType = "Int")]
        public System.Nullable<int> PermMask2 {
            get {
                return this._PermMask2;
            }
            set {
                if ((this._PermMask2 != value)) {
                    this._PermMask2 = value;
                }
            }
        }

        [Column(Storage = "_NumOwners", DbType = "Int")]
        public System.Nullable<int> NumOwners {
            get {
                return this._NumOwners;
            }
            set {
                if ((this._NumOwners != value)) {
                    this._NumOwners = value;
                }
            }
        }
    }

    public partial class SpUserPermissionsForBiotaUsingIDsResult {

        private System.Nullable<int> _PermMask1;

        private System.Nullable<int> _PermMask2;

        private System.Nullable<int> _NumOwners;

        public SpUserPermissionsForBiotaUsingIDsResult() {
        }

        [Column(Storage = "_PermMask1", DbType = "Int")]
        public System.Nullable<int> PermMask1 {
            get {
                return this._PermMask1;
            }
            set {
                if ((this._PermMask1 != value)) {
                    this._PermMask1 = value;
                }
            }
        }

        [Column(Storage = "_PermMask2", DbType = "Int")]
        public System.Nullable<int> PermMask2 {
            get {
                return this._PermMask2;
            }
            set {
                if ((this._PermMask2 != value)) {
                    this._PermMask2 = value;
                }
            }
        }

        [Column(Storage = "_NumOwners", DbType = "Int")]
        public System.Nullable<int> NumOwners {
            get {
                return this._NumOwners;
            }
            set {
                if ((this._NumOwners != value)) {
                    this._NumOwners = value;
                }
            }
        }
    }

    public partial class SpUserPermissionsInsertUpdateResult {

        private System.Nullable<int> _IntUserID;

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntPermMask1;

        private System.Nullable<int> _IntPermMask2;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntGroupID;

        public SpUserPermissionsInsertUpdateResult() {
        }

        [Column(Name = "intUserID", Storage = "_IntUserID", DbType = "Int")]
        public System.Nullable<int> IntUserID {
            get {
                return this._IntUserID;
            }
            set {
                if ((this._IntUserID != value)) {
                    this._IntUserID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intPermMask1", Storage = "_IntPermMask1", DbType = "Int")]
        public System.Nullable<int> IntPermMask1 {
            get {
                return this._IntPermMask1;
            }
            set {
                if ((this._IntPermMask1 != value)) {
                    this._IntPermMask1 = value;
                }
            }
        }

        [Column(Name = "intPermMask2", Storage = "_IntPermMask2", DbType = "Int")]
        public System.Nullable<int> IntPermMask2 {
            get {
                return this._IntPermMask2;
            }
            set {
                if ((this._IntPermMask2 != value)) {
                    this._IntPermMask2 = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intGroupID", Storage = "_IntGroupID", DbType = "Int")]
        public System.Nullable<int> IntGroupID {
            get {
                return this._IntGroupID;
            }
            set {
                if ((this._IntGroupID != value)) {
                    this._IntGroupID = value;
                }
            }
        }
    }

    public partial class SpUserPermissionsInsertUpdateUsingIDsResult {

        private System.Nullable<int> _IntUserID;

        private System.Nullable<int> _IntBiotaID;

        private System.Nullable<int> _IntPermMask1;

        private System.Nullable<int> _IntPermMask2;

        private System.Nullable<System.Guid> _GUID;

        private System.Nullable<int> _IntGroupID;

        public SpUserPermissionsInsertUpdateUsingIDsResult() {
        }

        [Column(Name = "intUserID", Storage = "_IntUserID", DbType = "Int")]
        public System.Nullable<int> IntUserID {
            get {
                return this._IntUserID;
            }
            set {
                if ((this._IntUserID != value)) {
                    this._IntUserID = value;
                }
            }
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }

        [Column(Name = "intPermMask1", Storage = "_IntPermMask1", DbType = "Int")]
        public System.Nullable<int> IntPermMask1 {
            get {
                return this._IntPermMask1;
            }
            set {
                if ((this._IntPermMask1 != value)) {
                    this._IntPermMask1 = value;
                }
            }
        }

        [Column(Name = "intPermMask2", Storage = "_IntPermMask2", DbType = "Int")]
        public System.Nullable<int> IntPermMask2 {
            get {
                return this._IntPermMask2;
            }
            set {
                if ((this._IntPermMask2 != value)) {
                    this._IntPermMask2 = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Name = "intGroupID", Storage = "_IntGroupID", DbType = "Int")]
        public System.Nullable<int> IntGroupID {
            get {
                return this._IntGroupID;
            }
            set {
                if ((this._IntGroupID != value)) {
                    this._IntGroupID = value;
                }
            }
        }
    }

    public partial class SpUserPermissionsOwnersForBiotaResult {

        private string _VchrName;

        private string _VchrFullName;

        public SpUserPermissionsOwnersForBiotaResult() {
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(128)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrFullName", Storage = "_VchrFullName", DbType = "VarChar(100)")]
        public string VchrFullName {
            get {
                return this._VchrFullName;
            }
            set {
                if ((this._VchrFullName != value)) {
                    this._VchrFullName = value;
                }
            }
        }
    }

    public partial class SpVersionResult {

        private string _Version;

        public SpVersionResult() {
        }

        [Column(Storage = "_Version", DbType = "VarChar(5)")]
        public string Version {
            get {
                return this._Version;
            }
            set {
                if ((this._Version != value)) {
                    this._Version = value;
                }
            }
        }
    }

    public partial class SpXMLExportMultimediaGetResult {

        private System.Nullable<int> _IntMultimediaID;

        private string _VchrName;

        private string _VchrNumber;

        private string _VchrArtist;

        private string _VchrDateRecorded;

        private string _VchrOwner;

        private string _VchrFileExtension;

        private System.Nullable<int> _IntSizeInBytes;

        private System.Data.Linq.Binary _ImgMultimedia;

        private string _TxtCopyright;

        private System.Nullable<System.DateTime> _DtDateCreated;

        private string _VchrWhoCreated;

        private System.Nullable<System.DateTime> _DtDateLastUpdated;

        private string _VchrWhoLastUpdated;

        private System.Nullable<System.Guid> _GUID;

        public SpXMLExportMultimediaGetResult() {
        }

        [Column(Name = "intMultimediaID", Storage = "_IntMultimediaID", DbType = "Int")]
        public System.Nullable<int> IntMultimediaID {
            get {
                return this._IntMultimediaID;
            }
            set {
                if ((this._IntMultimediaID != value)) {
                    this._IntMultimediaID = value;
                }
            }
        }

        [Column(Name = "vchrName", Storage = "_VchrName", DbType = "VarChar(255)")]
        public string VchrName {
            get {
                return this._VchrName;
            }
            set {
                if ((this._VchrName != value)) {
                    this._VchrName = value;
                }
            }
        }

        [Column(Name = "vchrNumber", Storage = "_VchrNumber", DbType = "VarChar(255)")]
        public string VchrNumber {
            get {
                return this._VchrNumber;
            }
            set {
                if ((this._VchrNumber != value)) {
                    this._VchrNumber = value;
                }
            }
        }

        [Column(Name = "vchrArtist", Storage = "_VchrArtist", DbType = "VarChar(255)")]
        public string VchrArtist {
            get {
                return this._VchrArtist;
            }
            set {
                if ((this._VchrArtist != value)) {
                    this._VchrArtist = value;
                }
            }
        }

        [Column(Name = "vchrDateRecorded", Storage = "_VchrDateRecorded", DbType = "VarChar(50)")]
        public string VchrDateRecorded {
            get {
                return this._VchrDateRecorded;
            }
            set {
                if ((this._VchrDateRecorded != value)) {
                    this._VchrDateRecorded = value;
                }
            }
        }

        [Column(Name = "vchrOwner", Storage = "_VchrOwner", DbType = "VarChar(255)")]
        public string VchrOwner {
            get {
                return this._VchrOwner;
            }
            set {
                if ((this._VchrOwner != value)) {
                    this._VchrOwner = value;
                }
            }
        }

        [Column(Name = "vchrFileExtension", Storage = "_VchrFileExtension", DbType = "VarChar(20)")]
        public string VchrFileExtension {
            get {
                return this._VchrFileExtension;
            }
            set {
                if ((this._VchrFileExtension != value)) {
                    this._VchrFileExtension = value;
                }
            }
        }

        [Column(Name = "intSizeInBytes", Storage = "_IntSizeInBytes", DbType = "Int")]
        public System.Nullable<int> IntSizeInBytes {
            get {
                return this._IntSizeInBytes;
            }
            set {
                if ((this._IntSizeInBytes != value)) {
                    this._IntSizeInBytes = value;
                }
            }
        }

        [Column(Name = "imgMultimedia", Storage = "_ImgMultimedia", DbType = "Image", CanBeNull = true)]
        public System.Data.Linq.Binary ImgMultimedia {
            get {
                return this._ImgMultimedia;
            }
            set {
                if ((this._ImgMultimedia != value)) {
                    this._ImgMultimedia = value;
                }
            }
        }

        [Column(Name = "txtCopyright", Storage = "_TxtCopyright", DbType = "Text")]
        public string TxtCopyright {
            get {
                return this._TxtCopyright;
            }
            set {
                if ((this._TxtCopyright != value)) {
                    this._TxtCopyright = value;
                }
            }
        }

        [Column(Name = "dtDateCreated", Storage = "_DtDateCreated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateCreated {
            get {
                return this._DtDateCreated;
            }
            set {
                if ((this._DtDateCreated != value)) {
                    this._DtDateCreated = value;
                }
            }
        }

        [Column(Name = "vchrWhoCreated", Storage = "_VchrWhoCreated", DbType = "VarChar(50)")]
        public string VchrWhoCreated {
            get {
                return this._VchrWhoCreated;
            }
            set {
                if ((this._VchrWhoCreated != value)) {
                    this._VchrWhoCreated = value;
                }
            }
        }

        [Column(Name = "dtDateLastUpdated", Storage = "_DtDateLastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DtDateLastUpdated {
            get {
                return this._DtDateLastUpdated;
            }
            set {
                if ((this._DtDateLastUpdated != value)) {
                    this._DtDateLastUpdated = value;
                }
            }
        }

        [Column(Name = "vchrWhoLastUpdated", Storage = "_VchrWhoLastUpdated", DbType = "VarChar(50)")]
        public string VchrWhoLastUpdated {
            get {
                return this._VchrWhoLastUpdated;
            }
            set {
                if ((this._VchrWhoLastUpdated != value)) {
                    this._VchrWhoLastUpdated = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpXMLExportMultimediaListResult {

        private System.Nullable<int> _IntMultimediaLinkID;

        private System.Nullable<int> _IntMultimediaTypeID;

        private System.Nullable<int> _IntCatID;

        private System.Nullable<int> _IntIntraCatID;

        private System.Nullable<int> _IntMultimediaID;

        private string _VchrCaption;

        private System.Nullable<bool> _BitUseInReport;

        private System.Nullable<System.Guid> _GUID;

        private string _MultimediaType;

        public SpXMLExportMultimediaListResult() {
        }

        [Column(Name = "intMultimediaLinkID", Storage = "_IntMultimediaLinkID", DbType = "Int")]
        public System.Nullable<int> IntMultimediaLinkID {
            get {
                return this._IntMultimediaLinkID;
            }
            set {
                if ((this._IntMultimediaLinkID != value)) {
                    this._IntMultimediaLinkID = value;
                }
            }
        }

        [Column(Name = "intMultimediaTypeID", Storage = "_IntMultimediaTypeID", DbType = "Int")]
        public System.Nullable<int> IntMultimediaTypeID {
            get {
                return this._IntMultimediaTypeID;
            }
            set {
                if ((this._IntMultimediaTypeID != value)) {
                    this._IntMultimediaTypeID = value;
                }
            }
        }

        [Column(Name = "intCatID", Storage = "_IntCatID", DbType = "Int")]
        public System.Nullable<int> IntCatID {
            get {
                return this._IntCatID;
            }
            set {
                if ((this._IntCatID != value)) {
                    this._IntCatID = value;
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntIntraCatID", DbType = "Int")]
        public System.Nullable<int> IntIntraCatID {
            get {
                return this._IntIntraCatID;
            }
            set {
                if ((this._IntIntraCatID != value)) {
                    this._IntIntraCatID = value;
                }
            }
        }

        [Column(Name = "intMultimediaID", Storage = "_IntMultimediaID", DbType = "Int")]
        public System.Nullable<int> IntMultimediaID {
            get {
                return this._IntMultimediaID;
            }
            set {
                if ((this._IntMultimediaID != value)) {
                    this._IntMultimediaID = value;
                }
            }
        }

        [Column(Name = "vchrCaption", Storage = "_VchrCaption", DbType = "VarChar(255)")]
        public string VchrCaption {
            get {
                return this._VchrCaption;
            }
            set {
                if ((this._VchrCaption != value)) {
                    this._VchrCaption = value;
                }
            }
        }

        [Column(Name = "bitUseInReport", Storage = "_BitUseInReport", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReport {
            get {
                return this._BitUseInReport;
            }
            set {
                if ((this._BitUseInReport != value)) {
                    this._BitUseInReport = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }

        [Column(Storage = "_MultimediaType", DbType = "VarChar(255)")]
        public string MultimediaType {
            get {
                return this._MultimediaType;
            }
            set {
                if ((this._MultimediaType != value)) {
                    this._MultimediaType = value;
                }
            }
        }
    }

    public partial class SpXMLExportNoteListResult {

        private System.Nullable<int> _IntNoteID;

        private string _NoteType;

        private string _TxtNote;

        private string _VchrAuthor;

        private string _TxtComments;

        private System.Nullable<bool> _BitUseInReports;

        private System.Nullable<int> _RefID;

        private string _RefCode;

        private string _VchrRefPages;

        private System.Nullable<int> _Changes;

        private System.Nullable<System.Guid> _GUID;

        public SpXMLExportNoteListResult() {
        }

        [Column(Name = "intNoteID", Storage = "_IntNoteID", DbType = "Int")]
        public System.Nullable<int> IntNoteID {
            get {
                return this._IntNoteID;
            }
            set {
                if ((this._IntNoteID != value)) {
                    this._IntNoteID = value;
                }
            }
        }

        [Column(Storage = "_NoteType", DbType = "VarChar(255)")]
        public string NoteType {
            get {
                return this._NoteType;
            }
            set {
                if ((this._NoteType != value)) {
                    this._NoteType = value;
                }
            }
        }

        [Column(Name = "txtNote", Storage = "_TxtNote", DbType = "Text")]
        public string TxtNote {
            get {
                return this._TxtNote;
            }
            set {
                if ((this._TxtNote != value)) {
                    this._TxtNote = value;
                }
            }
        }

        [Column(Name = "vchrAuthor", Storage = "_VchrAuthor", DbType = "VarChar(255)")]
        public string VchrAuthor {
            get {
                return this._VchrAuthor;
            }
            set {
                if ((this._VchrAuthor != value)) {
                    this._VchrAuthor = value;
                }
            }
        }

        [Column(Name = "txtComments", Storage = "_TxtComments", DbType = "Text")]
        public string TxtComments {
            get {
                return this._TxtComments;
            }
            set {
                if ((this._TxtComments != value)) {
                    this._TxtComments = value;
                }
            }
        }

        [Column(Name = "bitUseInReports", Storage = "_BitUseInReports", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReports {
            get {
                return this._BitUseInReports;
            }
            set {
                if ((this._BitUseInReports != value)) {
                    this._BitUseInReports = value;
                }
            }
        }

        [Column(Storage = "_RefID", DbType = "Int")]
        public System.Nullable<int> RefID {
            get {
                return this._RefID;
            }
            set {
                if ((this._RefID != value)) {
                    this._RefID = value;
                }
            }
        }

        [Column(Storage = "_RefCode", DbType = "VarChar(50)")]
        public string RefCode {
            get {
                return this._RefCode;
            }
            set {
                if ((this._RefCode != value)) {
                    this._RefCode = value;
                }
            }
        }

        [Column(Name = "vchrRefPages", Storage = "_VchrRefPages", DbType = "VarChar(100)")]
        public string VchrRefPages {
            get {
                return this._VchrRefPages;
            }
            set {
                if ((this._VchrRefPages != value)) {
                    this._VchrRefPages = value;
                }
            }
        }

        [Column(Storage = "_Changes", DbType = "Int")]
        public System.Nullable<int> Changes {
            get {
                return this._Changes;
            }
            set {
                if ((this._Changes != value)) {
                    this._Changes = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpXMLImportBiotaDefKingdomResolveResult {

        private string _KingdomCode;

        private System.Nullable<bool> _Added;

        public SpXMLImportBiotaDefKingdomResolveResult() {
        }

        [Column(Storage = "_KingdomCode", DbType = "VarChar(50)")]
        public string KingdomCode {
            get {
                return this._KingdomCode;
            }
            set {
                if ((this._KingdomCode != value)) {
                    this._KingdomCode = value;
                }
            }
        }

        [Column(Storage = "_Added", DbType = "Bit")]
        public System.Nullable<bool> Added {
            get {
                return this._Added;
            }
            set {
                if ((this._Added != value)) {
                    this._Added = value;
                }
            }
        }
    }

    public partial class SpXMLImportBiotaDefRankResolveResult {

        private string _RankCode;

        private System.Nullable<bool> _Added;

        public SpXMLImportBiotaDefRankResolveResult() {
        }

        [Column(Storage = "_RankCode", DbType = "VarChar(50)")]
        public string RankCode {
            get {
                return this._RankCode;
            }
            set {
                if ((this._RankCode != value)) {
                    this._RankCode = value;
                }
            }
        }

        [Column(Storage = "_Added", DbType = "Bit")]
        public System.Nullable<bool> Added {
            get {
                return this._Added;
            }
            set {
                if ((this._Added != value)) {
                    this._Added = value;
                }
            }
        }
    }

    public partial class SpXMLImportBiotaFindResult1 {

        private System.Nullable<int> _IntBiotaID;

        public SpXMLImportBiotaFindResult1() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Int")]
        public System.Nullable<int> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }
    }

    public partial class SpXMLImportBiotaFindResult2 {

        private System.Nullable<decimal> _IntBiotaID;

        public SpXMLImportBiotaFindResult2() {
        }

        [Column(Name = "intBiotaID", Storage = "_IntBiotaID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> IntBiotaID {
            get {
                return this._IntBiotaID;
            }
            set {
                if ((this._IntBiotaID != value)) {
                    this._IntBiotaID = value;
                }
            }
        }
    }

    public partial class SpXMLImportCategoryGetResult {

        private System.Nullable<int> _CategoryID;

        public SpXMLImportCategoryGetResult() {
        }

        [Column(Storage = "_CategoryID", DbType = "Int")]
        public System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this._CategoryID = value;
                }
            }
        }
    }

    public partial class SpXMLImportDistributionRegionResult1 {

        private System.Nullable<int> _DistributionRegionID;

        public SpXMLImportDistributionRegionResult1() {
        }

        [Column(Storage = "_DistributionRegionID", DbType = "Int")]
        public System.Nullable<int> DistributionRegionID {
            get {
                return this._DistributionRegionID;
            }
            set {
                if ((this._DistributionRegionID != value)) {
                    this._DistributionRegionID = value;
                }
            }
        }
    }

    public partial class SpXMLImportDistributionRegionResult2 {

        private System.Nullable<decimal> _DistributionRegionID;

        public SpXMLImportDistributionRegionResult2() {
        }

        [Column(Storage = "_DistributionRegionID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> DistributionRegionID {
            get {
                return this._DistributionRegionID;
            }
            set {
                if ((this._DistributionRegionID != value)) {
                    this._DistributionRegionID = value;
                }
            }
        }
    }

    public partial class SpXMLImportKeywordTypeGetResult {

        private System.Nullable<int> _KeywordTypeID;

        public SpXMLImportKeywordTypeGetResult() {
        }

        [Column(Storage = "_KeywordTypeID", DbType = "Int")]
        public System.Nullable<int> KeywordTypeID {
            get {
                return this._KeywordTypeID;
            }
            set {
                if ((this._KeywordTypeID != value)) {
                    this._KeywordTypeID = value;
                }
            }
        }
    }

    public partial class SpXMLImportMultimediaTypeGetResult {

        private System.Nullable<int> _MultimediaTypeID;

        public SpXMLImportMultimediaTypeGetResult() {
        }

        [Column(Storage = "_MultimediaTypeID", DbType = "Int")]
        public System.Nullable<int> MultimediaTypeID {
            get {
                return this._MultimediaTypeID;
            }
            set {
                if ((this._MultimediaTypeID != value)) {
                    this._MultimediaTypeID = value;
                }
            }
        }
    }

    public partial class SpXMLImportNoteTypeGetResult {

        private System.Nullable<int> _NoteTypeID;

        public SpXMLImportNoteTypeGetResult() {
        }

        [Column(Storage = "_NoteTypeID", DbType = "Int")]
        public System.Nullable<int> NoteTypeID {
            get {
                return this._NoteTypeID;
            }
            set {
                if ((this._NoteTypeID != value)) {
                    this._NoteTypeID = value;
                }
            }
        }
    }

    public partial class SpXMLImportRefLinkTypeGetResult {

        private System.Nullable<int> _RefLinkTypeID;

        public SpXMLImportRefLinkTypeGetResult() {
        }

        [Column(Storage = "_RefLinkTypeID", DbType = "Int")]
        public System.Nullable<int> RefLinkTypeID {
            get {
                return this._RefLinkTypeID;
            }
            set {
                if ((this._RefLinkTypeID != value)) {
                    this._RefLinkTypeID = value;
                }
            }
        }
    }

    public partial class SpXMLImportStorageLocationResult1 {

        private System.Nullable<int> _BiotaStorageID;

        public SpXMLImportStorageLocationResult1() {
        }

        [Column(Storage = "_BiotaStorageID", DbType = "Int")]
        public System.Nullable<int> BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this._BiotaStorageID = value;
                }
            }
        }
    }

    public partial class SpXMLImportStorageLocationResult2 {

        private System.Nullable<decimal> _BiotaStorageID;

        public SpXMLImportStorageLocationResult2() {
        }

        [Column(Storage = "_BiotaStorageID", DbType = "Decimal(38,0)")]
        public System.Nullable<decimal> BiotaStorageID {
            get {
                return this._BiotaStorageID;
            }
            set {
                if ((this._BiotaStorageID != value)) {
                    this._BiotaStorageID = value;
                }
            }
        }
    }

    public partial class SpXMLImportTraitResult {

        private System.Nullable<int> _IntTraitID;

        private System.Nullable<int> _IntTraitCatID;

        private System.Nullable<int> _IntIntraCatID;

        private System.Nullable<int> _IntTraitTypeID;

        private string _VchrValue;

        private string _VchrComment;

        private System.Nullable<bool> _BitUseInReports;

        private System.Nullable<System.Guid> _GUID;

        public SpXMLImportTraitResult() {
        }

        [Column(Name = "intTraitID", Storage = "_IntTraitID", DbType = "Int")]
        public System.Nullable<int> IntTraitID {
            get {
                return this._IntTraitID;
            }
            set {
                if ((this._IntTraitID != value)) {
                    this._IntTraitID = value;
                }
            }
        }

        [Column(Name = "intTraitCatID", Storage = "_IntTraitCatID", DbType = "Int")]
        public System.Nullable<int> IntTraitCatID {
            get {
                return this._IntTraitCatID;
            }
            set {
                if ((this._IntTraitCatID != value)) {
                    this._IntTraitCatID = value;
                }
            }
        }

        [Column(Name = "intIntraCatID", Storage = "_IntIntraCatID", DbType = "Int")]
        public System.Nullable<int> IntIntraCatID {
            get {
                return this._IntIntraCatID;
            }
            set {
                if ((this._IntIntraCatID != value)) {
                    this._IntIntraCatID = value;
                }
            }
        }

        [Column(Name = "intTraitTypeID", Storage = "_IntTraitTypeID", DbType = "Int")]
        public System.Nullable<int> IntTraitTypeID {
            get {
                return this._IntTraitTypeID;
            }
            set {
                if ((this._IntTraitTypeID != value)) {
                    this._IntTraitTypeID = value;
                }
            }
        }

        [Column(Name = "vchrValue", Storage = "_VchrValue", DbType = "VarChar(255)")]
        public string VchrValue {
            get {
                return this._VchrValue;
            }
            set {
                if ((this._VchrValue != value)) {
                    this._VchrValue = value;
                }
            }
        }

        [Column(Name = "vchrComment", Storage = "_VchrComment", DbType = "VarChar(2000)")]
        public string VchrComment {
            get {
                return this._VchrComment;
            }
            set {
                if ((this._VchrComment != value)) {
                    this._VchrComment = value;
                }
            }
        }

        [Column(Name = "bitUseInReports", Storage = "_BitUseInReports", DbType = "Bit")]
        public System.Nullable<bool> BitUseInReports {
            get {
                return this._BitUseInReports;
            }
            set {
                if ((this._BitUseInReports != value)) {
                    this._BitUseInReports = value;
                }
            }
        }

        [Column(Storage = "_GUID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> GUID {
            get {
                return this._GUID;
            }
            set {
                if ((this._GUID != value)) {
                    this._GUID = value;
                }
            }
        }
    }

    public partial class SpXMLImportTraitTypeGetResult {

        private System.Nullable<int> _TraitTypeID;

        public SpXMLImportTraitTypeGetResult() {
        }

        [Column(Storage = "_TraitTypeID", DbType = "Int")]
        public System.Nullable<int> TraitTypeID {
            get {
                return this._TraitTypeID;
            }
            set {
                if ((this._TraitTypeID != value)) {
                    this._TraitTypeID = value;
                }
            }
        }
    }
}
#pragma warning restore 1591
